basePath: /api
consumes:
- application/json
definitions:
  access_endpoint:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      data_protocols:
        items:
          description: Comma-separated list of data protocols allowed for access endpoints.
            Possible protocol values are NFS, CIFS, iSCSI, and FCP.
          enum:
          - nfs
          - cifs
          - iscsi
          - fcp
          example: nfs
          readOnly: true
          type: string
        type: array
        x-ntap-readCreate: true
      fileshare:
        description: Unique identifier of the file share for which an access endpoint
          needs to be created.
        properties:
          key:
            description: Unique identifier of the file share.
            example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=volume,uuid=f3063d27-2c71-44e5-9a69-a3927c19c8fc
            type: string
        type: object
        x-ntap-createOnly: true
      gateway:
        description: Gateway for the access endpoint.
        example: 10.132.72.12
        type: string
        x-ntap-writeOnly: true
      gateways:
        items:
          description: Gateway for the access endpoint.
          example: 10.142.56.12
          type: string
        readOnly: true
        type: array
      ip:
        description: IP address of the access endpoint. This is mandatory for CIFS,
          NFS, and iSCSI protocols. This parameter is not required for FCP protocols.
        properties:
          address:
            description: IP address of the access endpoint.
            example: 10.162.83.26
            type: string
          ha_address:
            description: IP address of the access endpoint on an HA partner node.
              This parameter is mandatory to create an iSCSI access endpoint at the
              HA partner of the LUN's home node. This parameter is not supported for
              access endpoint creation at the file share or SVM levels.
            example: 10.142.83.26
            type: string
            x-ntap-createOnly: true
          netmask:
            description: Netmask for the access endpoint. This is mandatory for CIFS,
              NFS, and iSCSI protocol. This parameter is not required for FCP protocols.
            example: 255.255.0.0
            type: string
            x-ntap-readCreate: true
        type: object
      key:
        description: Unique identifier of the access endpoint.
        example: cbd1757b-0580-11e8-bd9d-00a097d39e12:type=network_lif,lif_uuid=d0d33369-0768-11ea-9294-00a098c39e12
        readOnly: true
        type: string
      lun:
        description: Unique identifier of the LUN for which an access endpoint needs
          to be created.
        properties:
          key:
            description: Unique identifier of the LUN.
            example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=lun,uuid=d208cc7d-80a3-4755-93d4-5db2c38f55a6
            type: string
        type: object
        x-ntap-createOnly: true
      mtu:
        description: MTU for the access endpoint. This is optional for CIFS, NFS,
          and iSCSI protocols. This parameter is not required for FCP protocols.
        example: 15000
        format: int64
        type: integer
        x-ntap-readCreate: true
      name:
        description: Name of the access endpoint.
        example: aep1
        type: string
        x-ntap-readCreate: true
      svm:
        description: SVM on which the access end point is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the SVM.
            example: cbd1757b-0580-11e8-bd9d-00a178d39e12:type=vserver,uuid=1d1c3198-fc57-11e8-99ca-00a098d38e12
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: svm1
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 1d1c3198-fc57-11a8-99ca-00a078d39e12
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: UUID of the access endpoint.
        example: d0d32369-0768-11ea-9294-00a078d39e12
        format: uuid
        readOnly: true
        type: string
      vlan:
        description: VLAN ID of the access endpoint. This is optional for CIFS, NFS,
          and iSCSI protocols. This parameter is not required for FCP protocols.
        example: 10
        format: int64
        type: integer
        x-ntap-readCreate: true
      wwpn:
        description: WWPN of the access endpoint.
        example: 20:00:00:50:56:a7:bc:a2
        readOnly: true
        type: string
    type: object
  access_endpoint_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/access_endpoint'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    readOnly: true
    type: object
  accumulative_metric:
    properties:
      other:
        $ref: '#/definitions/accumulative_submetric'
      read:
        $ref: '#/definitions/accumulative_submetric'
      total:
        $ref: '#/definitions/accumulative_submetric'
      write:
        $ref: '#/definitions/accumulative_submetric'
  accumulative_submetric:
    properties:
      95th_percentile:
        description: 95th_percentile value for the given performance metric.
        example: 28
        format: double
        readOnly: true
        type: number
      avg:
        description: Average value for the given performance metric.
        example: 28
        format: double
        readOnly: true
        type: number
      max:
        description: Maximum value for the given performance metric.
        example: 28
        format: double
        readOnly: true
        type: number
      min:
        description: Minimum value for the given performance metric.
        example: 5
        format: double
        readOnly: true
        type: number
  active_directory_mappings:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      dns:
        description: Fully qualified domain name or IP address of the DNS server for
          the Active Directory.
        example: 10.224.223.157
        type: string
        x-ntap-readCreate: true
      domain:
        description: Domain of the Active Directory.
        example: example.com
        type: string
        x-ntap-readCreate: true
      key:
        description: Resource key of the Active Directory object.
        example: 3b648c1b-d965-03b7-20da-61b791a6263c
        readOnly: true
        type: string
      password:
        description: Password for the Active Directory.
        type: string
        x-ntap-readCreate: true
      svm:
        description: SVM on which the Active Directory is created.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: The key of the SVM for which you want to create the Active
              Directory.
            example: 9f4ddea-e395-11e9-b660-005056a71be9:type=vserver,uuid=191a554a-f0ce-11e9-b660-005056a71be9
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: svm1
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 191a554a-f0ce-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      username:
        description: Username for the Active Directory.
        type: string
        x-ntap-readCreate: true
    type: object
  active_directory_mappings_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/active_directory_mappings'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  aggregate:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      block_storage:
        description: Configuration information for the locally attached portion of
          the aggregate. When a cloud store is also used by this aggregate, this is
          referred to as the performance tier.
        properties:
          hybrid_cache:
            description: Contains the configuration information for the hybrid cache.
              The hybrid cache is made up of either whole SSDs or storage pool SSDs.
            properties:
              enabled:
                description: Aggregate uses HDDs with SSDs as a cache
                readOnly: true
                type: boolean
              size:
                description: Total usable space in bytes of SSD cache. This only provided
                  when the property "hybrid_cache.enabled" is "true".
                example: 1612709888
                format: int64
                readOnly: true
                type: integer
            readOnly: true
            type: object
          mirror:
            properties:
              state:
                enum:
                - unmirrored
                - normal
                - degraded
                - resynchronizing
                - failed
                readOnly: true
                type: string
            type: object
          primary:
            description: Configuration information for the primary storage portion
              of the aggregate. This excludes the hybrid cache details.
            properties:
              raid_size:
                description: Option to specify the maximum number of disks that can
                  be included in a RAID group.
                example: 16
                format: int64
                type: integer
              raid_type:
                description: RAID type of the aggregate.
                enum:
                - raid_dp
                - raid_tec
                - raid0
                - raid4
                type: string
            type: object
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      create_time:
        description: Timestamp of aggregate creation
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      data_encryption:
        properties:
          software_encryption_enabled:
            description: NetApp Aggregate Encryption enabled. All data in the
              aggregate is encrypted.
            readOnly: true
            type: boolean
        readOnly: true
        type: object
      key:
        description: Aggregate key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=aggregate,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: Aggregate name
        example: aggr_1
        type: string
      node:
        $ref: '#/definitions/node_reference'
      performance_capacity:
        $ref: '#/definitions/performance_capacity'
      snaplock_type:
        description: SnapLock type
        enum:
        - non_snaplock
        - compliance
        - enterprise
        readOnly: true
        type: string
      space:
        properties:
          block_storage:
            properties:
              available:
                description: Space available in bytes
                example: 10156560384
                format: int64
                readOnly: true
                type: integer
              size:
                description: Total usable space in bytes, not including WAFL reserve
                  and aggregate SnapShot copy reserve.
                example: 10156769280
                format: int64
                readOnly: true
                type: integer
              used:
                description: Space used or reserved in bytes. Includes volume guarantees
                  and aggregate metadata.
                example: 2088960
                format: int64
                readOnly: true
                type: integer
            readOnly: true
            type: object
          efficiency:
            description: Storage efficiency
            properties:
              logical_used:
                description: Logical used
                format: int64
                readOnly: true
                type: integer
              savings:
                description: Space saved by storage efficiencies (logical_used - used)
                format: int64
                readOnly: true
                type: integer
            type: object
        readOnly: true
        type: object
      state:
        description: Operational state of the aggregate
        enum:
        - online
        - onlining
        - offline
        - offlining
        - relocating
        - unmounted
        - restricted
        - inconsistent
        - failed
        - unknown
        readOnly: true
        type: string
      type:
        description: Aggregate type
        enum:
        - ssd
        - hdd
        - hybrid
        - ssd_fabricpool
        - hdd_fabricpool
        - hybrid_flash_pool
        - lun_flexarray
        - vmdisk_sds
        - vmdisk_fabricpool
        - not_mapped
        readOnly: true
        type: string
      uuid:
        description: The UUID of the ONTAP aggregate.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    type: object
  aggregate_analytics:
    description: High level performance metrics of aggregate.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregate:
        $ref: '#/definitions/aggregate_reference'
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      node:
        $ref: '#/definitions/node_reference'
      performance_capacity:
        description: Performance capacity details (used and available_ops) of the
          storage object.
        properties:
          available_iops_percent:
            description: Percentage of performance capacity for available iops.
            format: double
            readOnly: true
            type: number
          used_percent:
            description: Percentage of performance capacity that is being used.
            format: double
            readOnly: true
            type: number
        type: object
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      utilization_percent:
        description: Percentage of time for which the aggregate is busy.
        format: double
        readOnly: true
        type: number
  aggregate_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/aggregate_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  aggregate_capabilities_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/aggregate_capability'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  aggregate_capability:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        description: The cluster to which the aggregate belongs.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the cluster.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=cluster,uuid=a9f4ddea-e395-11e9-b660-005056a71be9
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: cluster1
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: a9f4ddea-e395-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Unique identifier of the aggregate.
        example: a9f4ddea-e395-11e9-b660-005056a71be9:type=aggregate,uuid=02ed6b19-052d-49e1-a588-eb0e215b0e8e
        readOnly: true
        type: string
      name:
        description: Name of the aggregate.
        example: aggr1
        readOnly: true
        type: string
      performance_service_levels:
        description: List of Performance Service Levels available for the aggregate.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            key:
              description: Unique identifier of the Performance Service Level.
              example: 0640d870-05f8-11ea-b7d6-fa163ec5e1a5
              readOnly: true
              type: string
            name:
              description: Name of the Performance Service Level.
              example: Value
              readOnly: true
              type: string
        type: array
      uuid:
        description: UUID of the aggregate.
        example: 02ed6b19-052d-49e1-a588-eb0e215b0e8e
        format: uuid
        readOnly: true
        type: string
  aggregate_cu_reference:
    properties:
      key:
        description: Unique identifier of the aggregate across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=object type,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
        x-ntap-writeOnly: true
    type: object
  aggregate_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregate:
        $ref: '#/definitions/aggregate_reference'
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/aggregate_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/aggregate_summary_metric'
    type: object
  aggregate_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
        x-ntap-createOnly: true
      key:
        description: Unique identifier of the aggregate.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=aggregate,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        example: aggr2
        type: string
      uuid:
        description: Aggregate UUID
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  aggregate_references:
    description: Aggregate hosting the volume. Required on POST.
    items:
      description: Aggregate
      properties:
        _links:
          properties:
            self:
              $ref: '#/definitions/href'
          readOnly: true
          type: object
        key:
          description: Unique identifier for the aggregate across the datacenter.
          example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=aggregate,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
          readOnly: true
          type: string
        name:
          example: aggr1
          type: string
        uuid:
          example: 1cd8a442-86d1-11e0-ae1c-9876567890123
          format: uuid
          type: string
      type: object
    type: array
  aggregate_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/aggregate'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  aggregate_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        $ref: '#/definitions/iops_counters'
        description: Rate of I/O operations observed at the storage object.
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the aggregate, in milliseconds.
      performance_capacity:
        $ref: '#/definitions/metrics_performance_capacity'
        description: Performance capacity details (used_percent, free_percent, available_iops_percent,
          etc.) of storage object.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the aggregate.
      timestamp:
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      utilization_percent:
        description: Percentage of time for which the aggregate is busy.
        format: double
        readOnly: true
        type: number
  aggregate_summary_metric:
    properties:
      iops:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of I/O operations observed at the aggregate.
      latency:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of round trip latency at the aggregate, in milliseconds.
      performance_capacity:
        description: Summary of performance capacity details (used_percent, free_percent,
          available_iops_percent, etc.) of the storage object.
        properties:
          available_iops_percent:
            $ref: '#/definitions/accumulative_submetric'
          free_percent:
            $ref: '#/definitions/accumulative_submetric'
          system_workload_percent:
            $ref: '#/definitions/accumulative_submetric'
          used_percent:
            $ref: '#/definitions/accumulative_submetric'
          user_workload_percent:
            $ref: '#/definitions/accumulative_submetric'
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the aggregate.
      utilization_percent:
        $ref: '#/definitions/accumulative_submetric'
    type: object
  alert:
    properties:
      action:
        properties:
          notification:
            properties:
              duration:
                description: Duration between two notifications.
                example: PT1000S
                type: string
              emails:
                description: Email address of the user.
                items:
                  example: abc@cde.com
                  type: string
                type: array
              from:
                description: Start time of recurring notifications.
                example: PT9000S
                type: string
              send_snmp_trap:
                description: Indicates if an SNMP trap should be issued.
                example: false
                type: boolean
              to:
                description: End time of recurring notifications.
                example: PT18000S
                type: string
            type: object
          script:
            properties:
              key:
                description: Unique identifier of the script.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                format: uuid
                type: string
              name:
                description: name of the script
                example: script_2
                type: string
            type: object
        type: object
      description:
        description: Provides a description for the alert.
        example: This is a sample alert.
        type: string
      enabled:
        description: Specifies whether the alert is enabled.
        example: true
        type: boolean
      event:
        properties:
          severities:
            items:
              description: Severity of the events.
              enum:
              - warning
              - error
              - critical
              example: error
              type: string
            type: array
          types:
            items:
              description: Type of event to be observered.
              example: Login Banner Disabled
              type: string
            type: array
        type: object
      key:
        description: Unique identifier of the alert.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        format: uuid
        readOnly: true
        type: string
      name:
        description: Name of the alert.
        example: alert3
        type: string
      resource:
        items:
          properties:
            exclude:
              items:
                description: filters of excluded resources.
                example: def
                type: string
              type: array
            include:
              items:
                description: filters of included resources.
                example: abc
                type: string
              type: array
            include_all:
              description: Indicates if all the resources of a type should be considered.
              example: false
              type: boolean
            keys:
              items:
                description: keys of resources which should be considered.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                type: string
              type: array
            type:
              description: Type of resource. The mapping between UI names and API
                names is intuitive for most types. For metrocluster type resources
                Metrocluster prefix is not required except metro_cluster_relationship.
                Some non-obvious pairs are (NVMe Namespac, namespace), (Cloud Tier,
                objectstore_config), (Storage Class, infinitevol_storage_service).
              enum:
              - cluster
              - cluster_node
              - vserver
              - aggregate
              - volume
              - network_lif
              - qtree
              - lun
              - namespace
              - bridge
              - bridge_stack_connection
              - fcp_lif
              - inter_node_connection
              - inter_switch_connection
              - network_port
              - metro_cluster_relationship
              - nvmf_fc_lif
              - node_bridge_connection
              - node_stack_connection
              - node_switch_connection
              - storage_shelf
              - switch
              - switch_bridge_connection
              - snap_mirror
              - fcp_port
              - objectstore_config
              - disk
              - infinitevol_storage_service
              - user_quota
              - management_station
              - storage_service
              example: cluster
              type: string
          type: object
        type: array
    type: object
  alert_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/alert'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  backup_file_info:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      creation_time:
        description: Time of backup creation in UTC format.
        example: 2019-11-14T17:23:33.205+05:30
        type: string
      is_scheduled:
        description: Indicates if it is user scheduled.
        example: true
        type: boolean
      key:
        description: Unique identifier of the backupfileinfo.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        format: uuid
        type: string
      name:
        description: Name of the backup file created.
        example: AIQ_UM_9.7.DEV_full_backup_unix_12-12-2019-04-08.7z
        type: string
      size:
        description: Size of the backup file created in bytes.
        example: 142422
        format: int64
        type: integer
    type: object
  backup_file_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/backup_file_info'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  backup_settings:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      day_of_week:
        description: Day of the week when backup is scheduled. Possible values
        enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        example: monday
        type: string
      frequency:
        description: Frequency at which a database backup is scheduled. Among possible
          values, none implies that backup is not scheduled. Possible values
        enum:
        - daily
        - weekly
        - none
        example: weekly
        type: string
      hour:
        description: Hour of the day when backup is scheduled. The value is specified
          in 24-hour format.
        example: 18
        format: int32
        type: integer
      minute:
        description: Minute of the hour when backup is scheduled.
        example: 30
        format: int32
        type: integer
      path:
        description: Path to the location where backup files are stored.
        example: /data/ocum-backup
        type: string
      retention_count:
        description: Maximum number of backup files to be retained.
        example: 8
        format: int32
        type: integer
    type: object
  broadcast_domain_info:
    description: Broadcast domain UUID along with a readable name.
    properties:
      name:
        description: Name of the broadcast domain, scoped to its IPspace.
        example: bd1
        readOnly: true
        type: string
      uuid:
        description: Broadcast domain UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  certificate_response:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      detail_certificate_string:
        description: SSL certificate detail in string format.
        readOnly: true
        type: string
      fingerprint:
        description: Certificate fingerprint
        properties:
          md5:
            description: Certificate fingerprint in MD5.
            example: C1:50:41:29:82:D1:68:89:66:0C:FF:E7:4D:1E:C5:72
            readOnly: true
            type: string
          sha1:
            description: Certificate fingerprint in SHA1.
            example: DF:A2:E0:BB:E4:63:A3:A8:22:A5:99:01:44:FB:5B:D7:68:B2:6D:EA
            readOnly: true
            type: string
        type: object
      is_self_signed:
        description: Reports whether the certificate is self signed or not.
        example: true
        readOnly: true
        type: boolean
      is_valid:
        description: Reports whether the certificate is valid or not.
        example: true
        readOnly: true
        type: boolean
      is_valid_hostname:
        description: Reports whether the hostname is valid or not.
        example: true
        readOnly: true
        type: boolean
      issued_to:
        description: Name of the certificate receiver.
        example: ocum-capacity
        readOnly: true
        type: string
      issuer:
        description: Distinguished Name of the certificate issuer.
        example: C=US, CN=ocum-capacity
        readOnly: true
        type: string
      pem_formatted_string:
        description: PEM formatted string representation of this SSL certificate.
        readOnly: true
        type: string
      valid_from:
        description: Certificate validity start date in ISO8061 format.
        example: 2019-11-14T17:23:33.205+05:30
        format: date-time
        readOnly: true
        type: string
      valid_to:
        description: Certificate validity end date in ISO8061 format.
        example: 2019-11-17T18:23:33.205+05:30
        format: date-time
        readOnly: true
        type: string
    type: object
  cifs_share:
    description: |
      A CIFS share is a named access point in a volume. Before users and applications can access data on the CIFS server over SMB,
      a CIFS share must be created with sufficient share permission. CIFS shares are tied to the CIFS server on the SVM.
      When creating a CIFS share, ONTAP creates a default ACL for the CIFS share granting full access to everyone.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      acls:
        items:
          $ref: '#/definitions/share_acl'
        readOnly: true
        type: array
      cluster:
        $ref: '#/definitions/cluster_reference'
      comment:
        description: Comment to describe the CIFS share. For example, the department
          it is used for.
        example: HR Department Share
        maxLength: 256
        minLength: 1
        type: string
      key:
        description: Unique identifier of the CIFS share across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cifs_share,vserver_uuid=0ecb2904-85c3-11e8-8e2d-00a09865cd13,share_name=HR_SHARE
        readOnly: true
        type: string
      name:
        description: |
          Specifies the name of the CIFS share that you want to create. If this
          is a home directory share, then the share name includes the pattern
          %w (Windows user name), %u (UNIX user name) and %d (Windows domain name)
          variables in any combination to generate shares dynamically.
        example: HR_SHARE
        maxLength: 80
        minLength: 1
        readOnly: true
        type: string
      path:
        description: |
          The fully-qualified pathname in the owning SVM namespace that is shared through this share.
          If this is a home directory share then the path should be dynamic by specifying the pattern
          %w (Windows user name), %u (UNIX user name), or %d (domain name) variables in any combination.
          ONTAP generates the path dynamically for the connected user and this path is appended to each
          search path to find the full home directory path.
        example: /volume_1/eng_vol/
        maxLength: 256
        minLength: 1
        type: string
      svm:
        $ref: '#/definitions/svm_reference'
      volume:
        $ref: '#/definitions/volume_reference'
    type: object
  cifs_share_reference:
    description: Reference to CIFS share
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the node across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cifs_share,vserver_uuid=0ecb2904-85c3-11e8-8e2d-00a09865cd13,share_name=HR_SHARE
        type: string
      name:
        example: cifs-share
        type: string
      uuid:
        description: Unique identifier of the CIFS share across the cluster.
        format: uuid
        type: string
    type: object
  cifs_share_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_share'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  cluster:
    description: Provides information about the ONTAP cluster.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      contact:
        example: support@company.com
        type: string
      isSanOptimized:
        deprecated: true
        description: This field is deprecated. Use is_san_optimized instead of isSanOptimized.
        type: boolean
      is_san_optimized:
        description: Specifies if this cluster is an All SAN array.
        readOnly: true
        type: boolean
      key:
        description: Cluster Key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      location:
        example: building 1
        type: string
      management_ip:
        description: The management IP address of the cluster which can be IPv4 or
          IPv6.
        example: 10.10.10.7
        type: string
      name:
        example: cluster1
        type: string
      nodes:
        items:
          $ref: '#/definitions/node'
        type: array
      protocol_breakdown:
        description: The exposed storage capacity of the cluster broken down by protocol.
        properties:
          cifs:
            description: Provisioned storage capacity of the cluster serviced by the
              CIFS protocol, in bytes.
            example: 8357086490624
            format: int64
            readOnly: true
            type: integer
          fcp:
            description: Provisioned storage capacity of the cluster serviced by the
              Fibre Channel protocol, in bytes.
            example: 3408356442112
            format: int64
            readOnly: true
            type: integer
          iscsi:
            description: Provisioned storage capacity of the cluster serviced by the
              iSCSI protocol, in bytes.
            example: 65725171994112
            format: int64
            readOnly: true
            type: integer
          nfs:
            description: Provisioned storage capacity of the cluster serviced by the
              NFS protocol, in bytes.
            example: 190657984794624
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      storage_capacity:
        description: The storage capacity of the cluster.
        properties:
          available:
            description: Available storage capacity of the cluster, in bytes, calculated
              as the sum of the available space of online aggregates.
            example: 68043087872
            format: int64
            readOnly: true
            type: integer
          total:
            description: Total storage capacity of the cluster, in bytes, calculated
              as the sum of "storage_capacity.available" and "storage_capacity.used".
            example: 68100694016
            format: int64
            readOnly: true
            type: integer
          used:
            description: Used storage capacity of the cluster, in bytes, calculated
              as the sum of the used space of online aggregates.
            example: 57606144
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      uuid:
        description: ONTAP cluster UUID
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
      version:
        $ref: '#/definitions/version'
    type: object
  cluster_analytics:
    description: High level performance metrics of cluster.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      management_ip:
        description: Management IP address of the cluster; can be IPv4 or IPv6.
        example: 10.10.10.7
        type: string
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
  cluster_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/cluster_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  cluster_cr_reference:
    description: Reference to ONTAP cluster
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the cluster across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
        x-ntap-readCreate: true
      name:
        example: cluster2
        readOnly: true
        type: string
      uuid:
        description: |
          Unique identifier of the cluster across the cluster.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    type: object
    x-ntap-readCreate: true
  cluster_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the cluster.
        example: cbd1757b-0580-11e8-bd9d-00a098d39a12:type=cluster,uuid=cbd1757b-0580-11e8-bd9d-00a098d39e12
        readOnly: true
        type: string
      name:
        description: Name of the cluster.
        example: umeng-aff300-01-02
        readOnly: true
        type: string
      uuid:
        description: UUID of the cluster.
        example: cbd1757b-0580-11e8-bd9d-00a098d39e12
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  cluster_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/cluster_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/cluster_summary_metric'
    type: object
  cluster_reference:
    description: Reference to ONTAP cluster
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the cluster across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        readOnly: true
        type: string
      name:
        description: Name of the cluster.
        example: cluster2
        readOnly: true
        type: string
      uuid:
        description: |
          Unique identifier of the cluster across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  cluster_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/cluster'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  cluster_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 200
        format: double
        type: number
      throughput:
        description: Value of the throughput operation observed at the cluster.
        example: 200
        format: double
        type: number
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  cluster_summary_metric:
    properties:
      iops:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of I/O operations observed at the cluster.
      throughput:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of the throughput operation observed at cluster.
    type: object
  data_placement_balance:
    description: map of resource keys to their evaluated score(s).
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
        x-ntap-createOnly: true
      aggregate_key:
        description: Aggregate key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=aggregate,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      scores:
        description: The evaluated scores of the resource, singleton list for summed
          up score, 4 entries otherwise
        example:
        - 0.25
        - 0.13
        - 0.73
        - 0.12
        type: list
    type: object
  data_placement_balance_request_object:
    description: map of resource keys to their evaluated score / raw statistitcs,
      depending on the combination of separate_flag and eval_method. This example
      shows the use case to get raw statistics.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
        x-ntap-createOnly: true
      capacity:
        description: Requested capacity in either Megabyte, Gigabyte, Terabyte, or
          Petabyte.
        example: 1000GB
        type: string
      eval_method:
        description: Integer indicator of which evaluation method, defaults to 0 (0
          - by index, 1 - by literal value, 2 - normalized value).
        example: 1
        type: integer
      opt_method:
        description: Integer indicator of which optimization method (0 - by weighted
          sum method, 1 - by epsilon constraint method, 2 - genetic algorithm). Only
          0 is implemented so far.
        example: 1
        type: integer
      priority_order:
        description: Permutation of the list ["volume_count", "size", "latency", "ops"].
        example:
        - size
        - latency
        - volume_count
        - ops
        type: list
      resource_keys:
        description: List of resource keys. Leave empty or null if all resources are
          to be considered.
        example:
        - fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d392faf1-cab1-11e7-8d40-00a09865fe59
        - fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d036c65d-cab1-11e7-bcd5-00a09865cd13
        type: list
      separate_flag:
        description: Boolean indicator of whether the evaluations for the metrics
          should be separated or not. By default it is 0 (false).
        example: true
        type: boolean
      ssl_key:
        description: Performance Service Level UUID (PSL UUID).
        example: acf804ed-2a58-47b2-bf6d-e27da8b23bba
        type: string
    type: object
  data_placement_balance_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/data_placement_balance'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  data_placement_request_object:
    description: map of resource keys to their evaluated score(s).
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
        x-ntap-createOnly: true
      capacity:
        description: Requested capacity in either Megabyte, Gigabyte, Terabyte, or
          Petabyte.
        example: 1000GB
        type: string
      priority_order:
        description: Permutation of the list ["volume_count", "size", "latency", "ops"].
        example:
        - size
        - latency
        - volume_count
        - ops
        type: list
      resource_keys:
        description: List of resource keys. Leave empty or null if all resources are
          to be considered.
        example:
        - fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d392faf1-cab1-11e7-8d40-00a09865fe59
        - fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d036c65d-cab1-11e7-bcd5-00a09865cd13
        type: list
      ssl_key:
        description: Performance Service Level UUID (PSL UUID).
        example: acf804ed-2a58-47b2-bf6d-e27da8b23bba
        type: string
    type: object
  datasource:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      address:
        description: IP address of the datasource.
        type: string
        x-ntap-readCreate: true
      cluster_health_status:
        description: Health status of the cluster as a datasource.
        enum:
        - critical
        - error
        - ok
        - warning
        readOnly: true
        type: string
      cluster_object_id:
        description: ID of the cluster
        example: 1214
        format: int32
        readOnly: true
        type: integer
      id:
        description: ID of the datasource.
        example: 1
        format: int32
        readOnly: true
        type: integer
      is_metro_cluster:
        description: Reports if the cluster as a datasource is a MetroCluster or not.
        readOnly: true
        type: boolean
      key:
        description: Resource key of the datasource
        example: 2657b88e-e5ee-49b1-9c6d-9fd988b0a178:app_type=AIQ_UM,type=data_source,cluster_uuid=8601116e-1b56-11e9-bdec-00a098d87b4b
        readOnly: true
        type: string
      maintenance_window:
        description: Period in time when the cluster would be in maintenance state.
        properties:
          end_time:
            description: End time of the maintenance window.
            format: date-time
            readOnly: true
            type: string
          id:
            description: ID of the maintenance window.
            example: 2
            format: int32
            readOnly: true
            type: integer
          start_time:
            description: Start time of the maintenance window.
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      managed_workload_percent:
        description: Managed workload percentage of the cluster added as a datasource.
        format: int32
        readOnly: true
        type: integer
      mutual_tls_status:
        description: Mutual TLS status of datasource.
        enum:
        - not supported
        - not mapped
        - not configured
        - configured
        - expired
        readOnly: true
        type: string
      name:
        description: Name of the cluster which is added as the datasource.
        readOnly: true
        type: string
      operation:
        description: Name of the operation.
        properties:
          end_time:
            description: End time of the operation in ISO8061.
            format: date-time
            readOnly: true
            type: string
          last_failure_time:
            description: Time of the last failed operation in ISO8061.
            format: date-time
            readOnly: true
            type: string
          last_success_time:
            description: Time of the last successfull operation in ISO8061.
            format: date-time
            readOnly: true
            type: string
          start_time:
            description: Start time of the operation in ISO8061.
            format: date-time
            readOnly: true
            type: string
          state:
            description: State of the current operation.
            enum:
            - completed
            - failed
            - in_progress
            readOnly: true
            type: string
          type:
            description: Type of the current operation.
            enum:
            - health_poll
            - deletion
            - discovery
            readOnly: true
            type: string
        readOnly: true
        type: object
      password:
        description: Password used to access the datasource.
        type: string
        x-ntap-writeOnly: true
      port:
        description: Port of the datasource on which the communication happens.
        example: 443
        format: int32
        type: integer
        x-ntap-readCreate: true
      protocol:
        description: Transport protocol on which the ONTAP cluster listens.
        enum:
        - https
        type: string
        x-ntap-readCreate: true
      raw_capacity:
        description: Raw capacity of the cluster added as a datasource in bytes.
        format: int64
        readOnly: true
        type: integer
      status:
        description: Status of the datasource.
        enum:
        - error
        - normal
        - warning
        readOnly: true
        type: string
      status_message:
        description: Status message corresponding to the status for the datasource.
        readOnly: true
        type: string
      username:
        description: Username used to access the datasource.
        type: string
    type: object
  datasources_response:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/datasource'
        type: array
    type: object
  dns_domains:
    description: |
      A list of DNS domains.
      Domain names have the following requirements:
      * The name must contain only the following characters: A through Z,
        a through z, 0 through 9, ".", "-" or "_".
      * The first character of each label, delimited by ".", must be one
        of the following characters: A through Z or a through z or 0
        through 9.
      * The last character of each label, delimited by ".", must be one of
        the following characters: A through Z, a through z, or 0 through 9.
      * The top level domain must contain only the following characters: A
        through Z, a through z.
      * The system reserves the following names:"all", "local"  , and "localhost".
    example:
    - example.com
    - example2.example3.com
    items:
      maxLength: 255
      minLength: 1
      type: string
    maxItems: 6
    type: array
  error:
    properties:
      code:
        description: Error code
        readOnly: true
        type: string
      message:
        description: Error message
        example: entry doesn't exist
        readOnly: true
        type: string
      target:
        description: The target parameter that caused the error.
        example: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  error_response:
    properties:
      error:
        $ref: '#/definitions/error'
    readOnly: true
    type: object
  ethernet_port:
    description: "Ethernet port description\n"
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      broadcast_domain:
        description: Broadcast domain UUID along with a readable name. Either the
          UUID or both names can be provided on input.
        properties:
          ipspace:
            description: "IPspace details.\n"
            properties:
              name:
                description: Name of the broadcast domain???s IPspace.
                example: ipspace1
                readOnly: true
                type: string
            readOnly: true
            type: object
          key:
            description: Broadcast domain key.
            example: 4c6bf721-2e3f-11e9-a3e2-00a0985badbb:type=network_port_broadcast_domain,IP_SPACE_UUID=4ca5e7e4-2e3f-11e9-a3e2-00a0985badbb,BROADCAST_DOMAIN=Default
            readOnly: true
            type: string
          name:
            description: Name of the broadcast domain, scoped to its IPspace.
            example: bd1
            readOnly: true
            type: string
          uuid:
            description: "Broadcast domain UUID.\n"
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      enabled:
        description: Indicates the administrative state of the Ethernet port.
        readOnly: true
        type: boolean
      key:
        description: Ethernet port key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=network_port,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      mac_address:
        description: |
          MAC address of the Ethernet port.
        example: 01:02:03:04:05:06
        readOnly: true
        type: string
      mtu:
        description: |
          MTU of the port, in bytes. This value is set by the broadcast domain.
        example: 168
        readOnly: true
        type: integer
      name:
        description: Portname, such as, e0a, e1b-100 (VLAN on Ethernet), a0c (LAG/ifgrp),
          and a0d-200 (VLAN on LAG/ifgrp).
        example: e0a
        readOnly: true
        type: string
      node:
        $ref: '#/definitions/node_reference'
      speed:
        description: "Link speed.\n"
        example: gigabit_1
        readOnly: true
        type: string
      state:
        description: |
          Operational state of the port.
        enum:
        - up
        - down
        example: up
        readOnly: true
        type: string
      type:
        description: |
          Type of physical or virtual port.
        enum:
        - vlan
        - physical
        - if_group
        example: vlan
        readOnly: true
        type: string
      uuid:
        description: Port UUID.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
      vlan:
        description: Details of VLAN.
        properties:
          base_port:
            description: |
              Port UUID along with readable names. Either the UUID or both names can be supplied on input.
            properties:
              name:
                description: VLAN name.
                example: e1b
                readOnly: true
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    readOnly: true
                    type: string
                readOnly: true
                type: object
              uuid:
                description: VLAN UUID.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                format: uuid
                readOnly: true
                type: string
            readOnly: true
            type: object
          tag:
            description: VLAN ID.
            example: 100
            readOnly: true
            type: integer
        readOnly: true
        type: object
    type: object
  ethernet_port_analytics:
    description: High level performance metrics of Ethernet port.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      ethernet_port:
        $ref: '#/definitions/ethernet_port_reference'
      node:
        $ref: '#/definitions/node_reference'
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      utilization_percent:
        description: Percentage of time for which the Ethernet port is busy.
        format: double
        readOnly: true
        type: number
  ethernet_port_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/ethernet_port_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  ethernet_port_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      ethernet_port:
        $ref: '#/definitions/ethernet_port_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/ethernet_port_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/ethernet_port_summary_metric'
    type: object
  ethernet_port_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the Ethernet port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=network_port,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: Ethernet port name
        example: e1b
        type: string
      uuid:
        description: Ethernet port UUID
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  ethernet_port_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/ethernet_port'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  ethernet_port_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      bytes:
        properties:
          received:
            description: Received bytes
            example: 10.00
            format: double
            readOnly: true
            type: number
          total:
            description: Total bytes
            example: 10.00
            format: double
            readOnly: true
            type: number
          transmitted:
            description: Transmitted bytes
            example: 10.00
            format: double
            readOnly: true
            type: number
        type: object
      error:
        properties:
          received:
            description: Received error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
          total:
            description: Total error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
          transmitted:
            description: Transmitted error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
        type: object
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      utilization_percent:
        description: Percentage of time for which the Ethernet port is busy.
        format: double
        readOnly: true
        type: number
  ethernet_port_summary_metric:
    properties:
      bytes:
        description: Summary of the bytes per second observed at the Ethernet port.
        properties:
          received:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          transmitted:
            $ref: '#/definitions/accumulative_submetric'
        type: object
      error:
        description: Summary of the error rate observed at the Ethernet port.
        properties:
          received:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          transmitted:
            $ref: '#/definitions/accumulative_submetric'
        type: object
      utilization_percent:
        $ref: '#/definitions/accumulative_submetric'
    type: object
  event:
    description: Event object
    properties:
      acknowledged_username:
        description: Specifies who is acknowledging
        example: userA
        type: string
        x-ntap-modifyOnly: true
      annotation:
        description: The annotation associated with the event
        example: data-priority:high
        readOnly: true
        type: string
      assigned:
        properties:
          timestamp:
            description: Timestamp showing when the event was assigned to a user
            example: 2020-02-19T08:15:31+00:00
            readOnly: true
            type: string
          user:
            description: Specifies who the event is assigned to
            example: userA
            type: string
      cause:
        description: The cause for the event
        example: The overcommitted threshold set at 100% is breached. 216.40 TB (2970.93%)
          of 7.28 TB is committed. 5.65 TB (77.63%) is used.
        readOnly: true
        type: string
      cluster:
        $ref: '#/definitions/cluster_reference'
      config_advisor_rule_id:
        description: ConfigAdvisor's rule ID associated with the event.
        example: 2002
        format: int64
        readOnly: true
        type: integer
      current_state:
        description: Current state of the event. The user cannot modify the state
          to obsolete.
        enum:
        - new
        - acknowledged
        - resolved
        - obsolete
        example: new
        type: string
      duration:
        description: Time since the event was created, in ISO8601 standard.
        example: PT8H6M12.345S
        readOnly: true
        type: string
      group:
        description: Event group
        enum:
        - storage_capacity
        - performance_capacity
        - workload_performance
        - workload_iops
        - security
        - none
        example: storage_capacity
        readOnly: true
        type: string
      history:
        items:
          $ref: '#/definitions/event_history'
        readOnly: true
        type: array
      impact:
        description: Impact details of the event
        properties:
          area:
            description: Impact area of the event.
            enum:
            - availability
            - capacity
            - configuration
            - performance
            - protection
            - security
            example: protection
            readOnly: true
            type: string
          level:
            description: Impact level of the event.
            enum:
            - event
            - risk
            - incident
            - upgrade
            example: risk
            readOnly: true
            type: string
          resource_name:
            description: The full name of the source of the event.
            example: ocum-mobility-02:aggr3
            readOnly: true
            type: string
          resource_type:
            description: Type of resource with which the event is associated
            enum:
            - aggregate
            - objectstore_config
            - cifs_share
            - cifs_share_acl
            - cluster
            - cluster_node
            - disk
            - disk_path
            - export_policy
            - export_rule
            - capacity_tier
            - fcp_port
            - fcp_lif
            - flash_device
            - igroup
            - iscsi_portal_group
            - lun
            - lun_mapping
            - igroup_initiator
            - namespace
            - network_lif
            - network_port
            - nvmf_fc_lif
            - ontap_job_schedule
            - ontap_license
            - plex
            - portset
            - qtree
            - user_quota
            - raid_group
            - routing_group
            - network_failover_group
            - service_processor
            - sis_policy
            - snap_mirror
            - snap_mirror_policy
            - snap_mirror_policy_rule
            - snapshot
            - snapshot_policy
            - snapshot_policy_schedule
            - infinitevol_storage_service
            - storage_shelf
            - storage_shelf_cable
            - storage_adapter
            - storage_pool
            - storage_pool_available
            - storage_pool_aggregate
            - volume
            - volume_move
            - vserver
            - vserver_name_mapping
            - system_health_alert
            - management_station
            - resource_pool
            - data_source
            - vcenter
            - service_workflow
            - storage_service
            - storage_service_connection
            - storage_service_node
            - storage_service_subscription
            - switch
            - bridge
            - bridge_stack_connection
            - bridge_stack_link
            - switch_bridge_connection
            - inter_switch_connection
            - inter_switch_link
            - switch_bridge_link
            - node_switch_connection
            - node_switch_link
            - metro_cluster_relationship
            - inter_node_connection
            - inter_node_link
            - node_bridge_connection
            - node_bridge_link
            - node_stack_connection
            - node_stack_link
            - ontap_alert
            example: aggregate
            readOnly: true
            type: string
          resource_uuid:
            description: Unique identifier of the resource with which the event is
              associated
            example: 7705707f-efe9-11eb-b026-005056acae9f
            format: uuid
            readOnly: true
            type: string
        readOnly: true
      key:
        description: Unique identifier of the event.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        format: uuid
        readOnly: true
        type: string
      name:
        description: Name of the event.
        example: Aggregate Overcommitted
        readOnly: true
        type: string
      node:
        $ref: '#/definitions/node_readonly_reference'
      origin:
        description: The origin from which the event was generated.
        example: Management Server
        readOnly: true
        type: string
      resolved_username:
        description: Specifies who is resolving
        example: userA
        type: string
        x-ntap-modifyOnly: true
      severity:
        description: Severity of the event
        enum:
        - normal
        - information
        - warning
        - error
        - critical
        example: error
        readOnly: true
        type: string
      svm:
        $ref: '#/definitions/svm_readonly_reference'
    readOnly: true
    type: object
  event_history:
    properties:
      cause:
        description: Indicates why the event became obsolete. This field applies to
          the "obsolete" state. To order and filter using this field, you must include
          history.state in the request.
        enum:
        - system_resolved
        - event_overwritten
        - event_type_value_disabled
        - root_aggr_event_ignored
        - notified_ems_event
        - maintenance_window_ended
        - invalid_event_for_current_configuration
        example: event_overwritten
        readOnly: true
        type: string
      state:
        $ref: '#/definitions/state'
      timestamp:
        description: Timestamp indicating when the event transitioned to this state.
          To order and filter using this field, you must include history.state in
          the request.
        example: 2020-02-19T08:15:31.123+00:00
        readOnly: true
        type: string
      user:
        description: User associated with the state. This field applies to the "acknowledge"
          and "resolved" states. To order and filter using this field, you must include
          history.state in the request.
        example: userA
        readOnly: true
        type: string
  event_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/event'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  export_authentication_flavor:
    description: |
      Represents an authentication flavor. The following flavors are supported:
      * any - All authentication flavors
      * anon - Special authentication flavor for anonymization
      * never - Special authentication flavor to represent access denial
      * krb5 - Kerberos V4 Authentication
      * krb5i - Kerberos V4 Integrity
      * krb5p - Kerberos V4 Privacy
      * ntlm - CIFS NTLM Authentication
      * sys - AUTH_SYS or AUTH_UNIX Authentication
    enum:
    - any
    - anon
    - never
    - krb5
    - krb5i
    - krb5p
    - ntlm
    - sys
    type: string
  export_client:
    properties:
      match:
        description: |
          Client Match Hostname, IP address, Netgroup, or Domain.
        example: 0.0.0.0/0
        type: string
    type: object
  export_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      id:
        description: "ONTAP export policy ID.\n"
        example: 944892805122
        format: int64
        readOnly: true
        type: integer
      key:
        description: Unique identifier of the export policy across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=export_policy,uuid=944892805122
        readOnly: true
        type: string
      name:
        description: Export policy name
        type: string
      rules:
        description: Rules of the export policy.
        items:
          $ref: '#/definitions/export_rule'
        type: array
      svm:
        $ref: '#/definitions/svm_reference'
    type: object
  export_policy_provision:
    description: Export policy for the file share. Optional for NFS file share creation
      and required for CIFS share creation.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
      id:
        description: ONTAP export policy ID.
        example: 1717986918
        readOnly: true
        type: string
      key:
        description: Unique identifier of the export policy.
        example: b06466ed-7c28-11e9-a158-00a0989837e7:type=export_policy,uuid=17179869185
        type: string
      name:
        description: Export policy name.
        example: ExportPolicy1
        readOnly: true
        type: string
      name_tag:
        description: Name tag of the export policy which is used in POST and PATCH
          operations of the export policy.
        example: ExportPolicyNameTag
        type: string
        x-ntap-writeOnly: true
      rules:
        description: Rules of the export policy.
        items:
          properties:
            anonymous_user:
              description: User ID to which anonymous users are mapped.
              readOnly: true
              type: string
            clients:
              items:
                description: Allowed clients.
                properties:
                  match:
                    example: 0.0.0.0/0
                    type: string
                type: object
              type: array
            index:
              description: Index of the rule within the export policy.
              format: int32
              type: integer
            protocols:
              items:
                description: "Access Protocol(s) that the export rule describes. The
                  following are valid values. \n* any - All protocols are considered
                  \n* nfs - All NFS versions are considered \n* nfs3 - NFS Version
                  3 protocol \n* nfs4 - NFS Version 4 protocol \n* cifs - CIFS protocol
                  \n* flexcache - FlexCache protocol \nPOST and PATCH operations are
                  supported only for CIFS, NFS3, and NFS4 protocols."
                enum:
                - any
                - nfs
                - nfs3
                - nfs4
                - cifs
                - flexcache
                example: nfs3
                type: string
              type: array
            ro_rule:
              items:
                description: Authentication flavors that the read-only access rule
                  governs.
                enum:
                - any
                - none
                - never
                - kerberos5
                - kerberos5i
                - kerberos5p
                - ntlm
                - sys
                example: any
                type: string
              type: array
            rw_rule:
              items:
                description: Authentication flavors that the read/write access rule
                  governs.
                enum:
                - any
                - none
                - never
                - kerberos5
                - kerberos5i
                - kerberos5p
                - ntlm
                - sys
                example: any
                type: string
              type: array
            superuser:
              description: Authentication flavors that the superuser security type
                governs.
              items:
                description: Represents an authentication flavor. The following flavors
                  are supported.
                enum:
                - any
                - none
                - never
                - kerberos5
                - kerberos5i
                - kerberos5p
                - ntlm
                - sys
                example: sys
                type: string
              readOnly: true
              type: array
          type: object
        type: array
    type: object
  export_policy_reference:
    description: Export policy
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: |
          The identifier of the export policy.
        example: 944892805122
        format: int64
        type: integer
      key:
        description: Unique identifier of the export policy.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=export_policy,uuid=944892805122
        readOnly: true
        type: string
      name:
        example: default
        type: string
    type: object
  export_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/export_policy'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  export_rule:
    properties:
      anonymous_user:
        description: User ID to which anonymous users are mapped.
        type: string
      clients:
        description: Array of client matches
        items:
          $ref: '#/definitions/export_client'
        type: array
      index:
        description: |
          Index of the rule within the export policy.
        format: int64
        readOnly: true
        type: integer
      protocols:
        items:
          default: any
          description: |
            Access Protocol(s) that the export rule describes. The following values are supported:
            * any - All protocols are considered
            * nfs - All NFS versions are considered
            * nfs3 - NFS Version 3 protocol
            * nfs4 - NFS Version 4 protocol
            * cifs - CIFS protocol
            * flexcache - Flexcache protocol
          enum:
          - any
          - nfs
          - nfs3
          - nfs4
          - cifs
          - flexcache
          type: string
        type: array
      ro_rule:
        default:
        - any
        description: |
          Authentication flavors that the read-only access rule governs.
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
      rw_rule:
        default:
        - any
        description: |
          Authentication flavors that the read/write access rule governs.
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
      superuser:
        default:
        - any
        description: |
          Authentication flavors that the superuser security type governs.
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
    type: object
  failover_scope:
    description: Defines where an interface may failover.
    enum:
    - disabled
    - local_only
    - system_defined
    - home_port_only
    - default
    - home_node_only
    - sfo_partners_only
    - broadcast_domain_wide
    readOnly: true
    type: string
  fc_interface:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      data_protocol:
        description: The data protocol for which the FC interface is configured.
        enum:
        - fcp
        - fc_nvme
        readOnly: true
        type: string
      enabled:
        description: The administrative state of the FC interface. The FC interface
          can be disabled to block all FC communication with the SVM through this
          interface.
        readOnly: true
        type: boolean
      key:
        description: Unique identifier for the FC interface across the datacenter.
        example: 8601116e-1b56-11e9-bdec-00a098d87b4b:type=fcp_lif,lif_uuid=0556f250-320a-11ea-b50d-00a098d7b0b9
        readOnly: true
        type: string
      location:
        description: The location of the FC interface is defined by the location of
          its port. An FC port is identified by its UUID, or a combination of its
          node name and port name.
        properties:
          home_node:
            $ref: '#/definitions/node_info'
          home_port:
            description: An FC port is the physical port of an FC adapter on a cluster
              node that can be connected to an FC network.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                type: object
              key:
                description: The unique identifier of the FC port across the datacenter.
                example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=fcp_port,cluster_node_uuid=bbd9dee2-6a73-4f38-ad36-319e22cdefef,node_name="50:0A:09:80:A7:4C:C0:00",port_name="50:0A:09:82:A7:4C:C0:00",adapter=0a
                readOnly: true
                type: string
              name:
                description: The name of the FC port.
                example: 0a
                readOnly: true
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    readOnly: true
                    type: string
                type: object
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                readOnly: true
                type: string
            type: object
          is_home:
            description: Indicates whether or not the FC interface currently resides
              on the home node.
            readOnly: true
            type: boolean
          node:
            $ref: '#/definitions/node_info'
          port:
            $ref: '#/definitions/port_info'
            description: An FC port is the physical port of an FC adapter on a cluster
              node that can be connected to an FC network.
        type: object
      name:
        description: Interface name
        example: dataLif1
        readOnly: true
        type: string
      state:
        description: |
          The current operational state of the FC interface. The state is set to _down_ if the interface is not enabled.<br/>
          If the node hosting the port is down or unavailable, no state value is returned.
        enum:
        - up
        - down
        readOnly: true
        type: string
      svm:
        $ref: '#/definitions/svm_reference'
      uuid:
        description: ONTAP FC interface UUID.
        example: 0556f250-320a-11ea-b50d-00a098d7b0b9
        format: uuid
        readOnly: true
        type: string
      wwnn:
        description: |
          The world wide node name (WWNN) of the FC interface SVM. The WWNN is generated by ONTAP when the Fibre Channel Protocol or the NVMe service is created for the FC interface SVM.
        example: 20:00:00:50:56:b4:13:01
        readOnly: true
        type: string
      wwpn:
        description: |
          The world wide port name (WWPN) of the FC interface. The WWPN is generated by ONTAP when the FC interface is created.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
    type: object
  fc_interface_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
      key:
        description: Unique identifier of the FC interface.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=fcp_lif,lif_uuid=eb2f08bb-8bce-11e9-b59e-00a09865cd13
        type: string
      name:
        description: FC interface name
        example: mob-fc2
        type: string
      uuid:
        description: FC interface UUID
        example: eb2f08bb-8bce-11e9-b59e-00a09865cd13
        format: uuid
        type: string
    type: object
  fc_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_interface'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  fc_port:
    description: |
      A Fibre Channel (FC) port is the physical port of an FC adapter on an ONTAP cluster node that can be connected to an FC network to provide FC network connectivity. An FC port defines the location of an FC interface within the ONTAP cluster.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      description:
        description: A description of the FC port.
        example: Fibre Channel Target Adapter 0a (ACME Fibre Channel Adapter, rev.
          1.0.0, 8G)
        readOnly: true
        type: string
      enabled:
        description: The administrative state of the FC port. If this property is
          set to _false_, all FC connectivity to FC interfaces is blocked. Optional
          in PATCH.
        readOnly: true
        type: boolean
      fabric:
        description: Properties of the fabric to which the FC port is attached.
        properties:
          connected:
            description: Indicates whether the physical port has established a connection
              with the FC fabric.
            readOnly: true
            type: boolean
          connected_speed:
            description: |
              The negotiated data rate between the target FC port and the fabric, in gigabits per second.
            example: 16
            readOnly: true
            type: integer
          switch_port:
            description: |
              The switch port to which the FC port is connected.
            example: ssan-g620-03:33
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Fc port key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=fc_port,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: The FC port name.
        example: 0a
        readOnly: true
        type: string
      node:
        $ref: '#/definitions/node_reference'
      physical_protocol:
        description: |
          The physical network protocol of the FC port.
        enum:
        - fibre_channel
        - ethernet
        readOnly: true
        type: string
      speed:
        description: |
          The physical device speed related properties of the FC port.
        properties:
          configured:
            description: |
              The configured speed of the FC port, in gigabits per second.
            enum:
            - '1'
            - '2'
            - '4'
            - '8'
            - '10'
            - '16'
            - '32'
            - auto
            example: auto
            readOnly: true
            type: string
          maximum:
            description: |
              The maximum speed supported by the FC port, in gigabits per second.
            enum:
            - '1'
            - '2'
            - '4'
            - '8'
            - '10'
            - '16'
            - '32'
            - auto
            example: '32'
            readOnly: true
            type: string
        readOnly: true
        type: object
      state:
        description: |
          The operational state of the FC port.
          - startup - The port is booting up.
          - link_not_connected - The port has finished initialization, but a link with the fabric is not yet established.
          - online - The port is initialized and a link with the fabric has been established.
          - link_disconnected - The link was present at one point on this port but it is currently not established.
          - offlined_by_user - The port is administratively disabled.
          - offlined_by_system - The port is set to offline by the system; this happens when the port encounters a number of errors.
          - node_offline - The state information for the port cannot be retrieved; the node is either offline or inaccessible.
        enum:
        - startup
        - link_not_connected
        - online
        - link_disconnected
        - offlined_by_user
        - offlined_by_system
        - node_offline
        example: online
        readOnly: true
        type: string
      uuid:
        description: The UUID of the FC port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
      wwnn:
        description: |
          The base world wide node name (WWNN) for the FC port.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
      wwpn:
        description: |
          The base world wide port name (WWPN) for the FC port.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
    type: object
  fc_port_analytics:
    description: High level performance metrics of FC port.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      fc_port:
        $ref: '#/definitions/fc_port_reference'
      node:
        $ref: '#/definitions/node_reference'
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      utilization_percent:
        description: Percentage of time for which the FC port is busy.
        format: double
        readOnly: true
        type: number
  fc_port_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_port_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  fc_port_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      fc_port:
        $ref: '#/definitions/fc_port_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/fc_port_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/fc_port_summary_metric'
    type: object
  fc_port_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
      key:
        description: Unique identifier of the FC port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=fc_port,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: FC port name.
        example: fcp_adapter2
        type: string
      uuid:
        description: FC port UUID.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  fc_port_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_port'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  fc_port_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the FC port.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      utilization_percent:
        description: Percentage of time for which the FC port is busy.
        format: double
        readOnly: true
        type: number
  fc_port_summary_metric:
    properties:
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the FC port.
      utilization_percent:
        $ref: '#/definitions/accumulative_submetric'
    type: object
  fileshare:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      access_control:
        description: Provides access to the file share.
        properties:
          acl:
            description: List of CIFS share access controls.
            items:
              properties:
                permission:
                  description: Permission allowed to the user or group.
                  enum:
                  - no_access
                  - read
                  - change
                  - full_control
                  example: read
                  type: string
                user_or_group:
                  description: Active Directory user or group to provide access. To
                    provide access to everyone, use "everyone" as input.
                  example: everyone
                  type: string
              type: object
            type: array
          active_directory_mapping:
            properties:
              key:
                description: Unique identifier of the Active Directory object.
                example: 3b648c1b-d965-03b7-20da-61b791a6263c
                type: string
            type: object
            x-ntap-createOnly: true
          export_policy:
            $ref: '#/definitions/export_policy_provision'
      aggregate:
        description: Aggregate on which the workload is created.
        properties:
          key:
            description: Unique identifier of the aggregate to be used.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=aggregate,uuid=02ed6b19-052d-49e1-a588-eb0e215b0e8e
            type: string
        type: object
        x-ntap-createOnly: true
      assigned_performance_service_level:
        description: Details of the Performance Service Level policy assigned to the
          workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 5a474fb4-052f-11ea-b7d6-fa163ea5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      assigned_storage_efficiency_policy:
        description: Details of the Storage Efficiency Policy assigned to the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: 5a48b7f6-052f-11ea-b7d6-fa163ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Storage Efficiency Policy.
            example: High
            readOnly: true
            type: string
        readOnly: true
        type: object
      cluster:
        description: Cluster on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the cluster.
            example: cbd1757b-0580-11e8-bd9d-00a098d39a12:type=cluster,uuid=cbd1757b-0580-11e8-bd9d-00a098d39e12
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: cluster1
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: cbd1757b-0580-11e8-bd9d-00a098d39e12
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Unique identifier of the file share.
        example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=volume,uuid=e2e06009-398e-4f4a-b3b1-6a680293b0b6
        readOnly: true
        type: string
      mountpoint:
        description: Mount point of the file share. It is prefixed with '/' and is
          an optional attribute. If not provided in the input, the file share name
          is used as a mount point. The CIFS share name is derived from the mount
          point attribute excluding '/'.<br>Only file shares of type "rw" (read-write)
          can be mounted for a POST operation.
        example: /fileshare_mount_point
        type: string
        x-ntap-createOnly: true
      name:
        description: Name of the file share.
        example: FileShare1
        type: string
        x-ntap-readCreate: true
      operational_state:
        description: Operational state of the file share.
        enum:
        - online
        - offline
        example: online
        type: string
        x-ntap-modifyOnly: true
      performance_service_level:
        description: Performance Service Level policy of the workload.
        properties:
          key:
            description: Unique identifier of the Performance Service Level.
            example: 32454e73-06d3-11ea-b7d6-fe163ec4e1a5
            type: string
        type: object
        x-ntap-writeOnly: true
      recommended_performance_service_level:
        description: Details of the Performance Service Level policy recommended for
          the workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 32454e63-06d3-11ea-b7c6-fe163ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 72
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      space:
        description: Storage space-related properties of the fileshare.
        properties:
          size:
            description: Total provisioned size of the file share.
            example: 1428754
            format: int64
            type: integer
        type: object
      storage_efficiency_policy:
        description: Storage Efficency Policy of the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: 32454e63-06d3-11ca-b7d6-fe163ea5e1a5
            type: string
        type: object
        x-ntap-writeOnly: true
      svm:
        description: SVM on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the SVM.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=vserver,uuid=4e09768c-e406-11e9-b660-005056a71be9
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: svm_102
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 4e09768c-e406-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      type:
        default: rw
        description: Type of the file share.<br>rw &dash; read-write file share.<br>dp
          &dash; data-protection file share.<br>ls &dash; load-sharing `dp` file share.
          Valid in GET.<br>dc &dash; data-cache file share(FlexCache). Valid in GET.<br>tmp
          &dash; tmp file share. Valid in GET.
        enum:
        - rw
        - dp
        - ls
        - dc
        - tmp
        example: rw
        type: string
        x-ntap-readCreate: true
      uuid:
        description: UUID of the file share.
        example: 4e09768c-e406-11e9-b660-005056a71be9
        format: uuid
        readOnly: true
        type: string
    type: object
  fileshare_get_collection:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      assigned_performance_service_level:
        description: Details of the Performance Service Level policy assigned to the
          workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 5a474fb4-052f-11ea-b7d6-fa163ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        type: object
      assigned_storage_efficiency_policy:
        description: Details of the Storage Efficiency Policy assigned to the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: 5a48b7f6-052f-11ea-b7d6-fa163ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Storage Efficiency Policy.
            example: High
            readOnly: true
            type: string
        type: object
      cluster:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the cluster.
            example: cbd1757b-0580-11e8-bd9d-00a098d39a12:type=cluster,uuid=cbd1757b-0580-11e8-bd9d-00a098d39e12
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: umeng-aff300-01-02
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: cbd1757b-0580-11e8-bd9d-00a098d39e12
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Unique identifier of the file share.
        example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=volume,uuid=e2e06009-398e-4f4a-b3b1-6a680293b0b6
        readOnly: true
        type: string
      name:
        description: Name of the file share.
        example: FileShare_307
        readOnly: true
        type: string
      recommended_performance_service_level:
        description: Details of the Performance Service Level Policy recommended for
          the workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 3a474fb4-052f-11ea-b7d6-fa163ea5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Performance
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 100
            format: int64
            readOnly: true
            type: integer
        type: object
      space:
        description: Details of the space-related properties of the file share.
        properties:
          size:
            description: Space of the file share.
            example: 104857600
            format: int64
            readOnly: true
            type: integer
        type: object
      svm:
        description: SVM on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the SVM.
            example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=vserver,uuid=23f47259-f4d1-11e8-a848-00a098d390f2
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: svm_cluster1_65aecd
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 23f47259-f4d1-11e8-a848-00a098d390f2
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: UUID of the file share.
        example: e2e06009-398e-4f4a-b3b1-6a680293b0b6
        format: uuid
        readOnly: true
        type: string
    type: object
  fileshare_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/fileshare_get_collection'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  gateways_href:
    properties:
      href:
        description: API server details
        example: /api/gateways/{uuid}
        readOnly: true
        type: string
    readOnly: true
    type: object
  gateways_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/gateways_href'
        readOnly: true
        type: object
      ip_address:
        type: string
      name:
        type: string
      type:
        enum:
        - ONTAP
        type: string
      uuid:
        type: string
    type: object
  gateways_service_response:
    properties:
      _links:
        properties:
          self:
            description: API server details
            example: /api/gateways
            readOnly: true
            type: string
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/gateways_service'
        type: array
    type: object
  href:
    properties:
      href:
        example: /api/resourcelink
        readOnly: true
        type: string
    readOnly: true
    type: object
  igroup:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      initiators:
        description: Mapping of the initiator with initiator group.
        items:
          $ref: '#/definitions/initiator_name'
        type: array
      key:
        description: Resource key of the intiator group.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=igroup,uuid=22f8b044-fadd-11e9-b757-00a09865cd13
        readOnly: true
        type: string
      name:
        description: Name of the initiator group.
        example: igroup1
        type: string
      os_type:
        description: The operating system of the initiator group.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - vmware
        - windows
        - xen
        type: string
      protocol:
        description: The protocols supported by the initiator group.
        enum:
        - mixed
        - fcp
        - iscsi
        type: string
        x-ntap-readCreate: true
      svm:
        $ref: '#/definitions/svm_cr_reference'
      uuid:
        description: Unique identifier of the intiator group.
        example: 22f8b044-fadd-11e9-b757-00a09865cd13
        format: uuid
        readOnly: true
        type: string
    type: object
  igroup_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the initiator group across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=igroup,uuid=22f8b044-fadd-11e9-b757-00a09865cd13
        readOnly: true
        type: string
      name:
        example: igroup1
        readOnly: true
        type: string
      uuid:
        description: |
          Unique identifier of the initiator group across the cluster.
        example: 22f8b044-fadd-11e9-b757-00a09865cd13
        format: uuid
        readOnly: true
        type: string
    type: object
  igroup_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/igroup'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  initiator_name:
    properties:
      name:
        description: |
          The FC WWPN, iSCSI IQN, or iSCSI EUI that identifies the host initiator. Valid in POST & PATCH only and not allowed when the `records` property is in use.<br/>
          An FC WWPN consist of 16 hexadecimal digits grouped as 8 pairs separated by colons. The format for an iSCSI IQN is _iqn.yyyy-mm.reverse_domain_name:any_. The iSCSI EUI format consists of the _eui._ prefix followed by 16 hexadecimal characters.
        example: iqn.1998-01.com.corp.iscsi:name1
        maxLength: 96
        minLength: 1
        type: string
    type: object
  iops_accumulative_metric:
    properties:
      iops:
        $ref: '#/definitions/accumulative_submetric'
  iops_counter:
    properties:
      iops:
        description: Performance metric for read I/O operations.
        example: 100.53
        format: double
        type: number
    readOnly: true
    type: object
  iops_counters:
    properties:
      other:
        description: Peformance metric for others I/O operations.
        example: 100.53
        format: double
        type: number
      read:
        description: Performance metric for read I/O operations.
        example: 100.53
        format: double
        type: number
      total:
        description: Performance metric for all three types i.e. read, write, and
          other I/O operations.
        example: 100.53
        format: double
        type: number
      write:
        description: Peformance metric for write I/O operations.
        example: 100.53
        format: double
        type: number
    readOnly: true
    type: object
  ip_address:
    description: IPv4 or IPv6 address
    example: 10.10.10.7
    type: string
    x-ntap-createOnly: true
  ip_address_family:
    description: IPv4 or IPv6
    enum:
    - ipv4
    - ipv6
    readOnly: true
    type: string
  ip_info:
    description: IP information
    properties:
      address:
        $ref: '#/definitions/ip_address'
      family:
        $ref: '#/definitions/ip_address_family'
      netmask:
        $ref: '#/definitions/ip_netmask'
    type: object
  ip_interface:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      enabled:
        description: The administrative state of the IP interface.
        readOnly: true
        type: boolean
      ip:
        $ref: '#/definitions/ip_info'
      ipspace:
        $ref: '#/definitions/ipspace_info'
      key:
        description: Unique identifier for the IP interface across the datacenter.
        example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=network_lif,lif_uuid=37126171-08af-11eb-8fe5-005056a74cc0
        readOnly: true
        type: string
      location:
        description: Indicates whether the current or home location can be modified.
          Specifying a port implies a node. Specifying a node allows an appropriate
          port to be automatically selected. Ports are not valid and not shown for
          VIP interfaces.
        properties:
          auto_revert:
            readOnly: true
            type: boolean
          broadcast_domain:
            $ref: '#/definitions/broadcast_domain_info'
            readOnly: true
          failover:
            $ref: '#/definitions/failover_scope'
          home_node:
            $ref: '#/definitions/node_info'
          home_port:
            description: Port UUID along with readable names.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                type: object
              key:
                description: Unique identifier for the port across the datacenter.
                example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=network_port,cluster_node_uuid=bbd9dee2-6a73-4f38-ad36-319e22cdefef,port=e0a
                readOnly: true
                type: string
              name:
                description: Name of the home port.
                example: e1b
                readOnly: true
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    readOnly: true
                    type: string
                readOnly: true
                type: object
              uuid:
                description: UUID of the home port.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                format: uuid
                readOnly: true
                type: string
            readOnly: true
            type: object
          is_home:
            description: Lif is on home port and home node.
            readOnly: true
            type: boolean
          node:
            $ref: '#/definitions/node_info'
          port:
            $ref: '#/definitions/port_info'
            description: Port UUID along with readable names.
        readOnly: true
        type: object
      name:
        description: Interface name
        example: dataLif1
        readOnly: true
        type: string
      scope:
        description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to
          "cluster".
        enum:
        - svm
        - cluster
        readOnly: true
        type: string
      state:
        description: The operational state of the interface.
        enum:
        - up
        - down
        readOnly: true
        type: string
      svm:
        $ref: '#/definitions/svm_reference'
      uuid:
        description: ONTAP IP interface UUID.
        example: 29719394-0f6a-11ea-a0c5-00a09865fe59
        format: uuid
        readOnly: true
        type: string
    type: object
  ip_interface_list:
    properties:
      enabled:
        default: true
        description: The administrative state of the interface.
        type: boolean
      ip:
        $ref: '#/definitions/ip_info'
      location:
        description: Current or home location can be modified. Specifying a port implies
          a node. Specifying a node allows an appropriate port to be automatically
          selected. Ports are not valid and not shown for VIP interfaces. For POST,
          broadcast_domain can be specified alone or with home_node.
        properties:
          home_node:
            description: Home node of IP Interface.
            properties:
              name:
                example: node1
                type: string
            type: object
        type: object
      name:
        description: Interface name
        example: dataLif1
        type: string
    type: object
    x-ntap-createOnly: true
  ip_interface_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
      key:
        description: Unique identifier of the network interface.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=network_lif,lif_uuid=9bbd98b2-26a2-11e8-b9ba-00a09865fe59
        type: string
      name:
        description: network interface name
        example: ICLIF2
        type: string
      uuid:
        description: network interface UUID
        example: 9bbd98b2-26a2-11e8-b9ba-00a09865fe59
        format: uuid
        type: string
    type: object
  ip_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/ip_interface'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  ip_netmask:
    description: Input as netmask length (16) or IPv4 mask (255.255.0.0).
    example: '24'
    type: string
    x-ntap-createOnly: true
  ipspace_info:
    description: Interface's IPspace information.
    properties:
      key:
        description: Unique identifier of the IPspace.
        example: 71b41075-f439-11ea-8fe5-005056a74cc0:type=network_ip_space
        readOnly: true
        type: string
      name:
        description: IPspace name
        example: exchange
        readOnly: true
        type: string
      uuid:
        description: IPspace UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  job:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      complete_time:
        description: Job completed time in ISO format
        example: 2019-11-15T09:57:22.000+05:30
        format: date-time
        readOnly: true
        type: string
      job_results:
        description: Details of the result of the job
        items:
          properties:
            name:
              description: Name of field of the job result
              readOnly: true
              type: string
            value:
              description: Value of field of the job result
              readOnly: true
              type: string
          type: object
        type: array
      key:
        description: Unique identifier of the job
        example: db409f4c1430246f:e6fd83b:16e69bdf32f:-7fbd
        readOnly: true
        type: string
      name:
        description: Name of the job
        example: Create Access-endpoint
        readOnly: true
        type: string
      parent_job_key:
        description: Parent job key
        example: fc4f77ad3c7e9cc3:-7f74220e:17019d98df0:-7ff7
        readOnly: true
        type: string
      spawned_job_summary:
        description: Summary of spawned jobs
        properties:
          aborted_jobs:
            description: Number of spawned jobs which aborted
            readOnly: true
            type: integer
          completed_jobs:
            description: Number of spawned jobs which are completed. Includes successful,
              failed and aborted jobs
            readOnly: true
            type: integer
          failed_jobs:
            description: Number of spawned jobs which failed
            readOnly: true
            type: integer
          running_jobs:
            description: Number of spawned jobs which are in running state
            readOnly: true
            type: integer
          successful_jobs:
            description: Number of spawned jobs which successfully completed
            readOnly: true
            type: integer
          total_jobs:
            description: Total number of spawned jobs
            readOnly: true
            type: integer
        type: object
      state:
        description: State of the job
        example: running
        readOnly: true
        type: string
      status:
        description: Status of the job
        enum:
        - normal
        - warning
        - partial_failures
        - error
        example: normal
        readOnly: true
        type: string
      submit_time:
        description: Job submitted time in ISO format
        example: 2019-11-15T09:57:18.000+05:30
        format: date-time
        readOnly: true
        type: string
      task_reports:
        description: Details of the tasks associated with the job
        items:
          properties:
            complete_time:
              description: Task completed time in ISO format
              example: 2019-11-15T09:57:20.000+05:30
              format: date-time
              readOnly: true
              type: string
            description:
              description: Description of the task
              example: Add VLAN e0j-16 on node ocum--01 to broadcast domain
              readOnly: true
              type: string
            failure_reason:
              description: Failure reason of the task if it failed
              example: ZAPI call net-port-broadcast-domain-modify timed out after
                0:05:00.000
              readOnly: true
              type: string
            key:
              description: Unique identifier of the task
              example: db409f4c1430246f:e6fd83b:16e69bdf32f:-7fac
              readOnly: true
              type: string
            name:
              description: Name of the task
              example: provision_modify_broadcast_domain
              readOnly: true
              type: string
            start_time:
              description: Task started time in ISO format
              example: 2019-11-15T09:57:20.000+05:30
              format: date-time
              readOnly: true
              type: string
            state:
              description: State of the task
              example: completed
              readOnly: true
              type: string
            status:
              description: Status of the task
              example: error
              readOnly: true
              type: string
            type:
              description: Type of the task
              example: provision_modify_broadcast_domain
              readOnly: true
              type: string
          type: object
        type: array
      type:
        description: Type of the job
        example: provision_eth_endpoint_create
        readOnly: true
        type: string
    type: object
  job_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Key of the asynchronous job that is triggered by a POST, PATCH
          , or DELETE operation.
        example: 85b642774a960362:-4405f3a8:16e686b7083:-6fac
        readOnly: true
        type: string
    type: object
  job_link_response:
    properties:
      job:
        $ref: '#/definitions/job_link'
    readOnly: true
    type: object
  job_reference:
    properties:
      job:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            type: object
          key:
            description: The key of the asynchronous job that is triggered by a POST,
              PATCH, or DELETE operation.
            readOnly: true
            type: string
        type: object
    readOnly: true
    type: object
  jobs_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/job'
        type: array
      total_records:
        description: Total number of records
        type: integer
    type: object
  latency_counters:
    properties:
      other:
        description: Peformance metric for other latency operations.
        example: 100.53
        format: double
        type: number
      read:
        description: Performance metric for read latency operations.
        example: 100.53
        format: double
        type: number
      total:
        description: Performance metric for all three types i.e. read, write, and
          other latency operations.
        example: 100.53
        format: double
        type: number
      write:
        description: Peformance metric for write latency operations.
        example: 100.53
        format: double
        type: number
    readOnly: true
    type: object
  license_package:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      key:
        description: License key
        example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=license,package_name=base,serial_number=1-80-000011
        readOnly: true
        type: string
      licenses:
        description: Installed package licenses.
        items:
          properties:
            expiry_time:
              description: Expiration date and time of the license.
              example: 2019-03-02T19:00:00Z
              format: date-time
              readOnly: true
              type: string
            owner:
              description: Cluster, node or license manager that owns the license.
              example: cluster1
              readOnly: true
              type: string
            serial_number:
              description: License serial number.
              example: '123456789'
              readOnly: true
              type: string
          readOnly: true
          type: object
        type: array
      name:
        description: Name of the license.
        example: NFS
        readOnly: true
        type: string
      node:
        $ref: '#/definitions/node_reference'
      scope:
        description: Scope of the license.
        enum:
        - not_available
        - site
        - cluster
        - node
        readOnly: true
        type: string
      uuid:
        description: License UUID.
        example: bbd9dee2-6a73-4f38-ad36-319e22cdefef.base.1-80-000011
        format: uuid
        readOnly: true
        type: string
    type: object
  license_package_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/license_package'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  lif_reference:
    description: Complete current interface information
    properties:
      key:
        description: Unique identifier of the interface across the datacenter.
        example: 20624cb8-0dd3-11eb-af57-005056acfae4:type=interface,lif_uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: Name of the lif.
        example: port1
        type: string
      uuid:
        description: Unique identifier of the interface across the cluster.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  lun:
    description: Complete LUN information.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      class:
        description: The class of LUN
        enum:
        - regular
        - protocol_endpoint
        - vvol
        example: regular
        readOnly: true
        type: string
      cluster:
        $ref: '#/definitions/cluster_reference'
      comment:
        description: A configurable comment available for use by the administrator.
        example: san123344
        readOnly: true
        type: string
      key:
        description: Resource key of the LUN across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=lun,uuid=00a0cd31-f5eb-4d0a-a237-f097209f2be8
        readOnly: true
        type: string
      location:
        properties:
          qtree:
            $ref: '#/definitions/qtree_reference'
          volume:
            $ref: '#/definitions/volume_reference'
        type: object
      lun_maps:
        items:
          properties:
            igroup:
              $ref: '#/definitions/igroup_reference'
            logical_unit_number:
              description: The logical unit number assigned to the LUN for initiators
                in the initiator group
              example: 1
              format: int32
              readOnly: true
              type: integer
          type: object
        type: array
      name:
        description: The fully qualified path name of the LUN composed of a ???/vol???
          prefix, the volume name, the (optional) qtree name, and base name of the
          LUN.
        example: /vol/NSLM_VOL_LUN_1570192757844/san123344
        readOnly: true
        type: string
      os_type:
        description: The operating system of the LUN.
        example: windows_2008
        readOnly: true
        type: string
      qos_policy:
        $ref: '#/definitions/qos_reference'
      serial_number:
        description: The LUN serial number. The serial number is generated by ONTAP
          when the LUN is created.
        readOnly: true
        type: string
      space:
        description: The storage space and related properties of the LUN.
        properties:
          size:
            description: The total provisioned size of the LUN.
            format: int64
            readOnly: true
            type: integer
          used:
            description: The amount of space consumed by the main data stream of the
              LUN.
            format: int64
            readOnly: true
            type: integer
        type: object
      status:
        description: Status information about the LUN.
        properties:
          mapped:
            description: Is the LUN mapped to any initiator or not.
            readOnly: true
            type: boolean
          state:
            description: The state of the LUN.
            enum:
            - offline
            - online
            readOnly: true
            type: string
        readOnly: true
        type: object
      svm:
        $ref: '#/definitions/svm_reference'
      uuid:
        description: Unique identifier of the LUN across the cluster
        example: 00a0cd31-f5eb-4d0a-a237-f097209f2be8
        format: uuid
        readOnly: true
        type: string
    type: object
  lun_analytics:
    description: High level performance metrics of the LUN.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      lun:
        $ref: '#/definitions/lun_reference'
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      volume:
        $ref: '#/definitions/volume_reference'
  lun_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/lun_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  lun_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      lun:
        $ref: '#/definitions/lun_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/lun_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/lun_summary_metric'
    readOnly: true
    type: object
  lun_reference:
    description: Reference to LUN
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the LUN across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=lun,uuid=00a0cd31-f5eb-4d0a-a237-f097209f2be8
        type: string
      name:
        example: lun1
        type: string
      uuid:
        description: Unique identifier of the LUN across the cluster.
        example: 00a0cd31-f5eb-4d0a-a237-f097209f2be8
        format: uuid
        type: string
    type: object
  lun_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/lun'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  lun_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        $ref: '#/definitions/iops_counters'
        description: Rate of I/O operations observed at the storage object.
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the LUN, in milliseconds.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the LUN.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  lun_summary_metric:
    properties:
      iops:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of I/O operations observed at the LUN.
      latency:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the round trip latency observed at the LUN, in milliseconds.
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the LUN.
    type: object
  metrics_performance_capacity:
    properties:
      available_iops_percent:
        description: Percentage of performance capacity for available iops.
        format: double
        readOnly: true
        type: number
      free_percent:
        description: Percentage of performance capacity that is free.
        format: double
        readOnly: true
        type: number
      system_workload_percent:
        description: Percentage of performance capacity for system workload.
        format: double
        readOnly: true
        type: number
      used_percent:
        description: Percentage of performance capacity that is being used.
        format: double
        readOnly: true
        type: number
      user_workload_percent:
        description: Percentage of performance capacity for user workload.
        format: double
        readOnly: true
        type: number
  name_servers:
    description: |
      The list of IP addresses of the DNS servers. Addresses can be either
      IPv4 or IPv6 addresses.
    example:
    - 10.224.65.20
    - 2001:db08:a0b:12f0::1
    items:
      type: string
    maxItems: 3
    type: array
  network_fc_interface_analytics:
    description: High-level performance metrics of the network FC interface.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      fc_interface:
        $ref: '#/definitions/fc_interface_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
  network_fc_interface_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/network_fc_interface_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  network_fc_interface_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      lif:
        $ref: '#/definitions/lif_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/network_fc_interface_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/network_fc_interface_summary_metric'
    readOnly: true
    type: object
  network_fc_interface_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        $ref: '#/definitions/iops_counters'
        description: Rate of I/O operations observed at the storage object.
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the network FC interface, in milliseconds.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the network FC
          interface.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  network_fc_interface_summary_metric:
    properties:
      iops:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of I/O operations observed at the network FC interface.
      latency:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of the round trip latency at the network FC interface,
          in milliseconds.
      throughput:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of the throughput operation observed at the network FC
          interface.
    type: object
  network_ip_interface_analytics:
    description: High-level performance metrics of the network interface.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      ip_interface:
        $ref: '#/definitions/ip_interface_reference'
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
  network_ip_interface_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/network_ip_interface_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  network_ip_interface_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      lif:
        $ref: '#/definitions/lif_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/network_ip_interface_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/network_ip_interface_summary_metric'
    readOnly: true
    type: object
  network_ip_interface_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      error:
        properties:
          received:
            description: Received error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
          total:
            description: Total error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
          transmitted:
            description: Transmitted error rate
            example: 10.00
            format: double
            readOnly: true
            type: number
        type: object
      packets:
        properties:
          received:
            description: Received packets
            example: 10.00
            format: double
            readOnly: true
            type: number
          total:
            description: Total packets
            example: 10.00
            format: double
            readOnly: true
            type: number
          transmitted:
            description: Transmitted packets
            example: 10.00
            format: double
            readOnly: true
            type: number
        type: object
      throughput:
        description: Value of the throughput operation observed at the network interface.
        properties:
          received:
            description: Received throughput
            example: 10.00
            format: double
            readOnly: true
            type: number
          total:
            description: Total throughput
            example: 10.00
            format: double
            readOnly: true
            type: number
          transmitted:
            description: Transmitted throughput
            example: 10.00
            format: double
            readOnly: true
            type: number
        type: object
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  network_ip_interface_summary_metric:
    properties:
      error:
        description: Summary of the error rate observed at the network interface.
        properties:
          received:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          transmitted:
            $ref: '#/definitions/accumulative_submetric'
        type: object
      packets:
        description: Summary of the packets per second observed at the network interface.
        properties:
          received:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          transmitted:
            $ref: '#/definitions/accumulative_submetric'
        type: object
      throughput:
        description: Summary of the throughput operation observed at the network interface.
        properties:
          received:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          transmitted:
            $ref: '#/definitions/accumulative_submetric'
        type: object
    type: object
  nis_domain:
    description: |
      The NIS domain to which this configuration belongs.
    maxLength: 64
    minLength: 1
    type: string
  nis_servers:
    description: |
      A list of hostnames or IP addresses of NIS servers used by the NIS domain configuration.
    items:
      maxLength: 255
      minLength: 1
      type: string
    maxItems: 10
    type: array
  node:
    description: Complete node information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      ha:
        description: The nodes available in the High Availability (HA) group of this
          node.
        properties:
          partners:
            description: The nodes in this node's High Availability (HA) group.
            items:
              $ref: '#/definitions/node_reference'
            type: array
        readOnly: true
        type: object
      health:
        description: The health of the node in the cluster. A boolean value of 'True'
          means a healthy node.
        example: true
        readOnly: true
        type: boolean
      key:
        description: Node Key
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster_node,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      location:
        example: rack 2 row 5
        type: string
      model:
        example: FAS3070
        readOnly: true
        type: string
      name:
        example: node-01
        type: string
      performance_capacity:
        $ref: '#/definitions/performance_capacity'
      serial_number:
        example: 4048820-60-9
        readOnly: true
        type: string
      system_id:
        example: 92027651
        readOnly: true
        type: String
      uptime:
        description: The total time, in seconds, for which the node is up.
        example: 300536
        format: int64
        readOnly: true
        type: integer
      uuid:
        description: ONTAP node UUID
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
      version:
        $ref: '#/definitions/version'
    type: object
  node_analytics:
    description: High-level performance metrics of the node.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      node:
        $ref: '#/definitions/node_reference'
      performance_capacity:
        description: Performance capacity details (used and available_ops) of the
          storage object.
        properties:
          available_iops_percent:
            description: Percentage of performance capacity for available iops.
            format: double
            readOnly: true
            type: number
          used_percent:
            description: Percentage of performance capacity that is being used.
            format: double
            readOnly: true
            type: number
        type: object
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      utilization_percent:
        description: Percentage of time for which the node is busy.
        format: double
        readOnly: true
        type: number
  node_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/node_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  node_info:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
      key:
        description: Unique identifier for the node across the datacenter.
        example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=cluster_node,uuid=bbd9dee2-6a73-4f38-ad36-319e22cdefef
        readOnly: true
        type: string
      name:
        description: Name of the node.
        example: node1
        readOnly: true
        type: string
      uuid:
        description: Unique identifier of the node.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  node_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: strring
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      node:
        $ref: '#/definitions/node_reference'
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/node_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/node_summary_metric'
    type: object
  node_readonly_reference:
    description: Complete node information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the node across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster_node,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        readOnly: true
        type: string
      name:
        example: node1
        readOnly: true
        type: string
      uuid:
        description: Unique identifier of the node across the cluster.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  node_reference:
    description: Complete node information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the node across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=cluster_node,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        description: Name of the node.
        example: node1
        type: string
      uuid:
        description: Unique identifier of the node across the cluster.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  node_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        description: Rate of I/O operations observed at the storage object.
        properties:
          local:
            $ref: '#/definitions/iops_counters'
            description: Rate of local I/O operations observed at the storage object.
          other:
            description: Peformance metric for others I/O operations.
            example: 100.53
            format: double
            type: number
          read:
            description: Performance metric for read I/O operations.
            example: 100.53
            format: double
            type: number
          total:
            description: Performance metric for all three types i.e. read, write,
              and other I/O operations.
            example: 100.53
            format: double
            type: number
          write:
            description: Peformance metric for write I/O operations.
            example: 100.53
            format: double
            type: number
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the node, in milliseconds.
      performance_capacity:
        $ref: '#/definitions/metrics_performance_capacity'
        description: Performance capacity details (used_percent, free_percent, available_iops_percent,
          etc.) of storage object.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the node.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      utilization_percent:
        description: Percentage of time for which the node is busy.
        format: double
        readOnly: true
        type: number
  node_summary_metric:
    properties:
      iops:
        description: Summary of I/O operations observed at the node.
        properties:
          local_iops:
            $ref: '#/definitions/accumulative_metric'
            description: Summary of local I/O operations observed at the storage object.
          other:
            $ref: '#/definitions/accumulative_submetric'
          read:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          write:
            $ref: '#/definitions/accumulative_submetric'
      latency:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of round trip latency at the node, in milliseconds.
      performance_capacity:
        description: Summary of performance capacity details (used_percent, free_percent,
          available_iops_percent, etc.) of the storage object.
        properties:
          available_iops_percent:
            $ref: '#/definitions/accumulative_submetric'
          free_percent:
            $ref: '#/definitions/accumulative_submetric'
          system_workload_percent:
            $ref: '#/definitions/accumulative_submetric'
          used_percent:
            $ref: '#/definitions/accumulative_submetric'
          user_workload_percent:
            $ref: '#/definitions/accumulative_submetric'
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the node.
      utilization_percent:
        $ref: '#/definitions/accumulative_submetric'
    type: object
  nodes_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/node'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  performance_capacity:
    properties:
      used:
        description: The percentage of the performance capacity that is being used.
        example: 0.0
        format: float
        type: number
    readOnly: true
    type: object
  performance_service_level:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      create_time:
        description: Timestamp indicating when the Performance Service Level was created,
          in ISO format.
        example: 2019-11-14T17:23:33.205+05:30
        format: date-time
        readOnly: true
        type: string
      description:
        description: Description of the Performance Service Level.
        type: string
      iops:
        description: IOPS details for this Performance Service Level.
        properties:
          absolute_min_iops:
            description: Absolute minimum IOPS value that is used as an override when
              the expected IOPS is less than this value, Absolute Minimum IOPS value
              cannot be greater than 75000 and cannot be less than (1000 / expected
              latency).
            example: 75
            format: int64
            type: integer
          expected_iops_per_tb:
            description: Minimum number of IOPS, per terabyte (TB) of storage space,
              guaranteed to a client that is using the storage object where this Performance
              Service Level is applied.
            example: 128
            format: int64
            type: integer
          peak_iops_allocation_policy:
            description: Peak IOPS allocation policy to be used = ['USED_SPACE', 'ALLOCATED_SPACE'].
            enum:
            - used_space
            - allocated_space
            example: used_space
            type: string
          peak_iops_per_tb:
            description: Maximum number of IOPS, per terabyte (TB) of storage space,guaranteed
              to a client that is using the storage object where this Performance
              Service Level is applied.
            example: 512
            format: int64
            type: integer
        type: object
      key:
        description: Unique identifier of the Performance Service Level.
        example: 0640d870-05f8-11ea-b7d6-fa163ec5e1a5
        readOnly: true
        type: string
      latency:
        description: Latency details of this Performance Service Level.
        properties:
          expected:
            description: Target latency, in milliseconds, the clients might observe
              for read/write operations on the storage object.
            example: 17
            format: float
            type: number
        type: object
      name:
        description: Name of the Performance Service Level.
        example: Value
        type: string
      space:
        description: Space details of this Performance Service Level.
        properties:
          available:
            description: Available space
            example: 2424014663680
            format: int64
            readOnly: true
            type: integer
          used:
            description: Used space
            example: 0
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      system_defined:
        description: Specifies whether the Performance Service Level is system-defined
          or user-defined.
        example: true
        readOnly: true
        type: boolean
      update_time:
        description: Timestamp indicating when the Performance Service Level was created,
          in ISO format.
        example: 2019-11-13T14:59:00.000+05:30
        format: date-time
        readOnly: true
        type: string
      workload_count:
        description: Number of workloads managed by this Performance Service Level.
        example: 0
        format: int64
        readOnly: true
        type: integer
    type: object
  port_info:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        type: object
      key:
        description: Unique identifier for the port across the datacenter.
        example: bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=network_port,cluster_node_uuid=bbd9dee2-6a73-4f38-ad36-319e22cdefef,port=e0a
        readOnly: true
        type: string
      name:
        description: Name of the port.
        example: e1b
        readOnly: true
        type: string
      node:
        properties:
          name:
            description: Name of node on which the port is located.
            example: node1
            readOnly: true
            type: string
        type: object
      uuid:
        description: Unique identifier of the port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  port_reference:
    description: Complete port information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the port across the datacenter.
        example: 20624cb8-0dd3-11eb-af57-005056acfae4:type=port,lif_uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
      name:
        example: port1
        type: string
      uuid:
        description: Unique identifier of the port across the cluster.
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        type: string
    type: object
  psl_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/performance_service_level'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  qos_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      adaptive:
        description: Adaptive QoS policy-groups define service level objectives (SLOs)
          that are used to adjust the throughput based on the allocated and used space
          of the storage object.
        properties:
          absolute_min_iops:
            description: Specifies the absolute minimum IOPS that is used as an override
              when the expected_iops is less than this value. These floors are not
              guaranteed on non-AFF platforms or when FabricPool tiering policies
              are set.
            format: int64
            type: integer
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      fixed:
        description: QoS policy-groups define a fixed service level objective (SLO)
          for a storage object.
        properties:
          capacity_shared:
            default: false
            description: Specifies whether the capacities are shared across all objects
              that use this QoS policy-group. Default is false.
            readOnly: true
            type: boolean
          max_throughput_iops:
            description: Maximum throughput defined by this policy.  It is specified
              in terms of IOPS. 0 means no maximum throughput is enforced.
            format: int64
            type: integer
          max_throughput_mbps:
            description: Maximum throughput defined by this policy.  It is specified
              in terms of MB/s. 0 means no maximum throughput is enforced.
            format: int64
            type: integer
          min_throughput_iops:
            description: Minimum throughput defined by this policy.  It is specified
              in terms of IOPS. 0 means no minimum throughput is enforced. These floors
              are not guaranteed on non-AFF platforms or when FabricPool tiering policies
              are set.
            format: int64
            type: integer
        type: object
      key:
        description: Unique identifier for the QoS policy across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=qos_policy_group,qos_policy_group_uuid=b048f152-84c6-11e8-8e2d-00a09865cd13
        readOnly: true
        type: string
      name:
        description: Name of the QoS policy.
        example: qos1
        type: string
      object_count:
        description: Number of objects attached to this policy.
        format: int32
        readOnly: true
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      uuid:
        description: ONTAP QoS policy UUID.
        example: b048f152-84c6-11e8-8e2d-00a09865cd13
        format: uuid
        readOnly: true
        type: string
    type: object
  qos_policy_reference:
    description: QoS information
    properties:
      policy:
        description: When "min_throughput_iops", "max_throughput_iops" or "max_throughput_mbps"
          attributes are specified, the storage object is assigned to an auto-generated
          QoS policy group. If the attributes are later modified, the auto-generated
          QoS policy-group attributes are modified. Attributes can be removed by specifying
          "0" and policy group by specifying "none". Upon deletion of the storage
          object or if the attributes are removed, then the QoS policy-group is also
          removed.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier for the QoS policy across the datacenter.
            example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=qos_policy_group,qos_policy_group_uuid=b048f152-84c6-11e8-8e2d-00a09865cd13
            readOnly: true
            type: string
          max_throughput_iops:
            description: Specifies the maximum throughput in IOPS, 0 means none. This
              is mutually exclusive with name and UUID during POST and PATCH. Default
              is 15000 on AFF platforms and 10000 on all other platforms.
            example: 10000
            format: int64
            type: integer
          max_throughput_mbps:
            description: Specifies the maximum throughput in MB/s, 0 means none. This
              is mutually exclusive with name and UUID during POST and PATCH.
            example: 10000
            format: int64
            type: integer
          min_throughput_iops:
            default: 0
            description: Specifies the minimum throughput in IOPS, 0 means none. Setting
              "min_throughput" is supported on AFF platforms only, unless FabricPool
              tiering policies are set. This is mutually exclusive with name, UUID
              and" max_throughput_mbps" during POST and PATCH.
            example: 2000
            format: int64
            type: integer
          name:
            description: The QoS policy group name. This is mutually exclusive with
              UUID and other QoS attributes during POST and PATCH.
            example: qos1
            type: string
          uuid:
            description: The QoS policy group UUID. This is mutually exclusive with
              name and other QoS attributes during POST and PATCH.
            example: b048f152-84c6-11e8-8e2d-00a09865cd13
            format: uuid
            type: string
        type: object
    type: object
  qos_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/qos_policy'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  qos_reference:
    description: Reference to QoS policy
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the QoS policy across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=qos_policy_group,qos_policy_group_uuid=b048f152-84c6-11e8-8e2d-00a09865cd13
        readOnly: true
        type: string
      name:
        example: qos1
        readOnly: true
        type: string
      uuid:
        description: |
          Unique identifier of the QoS policy across the cluster.
        example: b048f152-84c6-11e8-8e2d-00a09865cd13
        format: uuid
        readOnly: true
        type: string
    type: object
  qtree:
    description: A qtree is a directory at the top level of a volume to which a custom
      export policy (for fine-grained access control) and a quota rule can be applied,
      if required.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      export_policy:
        $ref: '#/definitions/export_policy_reference'
      id:
        description: ONTAP Qtree ID
        example: 1
        format: int64
        readOnly: true
        type: integer
      key:
        description: Unique identifier for the qtree across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=qtree,vserver_uuid=000e37a0-b2d9-11e8-8f7b-00a09865cd13,volume_uuid=0e59f935-639b-4b8c-9797-a0a55d2833ff,qtree_id=1
        readOnly: true
        type: string
      name:
        description: Name of the qtree.
        example: qtree1
        type: string
      security_style:
        $ref: '#/definitions/security_style'
      svm:
        $ref: '#/definitions/svm_reference'
      volume:
        $ref: '#/definitions/volume_reference'
    type: object
  qtree_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: Identifier of the qtree.
        example: 1
        type: string
      key:
        description: Unique identifier of the Qtree across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=qtree,vserver_uuid=000e37a0-b2d9-11e8-8f7b-00a09865cd13,volume_uuid=0e59f935-639b-4b8c-9797-a0a55d2833ff,qtree_id=1
        readOnly: true
        type: string
      name:
        description: Name of the qtree.
        example: qtree1
        type: string
    type: object
  qtree_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/qtree'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  request_body:
    properties:
      body:
        format: binary
        type: string
    type: object
  response_body:
    properties:
      body:
        format: binary
        type: string
    type: object
  route:
    description: Optinal array of routes for the SVM.
    properties:
      destination:
        $ref: '#/definitions/ip_info'
      gateway:
        description: The IP address of the gateway router leading to the destination
        type: string
    type: object
    x-ntap-createOnly: true
  script:
    properties:
      description:
        description: Description of the script.
        example: This is a sample script for reference.
        type: string
      key:
        description: Unique identifier of the script.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        format: uuid
        type: string
      name:
        description: Name of the script.
        example: repair.sh
        type: string
    type: object
  script_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/script'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  security_style:
    description: Security style. Valid in POST or PATCH.
    enum:
    - unix
    - ntfs
    - mixed
    type: string
  sep_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/storage_efficiency_policy'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  share_acl:
    description: Access Control List (ACL) defining the users and groups that have
      permissions to access the CIFS share.
    properties:
      permission:
        description: |
          Specifies the access rights that a user or group has on the defined CIFS share.
          The following values are allowed:
          * no_access    - User does not have CIFS share access
          * read         - User has only read access
          * change       - User has change access
          * full_control - User has full_control access
        enum:
        - no_access
        - read
        - change
        - full_control
        type: string
      user_or_group:
        description: Specifies the user or group name to add to the access control
          list of a CIFS share.
        example: ENGDOMAIN\ad_user
        readOnly: true
        type: string
    type: object
  slo_lun:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregate:
        description: Aggregate on which the LUN is located.
        properties:
          key:
            description: Unique identifier of the aggregate to be used.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=aggregate,uuid=725342a6-efb8-4187-bb15-094febf26df6
            type: string
        type: object
        x-ntap-createOnly: true
      assigned_performance_service_level:
        description: Details of the Performance Service Level policy assigned to the
          workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 1251e51b-069f-11ea-980d-fa163e82bbf2
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      assigned_storage_efficiency_policy:
        description: Details of the Storage Efficiency Policy assigned to the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: ba2692a9-eec1-40a0-8a3b-8ae8263a3fad
            readOnly: true
            type: string
          name:
            description: Name of the Storage Efficiency Policy.
            example: Low
            readOnly: true
            type: string
        readOnly: true
        type: object
      cluster:
        description: Cluster on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Cluster key
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=cluster,uuid=7d5a59b3-953a-11e8-8857-00a098dcc959
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: cluster1
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Resource key of the LUN.
        example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=lun,uuid=76b67198-210b-4870-86ce-87398c585812
        readOnly: true
        type: string
      lun_maps:
        description: Mapping of the LUN with an initiator group.
        items:
          properties:
            igroup:
              description: Initiator group to which the LUN is mapped.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                key:
                  description: Resource key of the initiator group.
                  example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=igroup,uuid=2c6b1477-f486-11e8-8857-00a098dcc959
                  type: string
                name:
                  description: Name of the initiator group.
                  example: igroup1
                  readOnly: true
                  type: string
                uuid:
                  description: UUID of the initiator group.
                  example: 2c6b1477-f486-11e8-8857-00a098dcc959
                  format: uuid
                  readOnly: true
                  type: string
              type: object
            logical_unit_number:
              description: LUN ID
              example: 0
              format: int32
              type: integer
          type: object
        type: array
      name:
        description: The fully qualified path name of the LUN composed of a "vol"
          prefix, the volume name, the qtree name (optional), and the base name of
          the LUN.
        example: lun1
        type: string
        x-ntap-readCreate: true
      operational_state:
        description: State of the LUN.
        enum:
        - online
        - offline
        example: online
        type: string
        x-ntap-modifyOnly: true
      os_type:
        description: Specifies the platform that can use this LUN.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        example: linux
        type: string
        x-ntap-readCreate: true
      performance_service_level:
        description: Performance Service Level of the workload.
        properties:
          key:
            description: Unique identifier of the Performance Service Level.
            example: 1251e51b-069f-11ea-980d-fa163e82bbf2
            type: string
        type: object
        x-ntap-writeOnly: true
      recommended_performance_service_level:
        description: Recommended Performance Service Level of the workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 1251e51b-069f-11ea-980d-fa163e82bbf2
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      space:
        description: Storage space-related properties of the LUN.
        properties:
          size:
            description: Total provisioned size of the LUN.
            example: 1073741824
            format: int64
            type: integer
        type: object
      storage_efficiency_policy:
        description: Storage Efficiency Policy of the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: ba2692a9-eec1-40a0-8a3b-8ae8263a3fad
            type: string
        type: object
        x-ntap-writeOnly: true
      svm:
        description: SVM in which the LUN is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: SVM key
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=vserver,uuid=0176c2cb-fa96-11e8-b536-00a098dcc6b6
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: SVM1
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 0176c2cb-fa96-11e8-b536-00a098dcc6b6
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: UUID of the LUN.
        format: uuid
        readOnly: true
        type: string
      volume:
        description: Volume in which the LUN is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Key of the volume.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=volume,uuid=cb07f060-c7bd-4c03-8dcd-1e3248a392bb
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the volume.
            example: volume1
            readOnly: true
            type: string
          name_tag:
            description: During LUN creation, you can specify a tag that can be used
              to derive the volume name. If you provide the volume key, the tag is
              ignored. This tag can be used for searching the volume name for one
              or more LUNs. The tag 'sample_volume' will create a volume with the
              name 'NSLM_sample_volume'.
            example: sample_volume
            type: string
            x-ntap-createOnly: true
          uuid:
            description: UUID of the volume.
            example: cb07f060-c7bd-4c03-8dcd-1e3248a392bb
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  slo_lun_get:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      assigned_performance_service_level:
        description: Details of the Performance Service Level policy assigned to the
          workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 1251e51b-069f-11ea-980d-fa163e82bbf2
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        type: object
      assigned_storage_efficiency_policy:
        description: Details of the Storage Efficiency Policy assigned to the workload.
        properties:
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: 1451e61b-069f-12ea-980c-fa163a82bbf2
            readOnly: true
            type: string
          name:
            description: Name of the Storage Efficiency Policy.
            example: High
            readOnly: true
            type: string
        type: object
      cluster:
        description: Cluster on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the cluster.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=cluster,uuid=7d5a59b3-953a-11e8-8857-00a098dcc959
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: Cluster1
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      key:
        description: Resource key of the LUN.
        example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=lun,uuid=76b67198-210b-4870-86ce-87398c585812
        readOnly: true
        type: string
      name:
        description: The fully qualified path name of the LUN composed of a "vol"
          prefix, the volume name, the qtree name (optional), and the base name of
          the LUN.
        readOnly: true
        type: string
      recommended_performance_service_level:
        description: Details of the Performance Service Level policy recommended to
          the workload.
        properties:
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 1251e51b-069f-11ea-980d-fa163e82bbf2
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        type: object
      space:
        description: Storage properties of the LUN.
        properties:
          size:
            description: Total provisioned size of the LUN.
            example: 124637
            format: int64
            readOnly: true
            type: integer
        type: object
      svm:
        description: SVM in which the LUN is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the SVM.
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=vserver,uuid=0176c2cb-fa96-11e8-b536-00a098dcc6b6
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: SVM1
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 0176c2cb-fa96-11e8-b536-00a098dcc6b6
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: UUID of the LUN.
        example: 76b67198-210b-4870-86ce-87398c585812
        format: uuid
        readOnly: true
        type: string
      volume:
        description: Volume in which the LUN is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Volume key
            example: 7d5a59b3-953a-11e8-8857-00a098dcc959:type=volume,uuid=cb07f060-c7bd-4c03-8dcd-1e3248a392bb
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the volume.
            example: volume1
            readOnly: true
            type: string
          uuid:
            description: UUID of the volume.
            example: cb07f060-c7bd-4c03-8dcd-1e3248a392bb
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  slo_lun_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/slo_lun_get'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  snapshot_policy_reference:
    description: Reference to the SnapShot copy policy.
    properties:
      key:
        description: Unique identifier for the Snapshot copy policy across the datacenter.
        example: d96d953e-2e0a-11ea-a860-00a098dcc6b6:type=snapshot_policy,vserver_uuid=e04a51b8-2e0a-11ea-a860-00a098dcc6b6,name=default
        readOnly: true
        type: string
      name:
        example: default
        type: string
      uuid:
        example: d96d953e-2e0a-11ea-a860-00a098dcc6b6.e04a51b8-2e0a-11ea-a860-00a098dcc6b6.default
        format: uuid
        type: string
    type: object
  state:
    description: Event state. Ordering by history.state is not supported
    enum:
    - new
    - acknowledged
    - resolved
    - obsolete
    example: new
    readOnly: true
    type: string
  storage_efficiency_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      compression:
        default: inline
        description: Specifies whether or not compression is applied to the provisioned
          data and the type of compression = ['inline', 'background', 'none']. The
          default is 'inline'.
        enum:
        - inline
        - background
        - none
        example: inline
        type: string
      create_time:
        description: Timestamp indicating when the Storage Efficiency Policy was created,
          in ISO format.
        example: 2019-11-14T17:23:33.205+05:30
        format: date-time
        readOnly: true
        type: string
      deduplication:
        default: inline
        description: Specifies whether or not deduplication is applied to the provisioned
          data and the type of deduplication = ['inline', 'background', 'none']. The
          default is 'inline'.
        enum:
        - inline
        - background
        - none
        example: inline
        type: string
      description:
        description: Description of the Storage Efficiency Policy.
        type: string
      key:
        description: Unique identifier of the Storage Efficiency Policy.
        example: 2059fda9-0607-11ea-b7d6-fa163ec5e1a5
        readOnly: true
        type: string
      name:
        description: Name of the Storage Efficiency Policy.
        example: High
        type: string
      space_thin_provisioned:
        default: true
        description: Specifies whether to use thin-provisioning for space.
        example: true
        type: boolean
      system_defined:
        description: Specifies whether the Storage Efficiency Policy is system-defined
          or user-defined.
        example: true
        readOnly: true
        type: boolean
      update_time:
        description: Timestamp indicating when the Storage Efficiency Policy was created,
          in ISO format.
        example: 2019-11-14T17:25:33.205+05:30
        format: date-time
        readOnly: true
        type: string
      workload_count:
        description: Number of workloads managed by this Storage Efficiency Policy.
        example: 0
        format: int64
        readOnly: true
        type: integer
    type: object
  svm:
    description: Complete SVM information.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        description: List of aggregates assigned to an SVM for a volume.
        items:
          $ref: '#/definitions/aggregate_reference'
        type: array
      cifs:
        properties:
          ad_domain:
            properties:
              fqdn:
                description: The fully qualified domain name (FQDN) of the Windows
                  Active Directory for this CIFS server.
                type: string
                x-ntap-readCreate: true
              password:
                description: The account password used to add this CIFS server to
                  the Active Directory. This is not audited. Valid in POST only.
                type: string
                x-ntap-createOnly: true
              user:
                description: The user account used to add this CIFS server to the
                  Active Directory. Valid in POST only.
                type: string
                x-ntap-createOnly: true
            type: object
          enabled:
            description: |
              Specifies whether the CIFS server is enabled for administration.
            type: boolean
          name:
            description: The NetBIOS name of the CIFS server.
            example: CIFS1
            maxLength: 15
            minLength: 1
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      cluster:
        $ref: '#/definitions/cluster_cr_reference'
        x-ntap-readCreate: true
      dns:
        properties:
          domains:
            $ref: '#/definitions/dns_domains'
          servers:
            $ref: '#/definitions/name_servers'
        type: object
        x-ntap-readCreate: true
      fcp:
        properties:
          enabled:
            description: Enable Fiber Channel Protocol? Setting this value to true
              creates a service if not already created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      ip_interfaces:
        items:
          $ref: '#/definitions/ip_interface_list'
        type: array
        x-ntap-createOnly: true
      ipspace:
        description: Applies to both SVM and cluster-scoped objects. You can provide
          the UUID or name as input.
        properties:
          key:
            description: Unique identifier for the IPspace across the datacenter.
            example: 04ef4c3a-cab8-11e7-bcd5-00a09865cd13:type=network_ip_space
            readOnly: true
            type: string
          name:
            description: IPspace name
            example: exchange
            type: string
            x-ntap-readCreate: true
          uuid:
            description: IPspace UUID
            example: 04ef4c3a-cab8-11e7-bcd5-00a09865cd13
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      iscsi:
        properties:
          enabled:
            description: Enable iSCSI? Setting to true creates a service if not already
              created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      key:
        description: Unique identifier for the SVM across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=vserver,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        readOnly: true
        type: string
      language:
        description: Default volume language code. UTF-8 encoded languages are valid
          in POST or PATCH. Non UTF-8 language encodings are for backward compatibility
          and are not valid input for POST and PATCH requests.
        enum:
        - c
        - da
        - de
        - en
        - en_us
        - es
        - fi
        - fr
        - he
        - it
        - ja
        - ja_jp.pck
        - ko
        - no
        - nl
        - pt
        - sv
        - zh
        - zh.gbk
        - zh_tw
        - zh_tw.big5
        - c.utf_8
        - ar
        - ar.utf_8
        - cs
        - cs.utf_8
        - da.utf_8
        - de.utf_8
        - en.utf_8
        - en_us.utf_8
        - es.utf_8
        - fi.utf_8
        - fr.utf_8
        - he.utf_8
        - hr
        - hr.utf_8
        - hu
        - hu.utf_8
        - it.utf_8
        - ja.utf_8
        - ja_v1
        - ja_v1.utf_8
        - ja_jp.pck.utf_8
        - ja_jp.932
        - ja_jp.932.utf_8
        - ja_jp.pck_v2
        - ja_jp.pck_v2.utf_8
        - ko.utf_8
        - no.utf_8
        - nl.utf_8
        - pl
        - pl.utf_8
        - pt.utf_8
        - ro
        - ro.utf_8
        - ru
        - ru.utf_8
        - sk
        - sk.utf_8
        - sl
        - sl.utf_8
        - sv.utf_8
        - tr
        - tr.utf_8
        - zh.utf_8
        - zh.gbk.utf_8
        - zh_tw.utf_8
        - zh_tw.big5.utf_8
        - utf8mb4
        example: c.utf_8
        type: string
      ldap:
        properties:
          ad_domain:
            description: This parameter specifies name of Active Directory domain
              used to discover LDAP servers to use by this cient. This is mutually
              exclusive with servers during post.
            type: string
            x-ntap-createOnly: true
          base_dn:
            description: Specifies the default base DN for all searches.
            type: string
            x-ntap-createOnly: true
          bind_dn:
            description: Specifies the user that binds to the LDAP servers. SVM API
              supports anonymous binding. For Simple and SASL LDAP binding, use the
              LDAP API endpoint.
            type: string
            x-ntap-createOnly: true
          enabled:
            description: Enable LDAP? Setting this value to true creates a configuration
              if not already created.
            type: boolean
          name:
            description: This parameter specifies name of ldap client configuration.
            type: string
            x-ntap-createOnly: true
          servers:
            description: List of LDAP Servers used for this client configuration.
              This parameter takes both FQDNs and IP addresses. This is mutually exclusive
              with ad_domain during POST.
            items:
              type: string
            type: array
            x-ntap-createOnly: true
        type: object
        x-ntap-readCreate: true
      name:
        description: "Name of the SVM.\n"
        example: svm1
        type: string
      nfs:
        properties:
          enabled:
            description: Enable NFS? Setting this value to true creates a service
              if not already created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      nis:
        properties:
          domain:
            $ref: '#/definitions/nis_domain'
          enabled:
            description: Enable NIS? Setting this value to true creates a configuration
              if not already created.
            type: boolean
          servers:
            $ref: '#/definitions/nis_servers'
        type: object
        x-ntap-readCreate: true
      nvme:
        properties:
          enabled:
            description: Enable NVMe? Setting this value to true creates a service
              if not already created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      routes:
        items:
          $ref: '#/definitions/route'
        type: array
        x-ntap-createOnly: true
      snapshot_policy:
        description: This is a reference to the SnapShot copy policy.
        properties:
          key:
            description: Unique identifier for the SnapShot copy policy across the
              datacenter.
            example: d96d953e-2e0a-11ea-a860-00a098dcc6b6:type=snapshot_policy,vserver_uuid=e04a51b8-2e0a-11ea-a860-00a098dcc6b6,name=default
            readOnly: true
            type: string
          name:
            description: Name of the SnapShot policy.
            example: default
            type: string
          uuid:
            description: UUID of the SnapShot policy.
            example: d96d953e-2e0a-11ea-a860-00a098dcc6b6.e04a51b8-2e0a-11ea-a860-00a098dcc6b6.default
            format: uuid
            readOnly: true
            type: string
        type: object
      state:
        description: SVM State
        enum:
        - starting
        - running
        - stopping
        - stopped
        - deleting
        example: running
        type: string
      subtype:
        description: SVM subtype. The SVM subtype sync_destination is created automatically
          when an SVM of subtype sync_source is created on the source MetroCluster
          cluster. A POST request with sync_destination as SVM subtype is invalid.
        enum:
        - default
        - dp_destination
        - sync_source
        - sync_destination
        type: string
        x-ntap-readCreate: true
      uuid:
        description: "ONTAP SVM UUID.\n"
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    type: object
  svm_analytics:
    description: High-level performance metrics of the SVM.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
  svm_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/svm_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  svm_cr_reference:
    description: SVM, applies only to SVM-scoped objects.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the SVM.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=vserver,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        type: string
        x-ntap-readCreate: true
      name:
        description: "The name of the SVM.\n"
        example: svm1
        readOnly: true
        type: string
      uuid:
        description: "ONTAP UUID for the SVM.\n"
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    type: object
    x-ntap-readCreate: true
  svm_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the SVM.
        example: cbd1757b-0580-11e8-bd9d-00a098d39e12:type=vserver,uuid=23f47259-f4d1-11e8-a848-00a098d390f2
        type: string
        x-ntap-readCreate: true
      name:
        description: Name of the SVM.
        example: svm_cluster1_65aecd
        readOnly: true
        type: string
      uuid:
        description: UUID of the SVM.
        example: 23f47259-f4d1-11e8-a848-00a098d390f2
        format: uuid
        readOnly: true
        type: string
    type: object
  svm_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/svm_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/svm_summary_metric'
      svm:
        $ref: '#/definitions/svm_reference'
    type: object
  svm_readonly_reference:
    description: SVM, applies only to SVM-scoped objects.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the SVM across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=vserver,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        readOnly: true
        type: string
      name:
        description: "Name of the SVM.\n"
        example: svm1
        readOnly: true
        type: string
      uuid:
        description: "Unique identifier of the SVM.\n"
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  svm_reference:
    description: SVM, applies only to SVM-scoped objects.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the SVM across the datacenter.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412,type=vserver,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123
        readOnly: true
        type: string
      name:
        description: "Name of the SVM.\n"
        example: svm1
        readOnly: true
        type: string
      uuid:
        description: "Unique identifier of the SVM.\n"
        example: 1cd8a442-86d1-11e0-ae1c-9876567890123
        format: uuid
        readOnly: true
        type: string
    type: object
  svm_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/svm'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  svm_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      iops:
        description: Rate of I/O operations observed at the storage object.
        properties:
          cifs:
            description: Rate of CIFS I/O operations observed at the storage object.
            properties:
              other:
                description: Peformance metric for others I/O operations.
                example: 100.53
                format: double
                type: number
              read:
                description: Performance metric for read I/O operations.
                example: 100.53
                format: double
                type: number
              total:
                description: Performance metric for all three types i.e. read, write,
                  and other I/O operations.
                example: 100.53
                format: double
                type: number
              write:
                description: Peformance metric for write I/O operations.
                example: 100.53
                format: double
                type: number
          fcp:
            description: Rate of FCP I/O operations observed at the storage object.
            properties:
              other:
                description: Peformance metric for others I/O operations.
                example: 100.53
                format: double
                type: number
              read:
                description: Performance metric for read I/O operations.
                example: 100.53
                format: double
                type: number
              total:
                description: Performance metric for all three types i.e. read, write,
                  and other I/O operations.
                example: 100.53
                format: double
                type: number
              write:
                description: Peformance metric for write I/O operations.
                example: 100.53
                format: double
                type: number
          iscsi:
            description: Rate of iSCSI I/O operations observed at the storage object.
            properties:
              other:
                description: Peformance metric for others I/O operations.
                example: 100.53
                format: double
                type: number
              read:
                description: Performance metric for read I/O operations.
                example: 100.53
                format: double
                type: number
              total:
                description: Performance metric for all three types i.e. read, write,
                  and other I/O operations.
                example: 100.53
                format: double
                type: number
              write:
                description: Peformance metric for write I/O operations.
                example: 100.53
                format: double
                type: number
          nfs:
            description: Rate of NFS I/O operations observed at the storage object.
            properties:
              other:
                description: Peformance metric for others I/O operations.
                example: 100.53
                format: double
                type: number
              read:
                description: Performance metric for read I/O operations.
                example: 100.53
                format: double
                type: number
              total:
                description: Performance metric for all three types i.e. read, write,
                  and other I/O operations.
                example: 100.53
                format: double
                type: number
              write:
                description: Peformance metric for write I/O operations.
                example: 100.53
                format: double
                type: number
          nvmf:
            description: Rate of NVMF I/O operations observed at the storage object.
            properties:
              other:
                description: Peformance metric for others I/O operations.
                example: 100.53
                format: double
                type: number
              read:
                description: Performance metric for read I/O operations.
                example: 100.53
                format: double
                type: number
              total:
                description: Performance metric for all three types i.e. read, write,
                  and other I/O operations.
                example: 100.53
                format: double
                type: number
              write:
                description: Peformance metric for write I/O operations.
                example: 100.53
                format: double
                type: number
          other:
            description: Peformance metric for others I/O operations.
            example: 100.53
            format: double
            type: number
          read:
            description: Performance metric for read I/O operations.
            example: 100.53
            format: double
            type: number
          total:
            description: Performance metric for all three types i.e. read, write,
              and other I/O operations.
            example: 100.53
            format: double
            type: number
          write:
            description: Peformance metric for write I/O operations.
            example: 100.53
            format: double
            type: number
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the SVM, in milliseconds.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the SVM.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  svm_summary_metric:
    properties:
      iops:
        description: Summary of I/O operations observed at the SVM.
        properties:
          cifs:
            $ref: '#/definitions/iops_accumulative_metric'
            description: Rate of CIFS I/O operations observed at the storage object.
          fcp:
            $ref: '#/definitions/iops_accumulative_metric'
            description: Rate of FCP I/O operations observed at the storage object.
          iscsi:
            $ref: '#/definitions/iops_accumulative_metric'
            description: Rate of iSCSI I/O operations observed at the storage object.
          nfs:
            $ref: '#/definitions/iops_accumulative_metric'
            description: Rate of NFS I/O operations observed at the storage object.
          nvmf:
            $ref: '#/definitions/accumulative_metric'
            description: Rate of NVMF I/O operations observed at the storage object.
          other:
            $ref: '#/definitions/accumulative_submetric'
          read:
            $ref: '#/definitions/accumulative_submetric'
          total:
            $ref: '#/definitions/accumulative_submetric'
          write:
            $ref: '#/definitions/accumulative_submetric'
      latency:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of round trip latency at the SVM, in milliseconds.
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the SVM.
    type: object
  system_response:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      deployment:
        description: Platform on which the system is deployed.
        example: RedHat
        readOnly: true
        type: string
      product:
        description: Name of the product.
        readOnly: true
        type: string
      services:
        description: Details of the services running on the system.
        items:
          properties:
            description:
              description: Description of the service.
              example: Application service.
              readOnly: true
              type: string
            name:
              description: Name of the service.
              example: ocie
              readOnly: true
              type: string
            status:
              description: Current status of the service.
              enum:
              - running
              - stopped
              example: running
              readOnly: true
              type: string
          type: object
        type: array
      uuid:
        description: Unique identifier of the system.
        example: 058fbe86-47d4-4d3c-8cf0-a66b5e16ca8b
        format: uuid
        readOnly: true
        type: string
      vendor:
        description: Name of the vendor.
        readOnly: true
        type: string
      version:
        description: Version of the installed system.
        readOnly: true
        type: string
    type: object
  throughput_counters:
    properties:
      other:
        description: Performance metric for other throughput operations.
        example: 100.53
        format: double
        type: number
      read:
        description: Performance metric for read throughput operations.
        example: 100.53
        format: double
        type: number
      total:
        description: Performance metric for all three types, i.e. read, write, and
          other throughput operations.
        example: 100.53
        format: double
        type: number
      write:
        description: Performance metric for write throughput operations.
        example: 100.53
        format: double
        type: number
    readOnly: true
    type: object
  user:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_type:
        description: Specifies the type of user
        enum:
        - ldap_group
        - ldap_user
        - local_user
        - maintenance_user
        - database_user
        type: string
        x-ntap-readCreate: true
      confirm_password:
        description: Confirms password for the user
        type: string
        x-ntap-createOnly: true
      email:
        description: Email address of the user.
        type: string
      group:
        description: Indicates if the user represents a group
        type: boolean
        x-ntap-readCreate: true
      locked:
        description: Indicates the locked state of a user. Among possible values,
          na implies that lock is not applicable.
        enum:
        - yes
        - no
        - na
        type: string
        x-ntap-readModify: true
      name:
        description: Name of the user.
        example: user1
        type: string
        x-ntap-readCreate: true
      password:
        description: Password for the user
        type: string
      role:
        description: Roles for the user
        enum:
        - integration_schema
        - report_schema
        - operator
        - storage_administrator
        - administrator
        type: string
    type: object
  users_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/user'
        type: array
      total_records:
        description: Total number of records.
        format: int32
        type: integer
    type: object
  version:
    description: This returns the cluster version information.  When the cluster has
      more than one node, the cluster version is equivalent to the lowest of generation,
      major, and minor versions on all nodes.
    properties:
      full:
        description: The full cluster version string.
        example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
        readOnly: true
        type: string
      generation:
        description: The generation portion of the version.
        example: 9
        format: int32
        readOnly: true
        type: integer
      major:
        description: The major portion of the version.
        example: 4
        format: int32
        readOnly: true
        type: integer
      minor:
        description: The minor portion of the version.
        example: 0
        format: int32
        readOnly: true
        type: integer
    readOnly: true
    type: object
  volume:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        $ref: '#/definitions/aggregate_references'
      autosize:
        properties:
          maximum:
            description: Maximum size in bytes up to which a volume grows automatically.
            format: int64
            readonly: true
            type: integer
          mode:
            description: Autosize mode for the volume.
            enum:
            - grow
            - grow_shrink
            - off
            readonly: true
            type: string
        readonly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      create_time:
        description: Creation time of the volume. This field is generated when the
          volume is created.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      key:
        description: Unique identifier for the volume across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=volume,uuid=29719394-0f6a-11ea-a0c5-00a09865fe59
        readOnly: true
        type: string
      language:
        description: Language encoding setting for volume. If no language is specified,
          the volume inherits its SVM language encoding setting.
        enum:
        - ar
        - ar.utf_8
        - c
        - c.utf_8
        - cs
        - cs.utf_8
        - da
        - da.utf_8
        - de
        - de.utf_8
        - en
        - en.utf_8
        - en_us
        - en_us.utf_8
        - es
        - es.utf_8
        - fi
        - fi.utf_8
        - fr
        - fr.utf_8
        - he
        - he.utf_8
        - hr
        - hr.utf_8
        - hu
        - hu.utf_8
        - it
        - it.utf_8
        - ja
        - ja.utf_8
        - ja_jp.932
        - ja_jp.932.utf_8
        - ja_jp.pck
        - ja_jp.pck.utf_8
        - ja_jp.pck_v2
        - ja_jp.pck_v2.utf_8
        - ja_v1
        - ja_v1.utf_8
        - ko
        - ko.utf_8
        - nl
        - nl.utf_8
        - no
        - no.utf_8
        - pl
        - pl.utf_8
        - pt
        - pt.utf_8
        - ro
        - ro.utf_8
        - ru
        - ru.utf_8
        - sk
        - sk.utf_8
        - sl
        - sl.utf_8
        - sv
        - sv.utf_8
        - tr
        - tr.utf_8
        - utf8mb4
        - zh
        - zh.gbk
        - zh.gbk.utf_8
        - zh.utf_8
        - zh_tw
        - zh_tw.big5
        - zh_tw.big5.utf_8
        - zh_tw.utf_8
        readOnly: true
        type: string
      name:
        description: Volume name. The name of volume must start with an alphabetic
          character (a to z or A to Z) or an underscore (_). The name must be 197
          or fewer characters in length for FlexGroups, and 203 or fewer characters
          in length for all other types of volumes. Volume names must be unique within
          an SVM. Required on POST.
        example: volume1
        maxLength: 203
        minLength: 1
        type: string
      nas:
        properties:
          export_policy:
            $ref: '#/definitions/export_policy_reference'
        type: object
      qos:
        $ref: '#/definitions/qos_policy_reference'
      snapmirror:
        properties:
          is_protected:
            description: Specifies whether a volume is a SnapMirror source volume,
              using SnapMirror to protect its data. When a SnapMirror relationship
              is created with a volume as the source, it becomes a SnapMirror source
              in a load-sharing relationship, and is protected. For all other relationship
              types, a volume does not become a SnapMirror source and is not protected
              until a SnapMirror relationship is initialized. If a SnapMirror relationship
              is released, the source volume is no longer protected.
            readonly: true
            type: boolean
        readonly: true
        type: object
      snapshot_policy:
        $ref: '#/definitions/snapshot_policy_reference'
      space:
        properties:
          available:
            description: The available space, in bytes.
            format: int64
            readOnly: true
            type: integer
          size:
            description: Total provisioned size. The default size is equal to the
              minimum size of 20MB, in bytes.
            format: int64
            type: integer
          used:
            description: The virtual space used (includes volume reserves) before
              storage efficiency, in bytes.
            format: int64
            readOnly: true
            type: integer
        type: object
      state:
        description: Volume state. A volume can only be brought online if it is offline.
          The 'mixed' state applies to FlexGroup volumes only and cannot be specified
          as a target state. An 'error' state implies that the volume is not in a
          state to serve data.
        enum:
        - error
        - mixed
        - offline
        - online
        type: string
      style:
        description: The style of the volume. If "style" is not specified, the volume
          type is determined based on the specified aggregates. Specifying a single
          aggregate, without "constituents_per_aggregate" creates a flexible volume.
          Specifying multiple aggregates, or a single aggregate with "constituents_per_aggregate"
          creates a FlexGroup. If "style" is specified, a volume of that type is created.
          That is, if style is "flexvol", a single aggregate must be specified. If
          style is "flexgroup", the system either uses the specified aggregates, or
          automatically provisions if no aggregates are specified.<br> flexvol &dash;
          flexible volumes and FlexClone volumes<br>flexgroup &dash; FlexGroups.'
        enum:
        - flexgroup
        - flexvol
        readonly: true
        type: string
      svm:
        $ref: '#/definitions/svm_reference'
      tiering:
        properties:
          policy:
            description: Policy that determines whether the user data blocks of a
              volume in a FabricPool will be tiered to the cloud store when they become
              cold. FabricPool combines flash (performance tier) with a cloud store
              into a single aggregate. Temperature of a volume block increases if
              it is accessed frequently and decreases when it is not. Valid in POST
              or PATCH.<br>all &dash; This policy allows tiering of both SnapShot
              copies and active file system user data to the cloud store as soon as
              possible by ignoring the temperature on the volume blocks.<br>auto &dash;
              This policy allows tiering of both snapshot and active file system user
              data to the cloud store<br>none &dash; Volume blocks will not be tiered
              to the cloud store.<br>snapshot_only &dash; This policy allows tiering
              of only the volume SnapShot copies not associated with the active file
              system. The default tiering policy is "snapshot-only" for a FlexVol
              and "none" for a FlexGroup.
            enum:
            - none
            - auto
            - snapshot-only
            - all
            readonly: true
            type: string
        readonly: true
        type: object
      type:
        default: rw
        description: Type of the volume.<br>rw &dash; read-write volume.<br>dp &dash;
          data-protection volume.<br>ls &dash; load-sharing `dp` volume. Valid in
          GET.
        enum:
        - rw
        - dp
        - ls
        readOnly: true
        type: string
      uuid:
        description: ONTAP volume UUID.
        example: 29719394-0f6a-11ea-a0c5-00a09865fe59
        readOnly: true
        type: string
    type: object
  volume_analytics:
    description: High-level performance metrics of the volume.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        $ref: '#/definitions/cluster_reference'
      iops:
        description: Rate of I/O operations observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      iops_per_tb:
        description: Rate of I/O operations per terabyte observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        description: Latency observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      period:
        description: Duration of periodic aggregation, in hours.
        example: 72
        format: int32
        type: integer
      svm:
        $ref: '#/definitions/svm_reference'
      throughput:
        description: Throughput observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      volume:
        $ref: '#/definitions/volume_reference'
  volume_analytics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/volume_analytics'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  volume_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the volume.
        example: a9f4ddea-e395-11e9-b660-005056a71be9:type=volume,uuid=305890bc-ebf6-11e9-b660-005056a71be9
        type: string
        x-ntap-readCreate: true
      name:
        description: Name of the volume.
        example: volume_vol103
        readOnly: true
        type: string
      uuid:
        description: UUID of the volume.
        example: 305890bc-ebf6-11e9-b660-005056a71be9
        format: uuid
        readOnly: true
        type: string
    type: object
  volume_metrics_sample_response:
    description: Performance numbers, such as, IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: 'The duration over which this sample is calculated. The time
          durations are represented in the ISO-8601 standard format. Samples can be
          calculated over the following durations:'
        enum:
        - PT5M
        - PT1H
        example: PT5M
        readOnly: true
        type: string
      end_time:
        description: End time of sample.
        example: 2018-01-02T12:00:00-04:00
        readOnly: true
        type: string
      num_samples:
        description: Number of records.
        example: 288
        format: int32
        readOnly: true
        type: integer
      samples:
        items:
          $ref: '#/definitions/volume_sample_metric'
        type: array
      start_time:
        description: Start time of sample.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      summary:
        $ref: '#/definitions/volume_summary_metric'
      volume:
        $ref: '#/definitions/volume_reference'
    type: object
  volume_reference:
    description: Reference to volume
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      key:
        description: Unique identifier of the volume across the datacenter.
        example: fe866c40-cab7-11e7-bcd5-00a09865cd13:type=volume,uuid=29719394-0f6a-11ea-a0c5-00a09865fe59
        readOnly: true
        type: string
      name:
        description: Name of the volume.
        example: volume1
        type: string
      uuid:
        description: Unique identifier of the volume across the cluster.
        example: 29719394-0f6a-11ea-a0c5-00a09865fe59
        format: uuid
        type: string
    type: object
  volume_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/volume'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  volume_sample_metric:
    description: Sample containing the performance details for a particular timestamp.
    properties:
      cache_miss_ratio:
        description: Cache miss ratio observed at the storage object.
        example: 10.00
        format: double
        readOnly: true
        type: number
      iops:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of I/O operations observed at the node.
      iops_per_tb:
        description: Summary of I/O operations per terabyte observed at the node.
        example: 10.00
        format: double
        readOnly: true
        type: number
      latency:
        $ref: '#/definitions/latency_counters'
        description: Round trip latency observed at the volume, in milliseconds.
      throughput:
        $ref: '#/definitions/throughput_counters'
        description: Value of the throughput operation observed at the volume.
      timestamp:
        description: Performance data timestamp, in UTC.
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
  volume_summary_metric:
    properties:
      cache_miss_ratio:
        $ref: '#/definitions/accumulative_submetric'
        description: Cache miss ratio observed at the storage object.
      iops:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of I/O operations observed at the node.
      iops_per_tb:
        $ref: '#/definitions/accumulative_submetric'
        description: Summary of I/O operations per terabyte observed at the node.
      latency:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of round trip latency at the volume, in milliseconds.
      throughput:
        $ref: '#/definitions/accumulative_metric'
        description: Summary of the throughput operation observed at the volume.
    type: object
  workload_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        format: int32
        type: integer
      records:
        items:
          $ref: '#/definitions/workloads'
        type: array
      total_records:
        description: Total number of records
        format: int32
        type: integer
    type: object
  workloads:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      assigned_performance_service_level:
        description: Details of Performance Service Level policy assigned to the workload.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level policy.
            example: 32456e63-06d3-11ea-b7d6-fc263ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        type: object
      assigned_storage_efficiency_policy:
        description: Details of the Storage Efficiency Policy assigned to the workload.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the Storage Efficiency Policy.
            example: 3246a3ef-06d3-12ea-b7d6-fa164ec5e1a5
            readOnly: true
            type: string
          name:
            description: Name of the Storage Efficiency Policy.
            example: Low
            readOnly: true
            type: string
        type: object
      cluster:
        description: Cluster on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the cluster.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=cluster,uuid=a9f4ddea-e395-11e9-b660-005056a71be9
            readOnly: true
            type: string
          name:
            description: Name of the cluster.
            example: Cluster1
            readOnly: true
            type: string
          uuid:
            description: UUID of the cluster.
            example: a9f4ddea-e395-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      conformance_status:
        description: Status of conformance of the workload to its Performance Service
          Level policy.
        enum:
        - conforming
        - non_conforming_error
        - unknown
        - unassigned
        example: conforming
        readOnly: true
        type: string
      conformance_status_details:
        description: Workload performance details when it is not conforming to the
          Performance Service Level policy.
        properties:
          avg_violated_latency:
            description: Average latency of the periods of time that the target latency
              is violated.
            example: 0
            format: float
            readOnly: true
            type: number
          latency_observation_duration:
            description: Minimum period of time over which the latency violation needs
              to occur before the workload is marked as non-conforming.
            example: 0
            format: int32
            readOnly: true
            type: integer
          latency_risk_threshold_percent:
            description: Percentage of time over which the latency target for the
              workload should be violated before the workload is marked as non-conforming.
            example: 0
            format: int32
            readOnly: true
            type: integer
          target_latency:
            description: Latency target for the IOPS in the workload based on the
              selected Performance Service Level, in milliseconds.
            example: 0
            format: float
            readOnly: true
            type: number
        type: object
      iops:
        description: IOPS details of the workload.
        properties:
          95th_percentile:
            description: 95th percentile of average IOPS over the last 15 days.
            example: 0
            format: float
            readOnly: true
            type: number
          average:
            description: Average of IOPS over the last 15 days.
            example: 0
            format: float
            readOnly: true
            type: number
          max:
            description: Maximum of IOPS over the last 15 days.
            example: 0
            format: float
            readOnly: true
            type: number
          median:
            description: Median or 50th percentile of IOPS over the last 15 days.
            example: 0
            format: float
            readOnly: true
            type: number
        type: object
      key:
        description: Unique identifier of the workload.
        example: b06466ed-7c28-11e9-a158-00a0989837e7:type=volume,uuid=35a2a8dd-cae3-11e9-9fb8-00a0989837e7
        readOnly: true
        type: string
      latency:
        description: Latency details of the workload.
        properties:
          95th_percentile:
            description: 95th percentile of average latency over the last 15 days,
              in milliseconds.
            example: 0
            format: float
            readOnly: true
            type: number
          average:
            description: Average of latency over the last 15 days, in milliseconds.
            example: 0
            format: float
            readOnly: true
            type: number
          max:
            description: Maximum of latency over the last 15 days. Unit is milliseconds.
            example: 0
            format: float
            readOnly: true
            type: number
          median:
            description: Median or 50th percentile of latency over the last 15 days,
              in  milliseconds.
            example: 0
            format: float
            readOnly: true
            type: number
        type: object
      name:
        description: Name of the workload.
        example: fileshare1
        readOnly: true
        type: string
      recommended_performance_service_level:
        description: Details of the Performance Service Level policy recommended for
          the workload.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          expected_iops:
            description: Expected IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
          key:
            description: Unique identifier of the Performance Service Level.
            example: c69c6f89-79b1-4fbc-985d-3cfc77a46b27
            readOnly: true
            type: string
          name:
            description: Name of the Performance Service Level policy.
            example: Value
            readOnly: true
            type: string
          peak_iops:
            description: Peak IOPS for the workload.
            example: 75
            format: int64
            readOnly: true
            type: integer
        type: object
      space:
        description: Space details of the workload.
        properties:
          size:
            description: Total storage capacity allocated to the workload, in bytes.
            example: 0
            format: int64
            readOnly: true
            type: integer
          used:
            description: Total storage capacity used by the workload, in bytes.
            example: 0
            format: int64
            readOnly: true
            type: integer
          used_95th_percentile:
            description: 95th percentile of average used storage capacity over the
              last 15 days, in bytes.
            example: 0
            format: float
            readOnly: true
            type: number
          used_average:
            description: Average of used storage capacity over the last 15 days, in
              bytes.
            example: 0
            format: float
            readOnly: true
            type: number
          used_max:
            description: Maximum of used storage capacity over the last 15 days, in
              bytes.
            example: 0
            format: float
            readOnly: true
            type: number
          used_median:
            description: Median or 50th percentile of used storage capacity over the
              last 15 days, in bytes.
            example: 0
            format: float
            readOnly: true
            type: number
        type: object
      svm:
        description: SVM in which workload is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Unique identifier of the SVM.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=vserver,uuid=4e09768c-e406-11e9-b660-005056a71be9
            type: string
            x-ntap-readCreate: true
          name:
            description: Name of the SVM.
            example: svm1
            readOnly: true
            type: string
          uuid:
            description: UUID of the SVM.
            example: 4e09768c-e406-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        type: object
        x-ntap-readCreate: true
      type:
        description: Type of the workload = ['file_share', 'lun', 'unknown']
        enum:
        - file_share
        - lun
        - unknown
        example: file_share
        readOnly: true
        type: string
      uuid:
        description: UUID of the workoad.
        example: 305890bc-ebf6-11e9-b660-005056a71be9
        format: uuid
        readOnly: true
        type: string
      volume:
        description: Volume on which the workload is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          key:
            description: Resource key of the volume.
            example: a9f4ddea-e395-11e9-b660-005056a71be9:type=volume,uuid=305890bc-ebf6-11e9-b660-005056a71be9
            readOnly: true
            type: string
          name:
            description: Name of the volume.
            example: volume1
            readOnly: true
            type: string
          uuid:
            description: UUID of the volume.
            example: 305890bc-ebf6-11e9-b660-005056a71be9
            format: uuid
            readOnly: true
            type: string
        type: object
    type: object
  workloads_summary:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      conformance_summary:
        description: Workloads' conformance summary details.
        properties:
          conformant_workload_count:
            description: Number of conformant workloads.
            example: 145
            format: int64
            readOnly: true
            type: integer
          non_conformant_workload_count:
            description: Number of non-conformant workloads.
            example: 28
            format: int64
            readOnly: true
            type: integer
          workload_with_unknown_status_count:
            description: Number of workloads with an unknown conformance status.
            example: 16
            format: int64
            readOnly: true
            type: integer
        type: object
      description:
        description: Description of the workload summary.
        readOnly: true
        type: string
      iops:
        description: Workloads' IOPS summary details.
        properties:
          available:
            description: Available IOPS across all clusters.
            example: 0
            format: float
            readOnly: true
            type: number
          total:
            description: Total IOPS across all clusters.
            example: 0
            format: float
            readOnly: true
            type: number
          used:
            description: Used IOPS across all clusters.
            example: 0
            format: float
            readOnly: true
            type: number
        type: object
      performance_service_level_summary:
        description: Performance Service Levels summary details.
        properties:
          managed_workload_count:
            description: Number of managed workloads.
            example: 34
            format: int64
            readOnly: true
            type: integer
          performance_service_levels:
            description: Details of Performance Service Levels.
            items:
              properties:
                conformant_workload_count:
                  description: Number of conformant workloads managed by this Performance
                    Service Level.
                  example: 28
                  readOnly: true
                  type: string
                iops:
                  description: Workloads' IOPS summary details.
                  properties:
                    available:
                      description: Total IOPS available for this Performance Service
                        Level.
                      example: 234
                      format: float
                      readOnly: true
                      type: number
                    used:
                      description: Total IOPS in use by this Performance Service Level.
                      example: 0
                      format: float
                      readOnly: true
                      type: number
                  type: object
                key:
                  description: Unique identifier of the Performance Service Level.
                  example: c69c6f89-79b1-4fbc-985d-3cfc77a46b27
                  readOnly: true
                  type: string
                name:
                  description: Name of the Performance Service Level.
                  example: Value
                  readOnly: true
                  type: string
                non_conformant_workload_count:
                  description: Number of non-conformant workloads managed by this
                    Performance Service Level.
                  example: 14
                  format: int64
                  readOnly: true
                  type: integer
                space:
                  properties:
                    available:
                      description: Available space for this Performance Service Level,
                        in bytes.
                      example: 126543
                      format: int64
                      readOnly: true
                      type: integer
                    used:
                      description: Used space for this Performance Service Level,
                        in bytes.
                      example: 1345
                      format: int64
                      readOnly: true
                      type: integer
                  type: object
                workload_count:
                  description: Number of workloads managed by this Performance Service
                    Level.
                  example: 34
                  format: int64
                  readOnly: true
                  type: integer
                workload_with_unknown_status_count:
                  description: Number of workloads with unknown conformance status
                    managed by thsi Performance Service Level.
                  example: 23
                  format: int64
                  readOnly: true
                  type: integer
              type: object
            type: array
          unmanaged_workload_count:
            description: Number of unmanaged workloads.
            format: int64
            readOnly: true
            type: integer
          workloads_with_system_suggested_psls:
            description: Number of workloads with a system-suggested Performance Service
              Level recommended.
            format: int64
            readOnly: true
            type: integer
        type: object
      space:
        description: Workloads' space summary details.
        properties:
          available:
            description: Available space across all clusters.
            format: int64
            readOnly: true
            type: integer
          size:
            description: Total space across all clusters.
            format: int64
            readOnly: true
            type: integer
          used:
            description: Used space across all clusters.
            format: int64
            readOnly: true
            type: integer
        type: object
      total_workload_count:
        description: Total number of workloads.
        format: int64
        readOnly: true
        type: integer
    type: object
info:
  contact:
    name: NetApp Support
    url: https://mysupport.netapp.com
  description: |
    **These are the REST APIs supported by Active IQ Unified Manager.**
    Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method.
  title: Active IQ Unified Manager - API Documentation
  version: v2
parameters:
  fields_param:
    collectionFormat: csv
    description: Specify the fields to return.
    in: query
    items:
      type: string
    name: fields
    type: array
  host_connectivity_param:
    default: false
    description: Test the connection to a specific host.
    in: query
    name: host_connectivity
    type: boolean
  max_records_param:
    description: Limit the number of records returned.
    in: query
    name: max_records
    type: integer
  offset:
    description: Start index for the entries to be returned.
    in: query
    name: offset
    type: integer
  order_by_param:
    collectionFormat: csv
    description: Order results by specified field and optional [asc|desc] direction.
      Default direction is 'asc' for ascending.
    in: query
    name: order_by
    type: string
  query:
    description: A search or 'query' is issued on attributes using a 'contains' relationship..
    in: query
    name: query
    type: string
  return_records_get_param:
    default: true
    description: The default is true for GET calls.  When set to false, only the number
      of records is returned.
    in: query
    name: return_records
    type: boolean
  return_records_update_param:
    default: false
    description: The default is false.  If set to true, the records are returned.
    in: query
    name: return_records
    type: boolean
  svm_path_param:
    description: Key of the SVM to which this object belongs.
    in: path
    name: svm.key
    required: true
    type: string
  svm_query_param:
    description: Filter by UUID of the SVM to which this object belongs.
    in: query
    name: svm.uuid
    type: string
  validate_only_param:
    description: Validate the operation and its parameters, without actually performing
      the operation.
    in: query
    name: validate_only
    type: boolean
paths:
  /admin/backup:
    post:
      description: |
        Create a backup request
        ### Examples
        Create request to start database backup:
        <br/>
        ```
        POST "/api/admin/backup"
        ```
        <br/>
      operationId: create_backup
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    x-ntap-long-description:
      description: "You can use this API to create backups. Backups can be MySql based
        or Snapshot based. \nBackup settings can be modified using /admin/backup-settings
        api and from GUI.\nBackup method (MySql/Snapshot) can be configured through
        the maintenance console.\n"
      tags:
      - administration
  /admin/backup-file-info:
    get:
      consumes:
      - application/json
      description: |
        Retrieves information on all the backup files in the application. Provides filtering using "eq" parameter for name.

          ### Examples
          1. Retrieving information on all backup files:
              <br/>
              ```
              GET "/api/admin/backup-file-info"
              ```
              <br/>
          2. Retrieving a list of backup files sorted by "name":
              <br/>
              ```
              GET "/api/admin/backup-file-info?order_by=name"
              ```
              <br/>
      operationId: getBackupFileInfoUsingGET
      parameters:
      - default: 0
        description: Start index for the entries to be returned
        format: int32
        in: query
        name: offset
        required: false
        type: integer
      - default: 20
        description: Number of entries in the response
        format: int32
        in: query
        name: max_records
        required: false
        type: integer
      - description: Name of the backup file created.
        in: query
        name: name
        required: false
        type: string
      - description: Order results by specified field and optional [asc|desc] direction.
          Default direction is 'asc' for ascending.
        in: query
        name: order_by
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/backup_file_response'
        '400':
          description: Invalid Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: You are not authorized to view the resource
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    x-ntap-long-description:
      description: You can use this API to retrieve information for all backup files
        in the application. The backup is a scheduled operation and the maximum number
        of backup files that can exist in the application is governed by the retention
        count configured in the backup schedule settings.
      tags:
      - administration
  /admin/backup-settings:
    get:
      consumes:
      - application/json
      description: |
        Retrieves the settings configured for scheduled backups.
        ### Example
        Retrieving the settings configured for scheduled backups:
        <br/>
        ```
        GET "/api/admin/backup-settings"
        ```
        <br/>
      operationId: backup_schedule_settings_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/backup_settings'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: You are not authorized to view the resource
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    patch:
      consumes:
      - application/json
      description: "Updates the settings configured for scheduled backups.\n### Example\nUpdating
        the settings configured for scheduled backups:\n<br/>\n```\nPATCH \"/api/admin/backup-settings\"
        '{  \n \"day_of_week\": null,\"retention_count\": 10,\"frequency\": \"daily\",\"hour\":
        1,\"minute\": 17,\"path\": \"/opt/netapp/data/ocum-backup/\"}'\n```\n<br/>\n"
      operationId: backup_schedule_settings_update
      parameters:
      - description: Modify the backup setting object with new properties.
        in: body
        name: info
        schema:
          $ref: '#/definitions/backup_settings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/backup_settings'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: You are not authorized to view the resource
        '403':
          description: Forbidden
        '500':
          description: Internal server error. Failed to get the response from server
      tags:
      - administration
    x-ntap-long-description:
      description: You can use this API to retrieve and update the settings configured
        for scheduled backups. The backup is a scheduled operation and these settings
        provide details such as, is the schedule is enabled or disabled, the frequency
        of the backup scheduled daily or weekly, the time of the backup, and also
        specifies the maximum number of backup files that should be retained in the
        application. The time of the backup is in server time zone.
      tags:
      - administration
  /admin/datasource-certificate:
    get:
      description: |
        Adds the certificate from the datasource to the trust store.

        ### Required properties
        * `hostname or address` - Hostname or IP address of the datasource.
        * `port` - Port for accessing the cluster.
        ### Example
        Retrieving certificate details of the cluster:
        <br/>
        ```
        GET "/api/admin/datasource-certificate?address=10.226.207.154&port=443"
        ```
        <br/>
      operationId: datasource_certificate_get
      parameters:
      - description: Address of the datasource
        in: query
        name: address
        required: true
        type: string
      - description: Port of the datasource
        format: int32
        in: query
        name: port
        required: true
        type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/certificate_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    x-ntap-long-description:
      description: You can use this API to retrieve the details of a datasource-certificate.
      tags:
      - administration
  /admin/datasources/clusters:
    get:
      description: |
        Retrieves details for all datasources.
        ### Example
        Retrieving the list of datasources:
        <br/>
        ```
        GET "/api/admin/datasources/clusters"
        ```
        <br/>
      operationId: datasource_collection_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/datasources_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    post:
      description: |
        Adds a new datasource with the attributes provided.

        ### Required properties
        * `hostname or address` - Hostname or IP address of the datasource.
        * `username` - Username for accessing the cluster.
        * `password` - Password for accessing the cluster.
        * `port` - Port for accessing the cluster.
        * `protocol` - Protocol for accessing the cluster.
        ### Example
        Adding a datasource:
        <br/>
        ```
        POST "/api/admin/datasources/clusters" '{"address": "10.226.207.154","port": 443,"username":"admin","password": "netapp1!","protocol": "HTTPS"}'
        ```
        <br/>
      operationId: datasource_add
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/datasource'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/datasource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    x-ntap-long-description:
      description: Use this API to view the list of ONTAP cluster datasources in your
        data center. You can also use this API to view, add, update, and delete a
        specific cluster datasource. </br> Before calling a POST request, validate
        the cluster certificate using the /admin/datasource-certificate API.
      tags:
      - administration
  /admin/datasources/clusters/{key}:
    delete:
      description: |
        Deletes a datasource using the specified key.
        ### Example
        Deleting a datasource using the sepcified key:
        <br/>
        ```
        DELETE "/api/admin/datasources/clusters/8601116e-1b56-11e9-bdec-00a098d87b4b:type=cluster,uuid=8601116e-1b56-11e9-bdec-00a098d87b4b"
        ```
        <br/>
      operationId: datasource_delete
      parameters:
      - description: Unique identifier of the datasource
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    get:
      description: |
        Retrieves all details for the datasource using the specified key.
        ### Example
        Retrieving all details of the datasource using the specified key:
        <br/>
        ```
        GET "/api/admin/datasources/clusters/8601116e-1b56-11e9-bdec-00a098d87b4b:type=cluster,uuid=8601116e-1b56-11e9-bdec-00a098d87b4b"
        ```
        <br/>
      operationId: datasource_get
      parameters:
      - description: Unique identifier of the datasource.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/datasource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
    patch:
      description: "Updates the properties of a datasource using the specified key.\n###
        Example\nUpdating the properties of a datsource using the specified key:\n<br/>\n```\nPATCH
        \"/api/admin/datasources/clusters/8601116e-1b56-11e9-bdec-00a098d87b4b:type=cluster,uuid=8601116e-1b56-11e9-bdec-00a098d87b4b\"
        '{  \n\"username\":\"umadmin\",\"password\": \"admin\"}'\n```\n<br/>\n"
      operationId: datasource_modify
      parameters:
      - description: Unique identifier of the datasource.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/datasource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/datasource'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - administration
  /datacenter/cluster/clusters:
    get:
      description: |-
        Retrieves the list of clusters and their configuration.

        ### Examples
          1. Retrieving a list of clusters in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/cluster/clusters?order_by=name"
              ```
              <br/>
          2. Retrieving a list of clusters in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/cluster/clusters?name=cluster1"
              ```
              <br/>
          3. Retrieving a list of clusters in the datacenter filtered using "version.generation":
              <br/>
              ```
              GET "/api/datacenter/cluster/clusters?version.generation=9"
              ```
              <br/>
      operationId: cluster_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by contact
        in: query
        name: contact
        type: string
      - description: Filter by management_ip
        in: query
        name: management_ip
        type: string
      - description: Filter by version.major
        format: int32
        in: query
        name: version.major
        type: integer
      - description: Filter by version.full
        in: query
        name: version.full
        type: string
      - description: Filter by version.generation
        format: int32
        in: query
        name: version.generation
        type: integer
      - description: Filter by version.minor
        format: int32
        in: query
        name: version.minor
        type: integer
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/clusters/analytics:
    get:
      description: |
        Retrieves the performance details for the clusters.
      operationId: analytics_cluster_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by management_ip
        in: query
        name: management_ip
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/clusters/{key}:
    get:
      description: |-
        Retrieves a cluster configuration.

        ### Example
        Retrieving an individual cluster configuration using the specified key:
        <br/>
        ```
        GET "/api/datacenter/cluster/clusters/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cluster,uuid=f39cb95a-b7f8-11e6-9022-00a098a0320b"
        ```
        <br/>
      operationId: cluster_get
      parameters:
      - description: Unique identifier of the cluster.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/clusters/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the cluster specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_cluster_get_by_key
      parameters:
      - description: Cluster Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/licensing/licenses:
    get:
      description: |-
        Retrieves a collection of license packages.

        ### Examples
        1. Retrieving a list of licenses in the datacenter sorted by "name":
            <br/>
            ```
            GET "/api/datacenter/cluster/licensing/licenses?order_by=name"
            ```
            <br/>
        2. Retrieving a list of licenses in the datacenter filtered using "cluster.name":
            <br/>
            ```
            GET "/api/datacenter/cluster/licensing/licenses?cluster.name=cluster1"
            ```
            <br/>
      operationId: license_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by licenses.serial_number
        in: query
        name: licenses.serial_number
        type: string
      - description: Filter by licenses.owner
        in: query
        name: licenses.owner
        type: string
      - description: Filter by licenses.expiry_time
        in: query
        name: licenses.expiry_time
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/license_package_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/licensing/licenses/{key}:
    get:
      description: |
        Retrieves a license.

        ### Example
        Retrieving a license using the specified key:
        <br/>
        ```
        GET "/api/datacenter/cluster/licensing/licenses/bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=license,package_name=base,serial_number=1-80-000011"
        ```
        <br/>
      operationId: license_get
      parameters:
      - description: Unique identifier of the license.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/license_package'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/nodes:
    get:
      description: |-
        Retrieves the nodes in the cluster.

          ### Examples
          1. Retrieving a list of nodes in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/cluster/nodes?order_by=name"
              ```
              <br/>
          2. Retrieving a list of nodes in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/cluster/nodes?name=node1"
              ```
              <br/>
          3. Retrieving a list of nodes in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/cluster/nodes?cluster.name=cluster1"
              ```
              <br/>
      operationId: node_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by version.major
        format: int32
        in: query
        name: version.major
        type: integer
      - description: Filter by version.full
        in: query
        name: version.full
        type: string
      - description: Filter by version.generation
        format: int32
        in: query
        name: version.generation
        type: integer
      - description: Filter by version.minor
        format: int32
        in: query
        name: version.minor
        type: integer
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by model
        in: query
        name: model
        type: string
      - description: Filter by system_id
        in: query
        name: system_id
        type: string
      - description: Filter by uptime
        format: int64
        in: query
        name: uptime
        type: integer
      - description: Filter by health
        in: query
        name: health
        type: boolean
      - description: Filter by performance_capacity.used
        format: float
        in: query
        name: performance_capacity.used
        type: number
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nodes_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/nodes/analytics:
    get:
      description: |
        Retrieves the performance details for the nodes.
      operationId: analytics_node_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by performance_capacity.used_percent
        in: query
        name: performance_capacity.used_percent
        type: double
      - description: Filter by performance_capacity.available_iops_percent
        in: query
        name: performance_capacity.available_iops_percent
        type: double
      - description: Filter by utilization_percent
        in: query
        name: utilization_percent
        type: double
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/node_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/nodes/{key}:
    get:
      description: |-
        Retrieves a node.

        ### Example
        Retrieving an individual node using the specified key:
        <br/>
        ```
        GET "/api/datacenter/cluster/nodes/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cluster_node,uuid=0d349a31-b7dd-11e6-bef3-00a098a026f8"
        ```
        <br/>
      operationId: node_get
      parameters:
      - description: Unique identifier of the node.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/node'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/cluster/nodes/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the node specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_node_get_by_key
      parameters:
      - description: Node Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/node_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ethernet/ports:
    get:
      description: |
        Retrieves Ethernet ports.<br/>
        ### Examples
          1. Retrieving a list of Ethernet ports in the cluster sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/network/ethernet/ports?order_by=name"
              ```
              <br/>
          2. Retrieving a list of Ethernet ports in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/network/ethernet/ports?name=port1"
              ```
              <br/>
          3. Retrieving a list of Ethernet ports in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/network/ethernet/ports?cluster.name=cluster1"
              ```
              <br/>
      operationId: ethernet_port_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by speed
        in: query
        name: speed
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by mtu
        in: query
        name: mtu
        type: integer
      - description: Filter by mac_address
        in: query
        name: mac_address
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by broadcast_domain.ipspace.name
        in: query
        name: broadcast_domain.ipspace.name
        type: string
      - description: Filter by broadcast_domain.name
        in: query
        name: broadcast_domain.name
        type: string
      - description: Filter by broadcast_domain.uuid
        in: query
        name: broadcast_domain.uuid
        type: string
      - description: Filter by broadcast_domain.key
        in: query
        name: broadcast_domain.key
        type: string
      - description: Filter by vlan.tag
        in: query
        name: vlan.tag
        type: integer
      - description: Filter by vlan.base_port.name
        in: query
        name: vlan.base_port.name
        type: string
      - description: Filter by vlan.base_port.node.name
        in: query
        name: vlan.base_port.node.name
        type: string
      - description: Filter by vlan.base_port.uuid
        in: query
        name: vlan.base_port.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ethernet_port_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ethernet/ports/analytics:
    get:
      description: |
        Retrieves the performance details for the Ethernet port.
      operationId: analytics_ethernet_port_get_all
      parameters:
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by utilization_percent
        in: query
        name: utilization_percent
        type: double
      - description: Filter by ethernet_port.key
        in: query
        name: ethernet_port.key
        type: string
      - description: Filter by ethernet_port.name
        in: query
        name: ethernet_port.name
        type: string
      - description: Filter by ethernet_port.uuid
        in: query
        name: ethernet_port.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ethernet_port_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ethernet/ports/{key}:
    get:
      description: |
        Retrieves an Ethernet port.
        ### Example
        Retrieving an individual Ethernet port using the specified key:
        <br/>
        ```
        GET "/api/datacenter/network/ethernet/ports/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=network_port,uuid=1d2d1d30-649b-458f-934c-933d3f6e8f2d"
        ```
        <br/>
      operationId: ethernet_port_get
      parameters:
      - description: Unique identifier of the Ethernet port.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ethernet_port'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ethernet/ports/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the Ethernet port specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum,  the average and 95th_percentile performance values over a period of time.
      operationId: metric_ethernet_port_get_by_key
      parameters:
      - description: Ethernet port Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. If the range is more than 3 days, 1 hour samples are returned else 5 minute samples are returned. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ethernet_port_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/interfaces:
    get:
      description: |-
        Retrieves the details of all Fibre Channel (FC) interfaces.

        ### Examples
        1. Retrieving a list of FC interfaces in the datacenter sorted by "name":
            <br/>
            ```
            GET "/api/datacenter/network/fc/interfaces?order_by=name"
            ```
            <br/>
        2. Retrieving a list of FC interfaces in the datacenter filtered using "cluster.name":
            <br/>
            ```
            GET "/api/datacenter/network/fc/interfaces?cluster.name=cluster1"
            ```
            <br/>
        3. Retrieving a list of FC interfaces in the datacenter filtered using "svm.name":
            <br/>
            ```
            GET "/api/datacenter/network/fc/interfaces?svm.name=svm1"
            ```
            <br/>
      operationId: network_fc_interface_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by wwpn
        in: query
        name: wwpn
        type: string
      - description: Filter by data_protocol
        in: query
        name: data_protocol
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by wwnn
        in: query
        name: wwnn
        type: string
      - description: Filter by location.home_port.key
        in: query
        name: location.home_port.key
        type: string
      - description: Filter by location.home_port.uuid
        in: query
        name: location.home_port.uuid
        type: string
      - description: Filter by location.home_port.node.name
        in: query
        name: location.home_port.node.name
        type: string
      - description: Filter by location.home_port.name
        in: query
        name: location.home_port.name
        type: string
      - description: Filter by location.home_node.key
        in: query
        name: location.home_node.key
        type: string
      - description: Filter by location.home_node.uuid
        in: query
        name: location.home_node.uuid
        type: string
      - description: Filter by location.home_node.name
        in: query
        name: location.home_node.name
        type: string
      - description: Filter by location.port.key
        in: query
        name: location.port.key
        type: string
      - description: Filter by location.port.uuid
        in: query
        name: location.port.uuid
        type: string
      - description: Filter by location.port.node.name
        in: query
        name: location.port.node.name
        type: string
      - description: Filter by location.port.name
        in: query
        name: location.port.name
        type: string
      - description: Filter by location.node.key
        in: query
        name: location.node.key
        type: string
      - description: Filter by location.node.uuid
        in: query
        name: location.node.uuid
        type: string
      - description: Filter by location.node.name
        in: query
        name: location.node.name
        type: string
      - description: Filter by location.is_home
        in: query
        name: location.is_home
        type: boolean
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_interface_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/interfaces/analytics:
    get:
      description: |
        Retrieves the performance details for the network FC interface.
      operationId: analytics_network_fc_interface_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by fc_interface.key
        in: query
        name: fc_interface.key
        type: string
      - description: Filter by fc_interface.name
        in: query
        name: fc_interface.name
        type: string
      - description: Filter by fc_interface.uuid
        in: query
        name: fc_interface.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_fc_interface_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/interfaces/{key}:
    get:
      description: |
        Retrieves a Fibre Channel (FC) interface.

        ### Example
        Retrieving an FC interface using the specified key:
        <br/>
        ```
        GET "/api/datacenter/network/fc/interfaces/bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=fcp_lif,lif_uuid=37126171-08af-11eb-8fe5-005056a74cc0"
        ```
        <br/>
      operationId: network_fc_interface_get
      parameters:
      - description: Unique identifier of the FC interface.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_interface'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/interfaces/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the network Fibre Channel (FC) interface specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_network_fc_interface_get_by_key
      parameters:
      - description: network fc interface Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_fc_interface_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/ports:
    get:
      description: |
        Retrieves FC ports.<br/>
        ### Examples
          1. Retrieving a list of FC ports in the cluster sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/network/fc/ports?order_by=name"
              ```
              <br/>
          2. Retrieving a list of FC ports in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/network/fc/ports?name=port1"
              ```
              <br/>
          3. Retrieving a list of FC ports in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/network/fc/ports?cluster.name=cluster1"
              ```
              <br/>
      operationId: fc_port_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by physical_protocol
        in: query
        name: physical_protocol
        type: string
      - description: Filter by wwpn
        in: query
        name: wwpn
        type: string
      - description: Filter by wwnn
        in: query
        name: wwnn
        type: string
      - description: Filter by maximum speed
        in: query
        name: speed.maximum
        type: string
      - description: Filter by configured speed
        in: query
        name: speed.configured
        type: string
      - description: Filter by fabric switch_port
        in: query
        name: fabric.switch_port
        type: string
      - description: Filter by fabric connected
        in: query
        name: fabric.connected
        type: boolean
      - description: Filter by connected speed of fabric
        in: query
        name: fabric.connected_speed
        type: integer
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/ports/analytics:
    get:
      description: |
        Retrieves the performance details for the FC port.
      operationId: analytics_fc_port_get_all
      parameters:
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by utilization_percent
        in: query
        name: utilization_percent
        type: double
      - description: Filter by fc_port.key
        in: query
        name: fc_port.key
        type: string
      - description: Filter by fc_port.uuid
        in: query
        name: fc_port.uuid
        type: string
      - description: Filter by fc_port.name
        in: query
        name: fc_port.name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/ports/{key}:
    get:
      description: |
        Retrieves an FC port.
        ### Example
        Retrieving an individual FC port using the specified key:
        <br/>
        ```
        GET "/api/datacenter/network/fc/ports/55eb42b3-ffc5-11eb-b55d-005056acf02f:type=fcp_port,cluster_node_uuid=374a6b07-ffc4-11eb-8cd8-005056ac1eb0,node_name="50:0A:09:80:AC:1E:B0:00",port_name="50:0A:09:82:AC:1E:B0:00",adapter=0a"
        ```
        <br/>
      operationId: fc_port_get
      parameters:
      - description: Unique identifier of the FC port.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/fc/ports/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the FC port specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metric_fc_port_get_by_key
      parameters:
      - description: Fc port Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. If the range is more than 3 days, 1 hour samples are returned else 5 minute samples are returned. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ip/interfaces:
    get:
      description: |-
        Retrieves the details of all IP interfaces.

        ### Examples
        1. Retrieving a list of IP interfaces in the datacenter sorted by "name":
            <br/>
            ```
            GET "/api/datacenter/network/ip/interfaces?order_by=name"
            ```
            <br/>
        2. Retrieving a list of IP interfaces in the datacenter filtered using "cluster.name":
            <br/>
            ```
            GET "/api/datacenter/network/ip/interfaces?cluster.name=cluster1"
            ```
            <br/>
        3. Retrieving a list of IP interfaces in the datacenter filtered using "svm.name":
            <br/>
            ```
            GET "/api/datacenter/network/ip/interfaces?svm.name=svm1"
            ```
            <br/>
      operationId: network_ip_interface_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by ipspace.key
        in: query
        name: ipspace.key
        type: string
      - description: Filter by ip.netmask
        in: query
        name: ip.netmask
        type: string
      - description: Filter by ip.address
        in: query
        name: ip.address
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by location.broadcast_domain.key
        in: query
        name: location.broadcast_domain.key
        type: string
      - description: Filter by location.broadcast_domain.name
        in: query
        name: location.broadcast_domain.name
        type: string
      - description: Filter by location.broadcast_domain.uuid
        in: query
        name: location.broadcast_domain.uuid
        type: string
      - description: Filter by location.auto_revert
        in: query
        name: location.auto_revert
        type: boolean
      - description: Filter by location.port.key
        in: query
        name: location.port.key
        type: string
      - description: Filter by location.port.name
        in: query
        name: location.port.name
        type: string
      - description: Filter by location.port.uuid
        in: query
        name: location.port.uuid
        type: string
      - description: Filter by location.port.node.name
        in: query
        name: location.port.node.name
        type: string
      - description: Filter by location.home_node.key
        in: query
        name: location.home_node.key
        type: string
      - description: Filter by location.home_node.name
        in: query
        name: location.home_node.name
        type: string
      - description: Filter by location.home_node.uuid
        in: query
        name: location.home_node.uuid
        type: string
      - description: Filter by location.node.key
        in: query
        name: location.node.key
        type: string
      - description: Filter by location.node.name
        in: query
        name: location.node.name
        type: string
      - description: Filter by location.node.uuid
        in: query
        name: location.node.uuid
        type: string
      - description: Filter by location.is_home
        in: query
        name: location.is_home
        type: boolean
      - description: Filter by location.failover
        in: query
        name: location.failover
        type: string
      - description: Filter by location.home_port.key
        in: query
        name: location.home_port.key
        type: string
      - description: Filter by location.home_port.name
        in: query
        name: location.home_port.name
        type: string
      - description: Filter by location.home_port.uuid
        in: query
        name: location.home_port.uuid
        type: string
      - description: Filter by location.home_port.node.name
        in: query
        name: location.home_port.node.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_interface_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ip/interfaces/analytics:
    get:
      description: |
        Retrieves the performance details for the network IP interfaces.
      operationId: analytics_network_ip_interface_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by ip_interface.key
        in: query
        name: ip_interface.key
        type: string
      - description: Filter by ip_interface.name
        in: query
        name: ip_interface.name
        type: string
      - description: Filter by ip_interface.uuid
        in: query
        name: ip_interface.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_ip_interface_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ip/interfaces/{key}:
    get:
      description: |
        Retrieves an IP interface.

        ### Example
        Retrieving an IP interface using the specified key:
        <br/>
        ```
        GET "/api/datacenter/network/ip/interfaces/bbd9dee2-6a73-4f38-ad36-319e22cdefef:type=network_lif,lif_uuid=37126171-08af-11eb-8fe5-005056a74cc0"
        ```
        <br/>
      operationId: network_ip_interface_get
      parameters:
      - description: Unique identifier of the IP interface.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_interface'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/network/ip/interfaces/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the network IP interface specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_network_ip_interface_get_by_key
      parameters:
      - description: network interface Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_ip_interface_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/cifs/shares:
    get:
      description: |
        Retrieves CIFS shares.

        ### Examples
          1. Retrieving a list of CIFS shares in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/protocols/cifs/shares?order_by=name"
              ```
              <br/>
          2. Retrieving a list of CIFS shares in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/cifs/shares?cluster.name=cluster1"
              ```
              <br/>
          3. Retrieving a list of CIFS shares in the datacenter filtered using "svm.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/cifs/shares?svm.name=svm1"
              ```
              <br/>
      operationId: cifs_share_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/cifs/shares/{key}:
    get:
      description: |
        Retrieves a CIFS share.

        ### Example
        Retrieving a CIFS share using the specified key:
        <br/>
        ```
        GET "/api/datacenter/protocols/cifs/shares/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cifs_share,vserver_uuid=59152ad6-d887-11e8-8c7e-00a098a0320b,share_name=admin$"
        ```
        <br/>
      operationId: cifs_share_get
      parameters:
      - description: Unique identifier of the CIFS share.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/nfs/export-policies:
    get:
      description: |
        Retrieves export policies.

          ### Examples
          1. Retrieving a list of export policies in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/protocols/nfs/export-policies?order_by=name"
              ```
              <br/>
          2. Retrieving a list of export policies in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/nfs/export-policies?cluster.name=cluster1"
              ```
              <br/>
          3. Retrieving a list of export policies in the datacenter filtered using "svm.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/nfs/export-policies?svm.name=svm1"
              ```
              <br/>
      operationId: export_policy_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by ID
        in: query
        name: id
        type: integer
      - description: Filter by rules.index
        in: query
        name: rules.index
        type: integer
      - description: Filter by rules.protocols
        in: query
        name: rules.protocols
        type: string
      - description: Filter by rules.clients.match
        in: query
        name: rules.clients.match
        type: string
      - description: Filter by rules.ro_rule
        in: query
        name: rules.ro_rule
        type: string
      - description: Filter by rules.rw_rule
        in: query
        name: rules.rw_rule
        type: string
      - description: Filter by rules.anonymous_user
        in: query
        name: rules.anonymous_user
        type: string
      - description: Filter by rules.superuser
        in: query
        name: rules.superuser
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_policy_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/nfs/export-policies/{key}:
    get:
      description: |
        Retrieves an export policy.

        ### Example
        Retrieving an export policy using the specified export policy key:
        <br/>
        ```
        GET "/api/datacenter/protocols/nfs/export-policies/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=export_policy,uuid=3753801416705"
        ```
        <br/>
      operationId: export_policy_get
      parameters:
      - description: Unique identifier of the export policy.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_policy'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/san/igroups:
    get:
      description: |
        Retrieves initiator groups.

          ### Examples
          1. Retrieving a list of initiator groups in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/protocols/san/igroups?order_by=name"
              ```
              <br/>
          2. Retrieving a list of initiator groups in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/san/igroups?cluster.name=cluster1"
              ```
              <br/>
          3. Retrieving a list of initiator groups in the datacenter filtered using "svm.name":
              <br/>
              ```
              GET "/api/datacenter/protocols/san/igroups?svm.name=svm1"
              ```
              <br/>
      operationId: igroup_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    post:
      description: |
        Creates an initiator group.

        ### Required properties
        * `name` - Name of the initiator group.
        * `svm.key` - Key of the SVM object.
        * `os_type` - The operating system of the initiator group.
        * `protocol` - Protocol of the initiator group.

        ### Example
        Creating an Initiator group:
        <br/>
        ```
        POST "/api/datacenter/protocols/san/igroups" '{"name": "igroup1","protocol": "mixed","os_type": "windows","svm" : "key" : "cbd1757b-0580-11e8-bd9d-00a098d39e12:type=vserver,uuid=d13ca521-f21f-11e8-a848-00a098d390f2" },"initiators": [{"name": "iqn.1991-05.com.microsoft:sharpree13-pc.hq.domain.com"},{"name": "iqn.1991-05.com.microsoft:sharpree14-pc.hq.domain.com" }]}'
        ```
        <br/>
      operationId: igroup_create
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/igroup'
      responses:
        '201':
          description: Accepted
          schema:
            $ref: '#/definitions/igroup'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/protocols/san/igroups/{key}:
    delete:
      description: |
        Deletes an initiator group. You cannot delete an initiator group if it is mapped to a LUN.

        ### Example
        Deleting an initiator group using the specified key:
        <br/>
        ```
        DELETE "/api/datacenter/protocols/san/igroups/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=igroup,uuid=0833bd3f-0370-11e9-8c7e-00a098a0320b"
        ```
        <br/>
      operationId: igroup_delete
      parameters:
      - description: Resource key of the initiator group object.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    get:
      description: |
        Retrieves an initiator group.

        ### Example
        Retrieving an initiator group using the specified igroup key:
        <br/>
        ```
        GET "/api/datacenter/protocols/san/igroups/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=igroup,uuid=0833bd3f-0370-11e9-8c7e-00a098a0320b"
        ```
        <br/>
      operationId: igroup_get
      parameters:
      - description: Unique identifier of the igroup.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    patch:
      description: |
        Updates an initiator group.

        <br/>
        ### Example
        1. Updating an initiator group:
            <br/>
            ```
            PATCH "/api/datacenter/protocols/san/igroups/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=igroup,uuid=0833bd3f-0370-11e9-8c7e-00a098a0320b"
                     '{
                        "name": "igroup1",
                        "protocol": "mixed",
                        "os_type": "windows",
                        "initiators": [
                         {
                            "name": "iqn.1991-05.com.microsoft:sharpree13-pc.hq.domain.com"
                          },
                          {
                            "name": "iqn.1991-05.com.microsoft:sharpree14-pc.hq.domain.com"
                          }
                          ]
                      }'
            ```
            <br/>
        2. Updating an initiator group by removing existing assigned initiators:
              <br/>
              ```
              PATCH "/api/datacenter/protocols/san/igroups/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=igroup,uuid=0833bd3f-0370-11e9-8c7e-00a098a0320b"
                     '{
                        "initiators": []
                      }'
              ```
              <br/>
      operationId: igroup_modify
      parameters:
      - description: Resource key of the initiator group object.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/igroup'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/igroup'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/aggregates:
    get:
      description: |-
        Retrieves aggregates.

        ### Examples
          1. Retrieving a list of aggregates in the cluster sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/storage/aggregates?order_by=name"
              ```
              <br/>
          2. Retrieving a list of aggregates in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/storage/aggregates?name=aggregate1"
              ```
              <br/>
          3. Retrieving a list of aggregates in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/storage/aggregates?cluster.name=cluster1"
              ```
              <br/>
      operationId: aggregate_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by performance_capacity.used
        format: float
        in: query
        name: performance_capacity.used
        type: number
      - description: Filter by space.efficiency.logical_used
        format: int64
        in: query
        name: space.efficiency.logical_used
        type: integer
      - description: Filter by space.efficiency.savings
        format: int64
        in: query
        name: space.efficiency.savings
        type: integer
      - description: Filter by space.block_storage.size
        format: int64
        in: query
        name: space.block_storage.size
        type: integer
      - description: Filter by space.block_storage.available
        format: int64
        in: query
        name: space.block_storage.available
        type: integer
      - description: Filter by space.block_storage.used
        format: int64
        in: query
        name: space.block_storage.used
        type: integer
      - description: Filter by data_encryption.software_encryption_enabled
        in: query
        name: data_encryption.software_encryption_enabled
        type: boolean
      - description: Filter by snaplock_type
        in: query
        name: snaplock_type
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by block_storage.primary.raid_size
        format: int64
        in: query
        name: block_storage.primary.raid_size
        type: integer
      - description: Filter by block_storage.primary.raid_type
        in: query
        name: block_storage.primary.raid_type
        type: string
      - description: Filter by block_storage.mirror.state
        in: query
        name: block_storage.mirror.state
        type: string
      - description: Filter by block_storage.mirror.enabled
        in: query
        name: block_storage.mirror.enabled
        type: boolean
      - description: Filter by block_storage.hybrid_cache.enabled
        in: query
        name: block_storage.hybrid_cache.enabled
        type: boolean
      - description: Filter by block_storage.hybrid_cache.size
        format: int64
        in: query
        name: block_storage.hybrid_cache.size
        type: integer
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/aggregates/analytics:
    get:
      description: |
        Retrieves the performance details for the aggregates.
      operationId: analytics_aggregate_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by performance_capacity.used_percent
        in: query
        name: performance_capacity.used_percent
        type: double
      - description: Filter by performance_capacity.available_iops_percent
        in: query
        name: performance_capacity.available_iops_percent
        type: double
      - description: Filter by utilization_percent
        in: query
        name: utilization_percent
        type: double
      - description: Filter by aggregate.key
        in: query
        name: aggregate.key
        type: string
      - description: Filter by aggregate.name
        in: query
        name: aggregate.name
        type: string
      - description: Filter by aggregate.uuid
        in: query
        name: aggregate.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by node.key
        in: query
        name: node.key
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/aggregates/{key}:
    get:
      description: |-
        Retrieves an aggregate.

        ### Example
        Retrieving an individual aggregate using the specified key:
        <br/>
        ```
        GET "/api/datacenter/storage/aggregates/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=aggregate,uuid=1d2d1d30-649b-458f-934c-933d3f6e8f2d"
        ```
        <br/>
      operationId: aggregate_get
      parameters:
      - description: Unique identifier of the aggregate.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/aggregates/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the aggregate specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metric_aggregate_get_by_key
      parameters:
      - description: Aggregate Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/luns:
    get:
      description: |
        Retrieves LUNs.

          ### Examples
          1. Retrieving a list of LUNs in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/storage/luns?order_by=name"
              ```
              <br/>
          2. Retrieving a list of LUNs in the datacenter filtered using "name":
              <br/>
              ```
              GET "/api/datacenter/storage/luns?name=lun1"
              ```
              <br/>
          3. Retrieving a list of LUNs in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/storage/luns?cluster.name=cluster1"
              ```
              <br/>
      operationId: lun_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by class
        in: query
        name: class
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by status.mapped
        in: query
        name: status.mapped
        type: boolean
      - description: Filter by status.state
        in: query
        name: status.state
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - description: Filter by lun_maps.logical_unit_number
        in: query
        name: lun_maps.logical_unit_number
        type: integer
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/luns/analytics:
    get:
      description: |
        Retrieves the performance details for the LUNs.
      operationId: analytics_lun_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by lun.key
        in: query
        name: lun.key
        type: string
      - description: Filter by lun.name
        in: query
        name: lun.name
        type: string
      - description: Filter by lun.uuid
        in: query
        name: lun.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/luns/{key}:
    get:
      description: |
        Retrieves a LUN.

        ### Example
        Retrieving an individual LUN using the specified key:
        <br/>
        ```
        GET "/api/datacenter/storage/luns/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=lun,uuid=2e95aaea-9691-4f33-9cfa-b16c3573bbbb"
        ```
        <br/>
      operationId: lun_get
      parameters:
      - description: Unique identifier of the LUN.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/luns/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the LUN specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_lun_get_by_key
      parameters:
      - description: Lun Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/qos/policies:
    get:
      description: |-
        Retrieves quality-of-service policies.

          ### Examples
          1. Retrieving a list of quality-of-service policies in the datacenter sorted by "uuid":
              <br/>
              ```
              GET "/api/datacenter/storage/qos/policies?order_by=uuid"
              ```
              <br/>
          2. Retrieving a list of quality-of-service policies in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/storage/qos/policies?cluster.name=cluster1"
              ```
              <br/>
          3. Retrieving a list of quality-of-service policies in the datacenter filtered using "svm.name":
              <br/>
              ```
              GET "/api/datacenter/storage/qos/policies?svm.name=svm1"
              ```
              <br/>
      operationId: qos_policy_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by adaptive.absolute_min_iops
        format: int64
        in: query
        name: adaptive.absolute_min_iops
        type: integer
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qos_policy_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/qos/policies/{key}:
    get:
      description: |-
        Retrieves a quality-of-service policy.

        ### Example
        Retrieving an individual quality-of-service policy using the specified key:
        <br/>
        ```
        GET "/api/datacenter/storage/qos/policies/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=qos_policy_group,qos_policy_group_uuid=00ac1ca5-dd3e-11e8-8c7e-00a098a0320b"
        ```
        <br/>
      operationId: qos_policy_get
      parameters:
      - description: Unique identifier of the quality-of-service policy.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qos_policy'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/qtrees:
    get:
      description: |-
        Retrieves qtrees for all FlexVol volumes or FlexGroup volumes. <br/>

          ### Examples
          1. Retrieving a list of qtrees in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/storage/qtrees?order_by=name"
              ```
              <br/>
          2. Retrieving a list of qtrees in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/storage/qtrees?cluster.name=cluster1"
              ```
              <br/>
          3. Retrieving a list of qtrees in the datacenter filtered using "svm.name":
              <br/>
              ```
              GET "/api/datacenter/storage/qtrees?svm.name=svm1"
              ```
              <br/>
      operationId: qtree_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by ID
        format: int64
        in: query
        name: id
        type: integer
      - description: Filter by security_style
        in: query
        name: security_style
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by export_policy.key
        in: query
        name: export_policy.key
        type: string
      - description: Filter by export_policy.name
        in: query
        name: export_policy.name
        type: string
      - description: Filter by export_policy.id
        in: query
        name: export_policy.id
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qtree_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/qtrees/{key}:
    get:
      description: |-
        Retrieves a qtree.

        ### Example
        Retrieving an individual qtree using the specified key:
        <br/>
        ```
        GET "/api/datacenter/storage/qtrees/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=qtree,vserver_uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b,volume_uuid=c8fc9cd8-dab8-4d52-a022-fd4ccf36bc7a,qtree_id=0"
        ```
        <br/>
      operationId: qtree_get
      parameters:
      - description: Unique identifier of the qtree.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qtree'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/volumes:
    get:
      description: |-
        Retrieves volumes.

        ### Examples
        1. Retrieving a list of volumes in the datacenter sorted by "name":
            <br/>
            ```
            GET "/api/datacenter/storage/volumes?order_by=name"
            ```
            <br/>
        2. Retrieving a list of volumes in the datacenter filtered using "cluster.name":
            <br/>
            ```
            GET "/api/datacenter/storage/volumes?cluster.name=cluster1"
            ```
            <br/>
        3. Retrieving a list of volumes in the datacenter filtered using "svm.name":
            <br/>
            ```
            GET "/api/datacenter/storage/volumes?svm.name=svm1"
            ```
            <br/>
      operationId: volume_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by space.available
        format: int64
        in: query
        name: space.available
        type: integer
      - description: Filter by space.used
        format: int64
        in: query
        name: space.used
        type: integer
      - description: Filter by space.size
        format: int64
        in: query
        name: space.size
        type: integer
      - description: Filter by autosize.mode
        in: query
        name: autosize.mode
        type: string
      - description: Filter by autosize.maximum
        format: int64
        in: query
        name: autosize.maximum
        type: integer
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by style
        in: query
        name: style
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by aggregate.key
        in: query
        name: aggregate.key
        type: string
      - description: Filter by aggregate.name
        in: query
        name: aggregate.name
        type: string
      - description: Filter by aggregate.uuid
        in: query
        name: aggregate.uuid
        type: string
      - description: Filter by nas.export_policy.key
        in: query
        name: nas.export_policy.key
        type: string
      - description: Filter by nas.export_policy.name
        in: query
        name: nas.export_policy.name
        type: string
      - description: Filter by nas.export_policy.id
        in: query
        name: nas.export_policy.id
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/volumes/analytics:
    get:
      description: |
        Retrieves the performance details for the volumes.
      operationId: analytics_volume_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by iops_per_tb
        in: query
        name: iops_per_tb
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/volumes/{key}:
    get:
      description: |
        Retrieves a volume.

        ### Example
        Retrieving a volume using the specified key:
        <br/>
        ```
        GET "/api/datacenter/storage/volumes/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=volume,uuid=0076036d-409f-4b84-b8a9-86aa87ac6347"
        ```
        <br/>
      operationId: volume_get
      parameters:
      - description: Unique identifier of the volume.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/storage/volumes/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the volume specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_volume_get_by_key
      parameters:
      - description: Volume Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/svm/svms:
    get:
      description: |
        Retrieves SVMs.

        ### Examples
          1. Retrieving a list of SVMs in the datacenter sorted by "name":
              <br/>
              ```
              GET "/api/datacenter/svm/svms?order_by=name"
              ```
              <br/>
          2. Retrieving a list of SVMs in the datacenter filtered using "nfs.enabled":
              <br/>
              ```
              GET "/api/datacenter/svm/svms?nfs.enabled=true"
              ```
              <br/>
          3. Retrieving a list of SVMs in the datacenter filtered using "cluster.name":
              <br/>
              ```
              GET "/api/datacenter/svm/svms?cluster.name=cluster1"
              ```
              <br/>
      operationId: svm_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by cluster key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster name
        in: query
        name: cluster.name
        type: string
      - description: Filter by nis.enabled
        in: query
        name: nis.enabled
        type: boolean
      - description: Filter by nvme.enabled
        in: query
        name: nvme.enabled
        type: boolean
      - description: Filter by language
        in: query
        name: language
        type: string
      - description: Filter by nfs.enabled
        in: query
        name: nfs.enabled
        type: boolean
      - description: Filter by subtype
        in: query
        name: subtype
        type: string
      - description: Filter by fcp.enabled
        in: query
        name: fcp.enabled
        type: boolean
      - description: Filter by iscsi.enabled
        in: query
        name: iscsi.enabled
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by ldap.enabled
        in: query
        name: ldap.enabled
        type: boolean
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by cifs.name
        in: query
        name: cifs.name
        type: string
      - description: Filter by cifs.enabled
        in: query
        name: cifs.enabled
        type: boolean
      - description: Filter by state
        in: query
        name: state
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    post:
      description: |
        Creates an SVM.

        ### Required properties
        * `name` - Name of the svm.
        * `cluster.key` - Cluster key.

        ### Recommended optional properties
        * ipspace.name or ipspace.uuid - IPspace of the SVM
        * ip_interfaces - If provided, the following fields are required:
          * ip_interfaces.name - Name of the interface
          * ip_interfaces.ip.address - IP address
          * ip_interfaces.ip.netmask - Netmask length or IP address
          * ip_interfaces.location.home_node.name - Home node name.
        * routes - If provided, the following field is required:
          * routes.gateway - Gateway IP address
        * cifs - If provided, interfaces, routes and DNS must be provided. The following fields are also required:
          * cifs.name - Name of the CIFS server to be created for the SVM.
          * cifs.ad_domain.fqdn - Fully qualified domain name
          * cifs.ad_domain.user - Administrator username
          * cifs.ad_domain.password - User password
        * ldap - If provided, the following fields are required:
          * ldap.servers or ldap.ad_domain - LDAP server list or Active Directory domain
          * ldap.bind_dn - Bind DN
          * ldap.base_dn - Base DN
        * nis - If provided, the following fields are required:
          * nis.servers - NIS servers
          * nis.domain - NIS domain
        * dns - If provided, the following fields are required:
          * dns.servers - Name servers
          * dns.domains - Domains

        If not specified in POST, the following default property values are assigned:

        * language - C.UTF-8
        * ipspace.name - Default
        * snapshot_policy.name - Default
        * subtype - Default (sync-source if MetroCluster configuration)

          ### Examples
          1. Creating an SVM using default "snapshot_policy":
              <br/>
              ```
              POST "/api/datacenter/svm/svms" '{"name":"testVs", "cluster.key": "f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cluster,uuid=f39cb95a-b7f8-11e6-9022-00a098a0320b", snapshot_policy":{"name":"default"}}'
              ```
              <br/>
          2. Creating an SVM and configuring NFS, ISCSI and FCP:
              <br/>
              ```
              POST "/api/datacenter/svm/svms" '{"name":"testVs", "cluster.key": "f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cluster,uuid=f39cb95a-b7f8-11e6-9022-00a098a0320b" "nfs":{"enabled":"true"}, "fcp":{"enabled":"true"}, "iscsi":{"enabled":"true"}}'
              ```
              <br/>
          3. Creating an SVM and configuring NVMe:
              <br/>
              ```
              POST "/api/datacenter/svm/svms" '{"name":"testVs", "cluster.key": "f39cb95a-b7f8-11e6-9022-00a098a0320b:type=cluster,uuid=f39cb95a-b7f8-11e6-9022-00a098a0320b" "nvme":{"enabled":"true"}}'
              ```
              <br/>
      operationId: svm_create
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/svm/svms/analytics:
    get:
      description: |
        Retrieves the performance details for the svms.
      operationId: analytics_svm_get_all
      parameters:
      - description: Filter by iops
        in: query
        name: iops
        type: double
      - description: Filter by latency
        in: query
        name: latency
        type: double
      - description: Filter by throughput
        in: query
        name: throughput
        type: double
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_analytics_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/svm/svms/{key}:
    delete:
      description: |
        Deletes an SVM.
        ### Example
        Deleting an individual SVM using the specified SVM key:
          <br/>
          ```
          DELETE "/api/datacenter/svm/svms/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=vserver,uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b"
          ```
          <br/>
      operationId: svm_delete
      parameters:
      - description: Unique identifier of the SVM object.
        in: path
        name: key
        required: true
        type: string
      - default: false
        description: If Set to true, SVM objects will be deleted and data volumes
          will be offline and deleted.
        in: query
        name: force
        type: boolean
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    get:
      description: |-
        Retrieves an SVM.

        ### Example
        Retrieving an individual SVM using the specified SVM key:
        <br/>
        ```
        GET "/api/datacenter/svm/svms/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=vserver,uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b"
        ```
        <br/>
      operationId: svm_get
      parameters:
      - description: Unique identifier of the SVM.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
    patch:
      description: |
        Updates an SVM.

          ### Examples
          1.  Stopping an individual SVM:
                <br/>
                ```
                PATCH "/api/datacenter/svm/svms/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=vserver,uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b" '{"state":"stopped"}'
                ```
                <br/>
          2.  Updating the "language" of an individual SVM:
                <br/>
                ```
                PATCH "/api/datacenter/svm/svms/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=vserver,uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b" '{"language":"en.UTF-8"}'
                ```
                <br/>
          3.  Updating the "name" of an individual SVM:
                <br/>
                ```
                PATCH "/api/datacenter/svm/svms/f39cb95a-b7f8-11e6-9022-00a098a0320b:type=vserver,uuid=00c800af-dbb1-11e8-8c7e-00a098a0320b" '{"name":"svm_new"}'
                ```
                <br/>
      operationId: svm_modify
      parameters:
      - description: Unique identifier of the SVM object.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /datacenter/svm/svms/{key}/metrics:
    get:
      description: |
        Retrieves the performance details for the SVM specified by the key. This is performance-related information data collected over the given interval. When an interval (time range) is provided from the supported given range, the summary section is populated with the accumulated counters, such as, minimum, maximum, the average and 95th_percentile performance values over a period of time.
      operationId: metrics_svm_get_by_key
      parameters:
      - description: SVM Key
        in: path
        name: key
        required: true
        type: string
      - description: |-
          The time range for the data. Examples can be 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m. You will get 1 hour samples if the range is more than 3 days else it will be 5 minutes samples. The period for each time range is as follows:
          *  1h:  Metrics over the most recent hour sampled over 5 minutes.
          *  12h: Metrics over the most recent 12 hours sampled over 5 minutes.
          *  1d:  Metrics over the most recent day sampled over 5 minutes.
          *  2d:  Metrics over the most recent 2 days sampled over 5 minutes.
          *  3d:  Metrics over the most recent 3 days sampled over 5 minutes.
          *  15d: Metrics over the most recent 15 days sampled over 1 hour.
          *  1w:  Metrics over the most recent week sampled over 1 hour.
          *  1m:  Metrics over the most recent month sampled over 1 hour.
          *  2m:  Metrics over the most recent 2 months sampled over 1 hour.
          *  3m:  Metrics over the most recent 3 months sampled over 1 hour.
          *  6m:  Metrics over the most recent 6 months sampled over 1 hour.
          Available values : 1h, 12h, 1d, 2d, 3d, 15d, 1w, 1m, 2m, 3m, 6m
          Default value : 1h
        in: query
        name: interval
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_metrics_sample_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - datacenter
  /gateways:
    get:
      description: |
        Retrieves the list of ONTAP REST services available through the API Gateway.

          ### Examples
          1. Retrieving the list of ONTAP services:
              <br/>
              ```
              GET "/api/gateways"
              ```
              <br/>
          2. Retrieving specific ONTAP services:
              <br/>
              ```
              GET "/api/gateways?name=fas8040-206-21&ip_address=10.120.21.4&type=ONTAP&&uuid=4c6bf721-1e3f-11e9-a3e2-00a0985badbb"
              ```
              <br/>
      operationId: gateway_collection_get
      parameters:
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by ip_address
        in: query
        name: ip_address
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/gateways_service_response'
      tags:
      - gateway
    x-ntap-long-description:
      description: |
        ## Overview
        These APIs allow you to use ONTAP API calls for resources managed by Active IQ Unified Manager.
        The Active IQ Unified Manager gateway:
           * Provides a single endpoint that uses Active IQ Unified Manager credentials for authentication.

           * Uses registered ONTAP service account credentials to authenticate APIs for resources.

           * Transforms URL and Hypermedia as the Engine of Application State (HATEOAS) links in the API header and response body into API Gateway
           URL links.

        The request and response bodies, headers, status codes, and paths pass through the gateway unmodified.
      tags:
      - gateway
  /gateways/{uuid}/{path}:
    delete:
      description: |
        This API uses an ONTAP DELETE request for a resource managed by Active IQ Unified Manager.
        ### Example
        Deleting a specific volume:
        <br/>
        ```
        DELETE "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/volumes/9ec9c92d-1e3f-11e9-a3e2-00a0985badbb"
        ```
        <br/>
      operationId: gateway_delete
      parameters:
      - description: Datasource UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Datasource REST API path
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/hal+json
      - application/json
      responses:
        default:
          description: Response provided by underlying service
          schema:
            $ref: '#/definitions/response_body'
      tags:
      - gateway
    get:
      description: |
        This API uses an ONTAP GET request for a resource managed by Active IQ Unified Manager.

          ### Examples
          1. Retrieving cluster details:
              <br/>
              ```
              GET "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/cluster"
              ```
              <br/>
          2. Retrieving cluster details using a specific cluster name:
              <br/>
              ```
              GET "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/cluster?name=fas8040-206-21"
              ```
              <br/>
          3. Retrieving aggregate details using a specific node name and aggregate UUID:
              <br/>
              ```
              GET "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/aggregates?node.name=fas8040-206-21&uuid=1d*"
              ```
              <br/>
          4. Retrieving details for a specific number of volumes:
              <br/>
              ```
              GET "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/volumes?max_records=10"
              ```
              <br/>
          5. Retrieving specific job details:
              <br/>
              ```
              GET "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/cluster/jobs/91f15944-d8aa-11e9-a90c-00a098616a5c"
              ```
              <br/>
      operationId: gateway_get
      parameters:
      - description: Datasource UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Datasource REST API path
        in: path
        name: path
        required: true
        type: string
      - description: The SVM UUID for SVM-scoped operations using REST APIs that support
          the svm.uuid filter.
        in: header
        name: X-Dot-SVM-UUID
        required: false
        type: string
      - description: The SVM name for SVM-scoped operations using REST APIs that support
          the svm.name filter.
        in: header
        name: X-Dot-SVM-Name
        required: false
        type: string
      produces:
      - application/hal+json
      - application/json
      responses:
        default:
          description: Response provided by underlying service
          schema:
            $ref: '#/definitions/response_body'
      tags:
      - gateway
    patch:
      description: |
        This API uses an ONTAP PATCH request for a resource managed by Active IQ Unified Manager.
        ### Example
        Updating the properties of a specific volume:
        <br/>
        ```
        PATCH "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/volumes/9ec9c92d-1e3f-11e9-a3e2-00a0985badbb" '{"size" : "31003200"}'
        ```
        <br/>
      operationId: gateway_patch
      parameters:
      - description: Datasource UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Datasource REST API path
        in: path
        name: path
        required: true
        type: string
      - description: Datasource REST API request body
        in: body
        name: info
        schema:
          $ref: '#/definitions/request_body'
      produces:
      - application/hal+json
      - application/json
      responses:
        default:
          description: Response provided by underlying service
          schema:
            $ref: '#/definitions/response_body'
      tags:
      - gateway
    post:
      description: |
        This API uses an ONTAP POST request for a resource managed by Active IQ Unified Manager.

          ### Examples
          1. Creating volumes:
              <br/>
              ```
              POST "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/volumes" '{"name": "vol1", "svm" : {"name" : "svm1"}, "aggregates" : [{"name" : "aggr1"}]}'
              ```
              <br/>
          2. Creating SVMs:
              <br/>
              ```
              POST "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/svms" '{"name": "svm1"}'
              ```
              <br/>
          3. Creating aggregates:
              <br/>
              ```
              POST "/api/gateways/4c6bf721-1e3f-11e9-a3e2-00a0985badbb/storage/aggregates" '{"name": "aggr2", "node" : {"name" : "sti8020-276"}, "block_storage" : {"primary" : {"disk_count" : 5}}}'
              ```
              <br/>
      operationId: gateway_post
      parameters:
      - description: Datasource UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Datasource REST API path
        in: path
        name: path
        required: true
        type: string
      - description: The SVM UUID for SVM-scoped operations using REST APIs that support
          the svm.uuid filter.
        in: header
        name: X-Dot-SVM-UUID
        required: false
        type: string
      - description: The SVM name for SVM-scoped operations using REST APIs that support
          the svm.name filter.
        in: header
        name: X-Dot-SVM-Name
        required: false
        type: string
      - description: Datasource REST API request body
        in: body
        name: info
        schema:
          $ref: '#/definitions/request_body'
      produces:
      - application/hal+json
      - application/json
      responses:
        default:
          description: Response provided by underlying service
          schema:
            $ref: '#/definitions/response_body'
      tags:
      - gateway
  /management-server/alerts:
    get:
      description: |-
        Retrieves a list of all alerts.
        ### Examples
        1. Retrieving a list of alerts sorted by "name":
            <br/>
            ```
            GET "/api/management-server/alerts?order_by=name"
            ```
            <br/>
        2. Retrieving a list of alerts filtered using "enabled":
            <br/>
            ```
            GET "/api/management-server/alerts?enabled=true"
            ```
            <br/>
        3. Retrieving a list of alerts filtered using "action.notification.send_snmp_trap":
            <br/>
            ```
            GET "/api/management-server/alerts?action.notification.send_snmp_trap=false
            ```
            <br/>
      operationId: alert_collection_get
      parameters:
      - description: Filter by key.
        in: query
        name: key
        type: string
      - description: Filter by name.
        in: query
        name: name
        type: string
      - description: Filter by enable.
        in: query
        name: enable
        type: boolean
      - description: Filter by notification start time.
        in: query
        name: action.notification.from
        type: string
      - description: Filter by notification end time.
        in: query
        name: action.notification.to
        type: string
      - description: Filter by notification duration.
        in: query
        name: action.notification.duration
        type: string
      - description: Filter by script key.
        in: query
        name: action.script.key
        type: string
      - description: Filter by script name.
        in: query
        name: action.script.name
        type: string
      - description: Filter by snmp trap switch.
        in: query
        name: action.notification.send_snmp_trap
        type: boolean
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/alert_response'
      tags:
      - management-server
    post:
      description: |-
        Creates an alert request.
        ### Required properties
        * `name` - Name of the alert.
        * `action.send_snmp_trap` - Indicates if an SNMP trap should be issued.
        * `resource` or `event` - Either resource or event is required.

        ### Recommended optional properties
        * description - Provides a description for the alert.
        * action.to - Start time of recurring notifications.
        * action.from - End time of recurring notifications.
        * action.duration - Duration between two notifications.
        * enabled - Specifies whether the alert is enabled.

        If not specified in POST, the following default property values are assigned:

        * description -  null
        * action.to - null
        * action.from - null
        * action.duration - null indicating notify once.
        * enabled - true
        ### Examples
        1. Creating an alert with single notification:
            <br/>
            ```
            POST "/api/management-server/alerts" '{"key":"9b42a39f-caf9-4591-a556-4fb0956d4258","name":"alert7","description":"This is a sample alert.","enabled":true,"action":{"notification":{"duration":null,"emails":["abc@cde.com"],"from":null,"to":null,"send_snmp_trap":true},"script":{"key":null,"name":null}},"resource":[{"exclude":["def"],"include":["abc"],"keys":[],"type":"cluster","include_all":true}],"event":{"severities":["error"],"types":["Login Banner Disbled"]}}'
            ```
            <br/>
        2. Creating an alert with combination of event type and event severity, recurring notifications and with resource with include, exclude filter:
            <br/>
            ```
            POST "/api/management-server/alerts" '{"action":{"notification":{"duration":"PT1000S","emails":["abc@cde.com"],"from":"PT9000S","send_snmp_trap":true,"to":"PT18000S"},"script":{}},"description":"This is a sample alert.","enabled":false,"event":{"severities":["error"],"types":["Login Banner Disbled"]},"name":"alert6","resource":[{"exclude":["def"],"include":["abc"],"include_all":true,"keys":[],"type":"cluster"}]}'
            ```
            <br/>
      operationId: create_alert
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/alert'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/alert'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/alerts/{key}:
    delete:
      description: |
        Deletes the alert.
        ### Example
        Deleting an alert:
        <br/>
        ```
        DELETE "/api/management-server/alerts/f5d7d19c-af37-4e21-9545-b4e61290d0c6"
        ```
        <br/>
      operationId: delete_alert
      parameters:
      - description: Unique identifier of the alert.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
    get:
      description: |-
        Retrieves an alert.
        ### Example
        Get an alert:
        <br/>
        ```
        GET "/api/management-server/alerts/f5d7d19c-af37-4e21-9545-b4e61290d0c6"
        ```
        <br/>
      operationId: alert_get
      parameters:
      - description: Key of an alert.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/alert'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
    patch:
      description: |-
        Updates an alert.
        ### Examples
        1.  Disble an alert.
            <br/>
            ```
            PATCH "/api/management-server/alerts/c2897f08-4ebb-481f-a42c-33f576a84436" '{"enabled":false}'
            ```
            <br/>
        2.  Change alert to notify only for non-critical events.
            <br/>
            ```
            PATCH "/api/management-server/alerts/c2897f08-4ebb-481f-a42c-33f576a84436" '{"event":{"severities":["error","warning"]},"name":"not-critical alert"}'
            ```
            <br/>
      operationId: alert_modify
      parameters:
      - description: Unique identifier of the alert.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/alert'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/alert'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/events:
    get:
      description: |-
        Retrieves a list of all events
        You can use this API to retrieve the list of events with  details such as impact, history, cause, and so on. The following are example use cases:
        ### Examples
        1. Retrieving event details by key:
        <br/>
        ```
        /api/management-server/events/532ac515-5ebe-11ea-969a-fa163e4da292
        ```
        <br/>
        2. Retrieving the list of events:
        <br/>
        ```
        /api/management-server/events
        ```
        <br/>
        3. Retrieving all events with the impact.level "risk":
        <br/>
        ```
        /api/management-server/events?impact.level=risk
        ```
        <br/>
        4. Retrieving all the events with the assigned.user "user1":
        <br/>
        ```
        /api/management-server/events?assigned.user=user1
        ```
        <br/>
        5. Retrieving all the events having the new state in history:
        <br/>
        ```
        /api/management-server/events?history.state=new
        ```
        <br/>
        6. Retrieving all events with an event "resolved" timestamp after the time specified:
        <br/>
        ```
        /api/management-server/events?history.state=resolved&history.timestamp=>2019-10-18T02:45:12.668+05:30
        ```
        <br/>
        7. Retrieving all events ordered by "severity":
        <br/>
        ```
        /api/management-server/events?order_by=severity
        ```
        <br/>
        8. Retrieving all events ordered by the "resolved" timestamp:
        <br/>
        ```
        /api/management-server/events?history.state=resolved&order_by=history.timestamp
        ```
        <br/>
        9. Retrieving all events with the current_state resolved and sorted by acknowledged time:
        <br/>
        ```
        /api/management-server/events?current_state=resolved&history.state=acknowledged&order_by=history.timestamp desc
        ```
        <br/>
      operationId: event_collection_get
      parameters:
      - description: Filter by key.
        in: query
        name: key
        type: string
      - description: Filter by name.
        in: query
        name: name
        type: string
      - description: Filter by cluster key.
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster UUID.
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster name.
        in: query
        name: cluster.name
        type: string
      - description: Filter by SVM key.
        in: query
        name: svm.key
        type: string
      - description: Filter by SVM UUID.
        in: query
        name: svm.uuid
        type: string
      - description: Filter by SVM name.
        in: query
        name: svm.name
        type: string
      - description: Filter by node key.
        in: query
        name: node.key
        type: string
      - description: Filter by node UUID.
        in: query
        name: node.uuid
        type: string
      - description: Filter by node name.
        in: query
        name: node.name
        type: string
      - description: Filter by severity.
        in: query
        name: severity
        type: string
      - description: Filter by event state.
        in: query
        name: current_state
        type: string
      - description: Filter by impact area.
        in: query
        name: impact.area
        type: string
      - description: Filter by impact level.
        in: query
        name: impact.level
        type: string
      - description: Filter by impact.resource_type.
        in: query
        name: impact.resource_type
        type: string
      - description: Filter by the user to which event is assigned.
        in: query
        name: assigned.user
        type: string
      - description: Filter by history.state. Multiple history based field filters
          are not supported.
        in: query
        name: history.state
        type: string
      - description: Filter by history.timestamp with history.state provided. Multiple
          history based field filters are not supported.
        in: query
        name: history.timestamp
        type: string
      - description: Filter by history.user with history.state provided. Valid for
          the "resolved" and "acknowledge" states. Multiple history based field filters
          are not supported.
        in: query
        name: history.user
        type: string
      - description: Filter by history.cause with history.state provided. Valid for
          the "obsolete" state. Multiple history based field filters are not supported.
        in: query
        name: history.cause
        type: string
      - description: Filter by event group.
        in: query
        name: group
        type: string
      - description: Filter by event origin.
        in: query
        name: origin
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/event_response'
      tags:
      - management-server
  /management-server/events/{key}:
    get:
      description: Retrieves the event details by the input event key.
      operationId: event_get
      parameters:
      - description: Key of the event.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/event'
      tags:
      - management-server
    patch:
      description: |-
        Updates an event detail. The following are example use cases.
        ### Examples
        1. Moving the event to acknowledged state:
        <br/>
        ```
        PATCH /api/management-server/events/532ac515-5ebe-11ea-969a-fa163e4da292 '{"current_state":"acknowledged", "acknowledged_username": "userA"}'
        ```
        <br/>
        2. Moving the event to resolved state:
        <br/>
        ```
        PATCH /api/management-server/events/532ac515-5ebe-11ea-969a-fa163e4da292 '{"current_state":"resolved", "resolved_username": "userA"}'
        ```
        <br/>
        3. Assigning and event to a user:
        <br/>
        ```
        PATCH /api/management-server/events/532ac515-5ebe-11ea-969a-fa163e4da292 '{"assigned":{"user": "userA"}}'
        ```
        <br/>
      operation_id: event_modify
      parameters:
      - description: Unique identifier of the event.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/event'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/event'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/jobs:
    get:
      description: |-
        Retrieves information about jobs.
          ### Examples
          1. Retrieving a list of jobs filtered using name:
              <br/>
              ```
              GET "/api/management-server/jobs?name=job1"
              ```
              <br/>
          2. Retrieving a list of jobs filtered using state:
              <br/>
              ```
              GET "/api/management-server/jobs?state=completed"
              ```
              <br/>
          3. Retrieving a list of jobs filtered using status:
              <br/>
              ```
              GET "/api/management-server/jobs?status=normal"
              ```
              <br/>
      operationId: job_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by submit_time
        format: date-time
        in: query
        name: submit_time
        type: string
      - description: Filter by complete_time
        format: date-time
        in: query
        name: complete_time
        type: string
      - description: Filter by parent_job_key
        in: query
        name: parent_job_key
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jobs_response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/jobs/{key}:
    get:
      description: |-
        Retrieves a job.
        ### Examples
        Retrieving an individual job using the specified key:
          <br/>
          ```
          GET "/api/management-server/jobs/2c6002305af315d6:-36e66c:16e3ae18e35:-7ff4"
          ```
          <br/>
      operationId: jobs_get
      parameters:
      - description: Unique identifier of the job.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/job'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/scripts:
    get:
      description: |-
        Retrieves a list of all scripts.
        ### Examples
        1. Retrieving the list of scripts:
        <br/>
        ```
        /api/management-server/scripts
        ```
        <br/>
        2. Retrieving the list of scripts order by name:
        <br/>
        ```
        /api/management-server/scripts?order_by=name
        ```
        <br/>
        3. Retrieving the list of scripts filtered by name:
        <br/>
        ```
        /api/management-server/scripts?name=abc
        ```
        <br/>
      operationId: script_collection_get
      parameters:
      - description: Filter by key.
        in: query
        name: key
        type: string
      - description: Filter by name.
        in: query
        name: name
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/script_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
    post:
      consumes:
      - multipart/form-data
      description: |-
        Adds a script.
        ### Required properties
        * `name` - Script File.

        ### Recommended optional properties
        * description - Description of the file

        If not specified in POST, the following default property values are assigned:

        * description - null
        ### Examples
        1. Upload a script:
        <br/>
        ```
        POST /api/management-server/scripts/
        select the file by using the "Choose File" button before sending the request.
        ```
        <br/>
      operationId: create_script
      parameters:
      - description: The file to upload.
        in: formData
        name: name
        required: true
        type: file
      - description: The file description.
        in: formData
        name: description
        required: false
        type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - management-server
  /management-server/system:
    get:
      description: |-
        This API is used to retrieve information about the system, such as, vendor name, product name, current running version, UUID, deployment platform, and the status of any services that are currently running.

        ### Examples
          1. Retrieving system information and services status:
              <br/>
              ```
              GET "/api/management-server/system"
              ```
              <br/>
      operationId: system_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/system_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
        '503':
          description: Service Unavailable
      tags:
      - management-server
  /security/users:
    get:
      description: |
        Retrieves details about all users. Provides filtering using "eq" parameter for name, role, authentication_type.

          ### Examples
          1. Retrieving details about all users:
              <br/>
              ```
              GET "/api/security/users"
              ```
              <br/>
          2. Retrieving a user filtered using "name":
              <br/>
              ```
              GET "/api/security/users?name=admin1"
              ```
              <br/>
          3. Retrieving users filtered using "role":
              <br/>
              ```
              GET "/api/security/users?role=administrator"
              ```
              <br/>
          4. Retrieving users filtered using "authentication_type":
              <br/>
              ```
              GET "api/security/users?authentication_type=local_user"
              ```
              <br/>
          5. Retrieving list of users:
              <br/>
              ```
              GET "/api/security/users?order_by=name"
              ```
              <br/>
          6. Retrieving list of users:
              <br/>
              ```
              GET "/api/security/users?order_by=role"
              ```
              <br/>
          7. Retrieving list of users:
              <br/>
              ```
              GET "/api/security/users?order_by=authentication_type"
              ```
              <br/>
      operationId: user_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by role
        enum:
        - report_schema
        - integration_schema
        - operator
        - storage_administrator
        - administrator
        in: query
        name: role
        type: string
      - description: Filter by authentication_type
        enum:
        - ldap_group
        - ldap_user
        - local_user
        - database_user
        - maintenance_user
        in: query
        name: authentication_type
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/users_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |
        Creates a new user with the attributes provided.
        A user with authentication_type `local_user`, `ldap_user` or `ldap_group` can be created with the following roles:
        * operator
        * storage_administrator
        * administrator

        A user with the authentication_type `database_user` can be created with the following roles:
        * report_schema
        * integration_schema

        ### Required properties
        * `authentication_type` - Authentication type of the user.
        * `name` - Name of the user.
        * `role` - Role of the user.
        * `password` - This field is only required for the following authentication_types:
          * local_user
          * maintenance_user
          * database_user
        * `email` - This field is only required for the following authentication_types:
          * local_user
          * ldap_user
        ### Example
        Creating a user:
        <br/>
        ```
        POST "/api/security/users" '{"authentication_type": "local_user,"confirm_password": "netapp1!","email": "admin1@netapp.com","group": true,"name": "admin1","password": "netapp1!","role": "administrator"}'
        ```
        <br/>
      operationId: user_create
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/user'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        Manages your user details
        ## Overview
        You can use this API to retrieve details of all users. You can also create new users, delete users or update user properties.
      tags:
      - security
  /security/users/{name}:
    delete:
      description: "Deletes the user specified by the username. \n### Example\nDeleting
        the user specified by the  username:\n<br/>\n```\nDELETE \"/api/security/users/admin1\"\n```\n<br/>\n"
      operationId: user_delete
      parameters:
      - description: Unique identifier of the user.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |
        Retrieves all details, for example name, email address, role and authentication_type.
        ### Example
        Retrieving all details:
        <br/>
        ```
        GET "/api/security/users/admin1"
        ```
        <br/>
      operationId: user_get
      parameters:
      - description: Unique identifier of the user.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: "Updates the properties of a user specified by the name.\nA user
        with authentication_type `local_user`, `ldap_user` or `ldap_group` can be
        modified with the following roles:\n* operator\n* storage_administrator\n*
        administrator\n\nA user with the authentication_type `database_user` can be
        modified with the following roles:\n* report_schema\n* integration_schema\n\nA
        user with the authentication_type `local_user` or `maintenance_user` can be
        modified with the following locked states:\n* yes\n* no\n\nYou can not modify
        the locked property of a user with the authentication_type `ldap_user`, `ldap_group`
        or `database_user`. \n### Example\nUpdating the properties of a user specified
        by the name:\n<br/>\n```\nPATCH \"/api/security/users/admin1\" '{\"email\":
        \"admin@netapp.com\",\"password\": \"netapp2!\",\"role\": \"storage_administrator\",\"locked\":
        \"yes\" }'\n```\n<br/>\n"
      operationId: user_modify
      parameters:
      - description: Unique identifier of the user.
        in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/user'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Invalid Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /storage-provider/access-endpoints:
    get:
      description: |-
        Retrieves all access endpoints for an SVM, file share, or LUN. Network interfaces are provided with attributes, such as "ip.address", "ip.netmask", "gateway" and so on while FCP interfaces are provided with the "wwpn" attribute. You can provide the properties `svm.key`, `fileshare.key`, and `lun.key` to filter out the interfaces as follows:
          * `svm.key` - all types of interfaces for SAN and NAS (CIFS, NFS, ISCSI, and FCP protocols) are filtered.
          * `fileshare.key` - all interfaces with NAS protocols (CIFS and NFS) are filtered.
          * `lun.key` - all interfaces with SAN protocols (iSCSI and FCP) are filtered.
        ### Example
         Retrieving a list of access end points based on the resource key:
           <br/>
           ```
           GET "/api/storage-provider/access-endpoints"
           ```
           <br/>
      operationId: access_endpoints_collection_get
      parameters:
      - description: Unique identifier of the SVM, file share, or LUN object.
        in: query
        name: resource.key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/access_endpoint_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: "Creates a new access endpoint (interface) on specified SVM, LUN,
        or file share.\n\n### Required properties for creating a network interface\n*
        `data_protocols` - NAS protocols (CIFS and/or NFS) or SAN protocol (iSCSI)\n*
        `ip.address` - IP address\n* `ip.netmask` - Netmask\n* `svm.key`, `fileshare.key`,
        `lun.key` - Unique identifier of an SVM, LUN, or file share\n\n### Optional
        properties\n* `ip.ha_address` - Interface on the partner node which can be
        provided for iSCSI interface creation of a LUN. Not applicable to interface
        creation of an SVM or file share.\n* `name` -  If \"ip_ha_address\" is not
        provided, it is automatically generated. Where ???ip_ha_address??? is provided,
        it refers to the primary interface.\n* `gateway` -  Used to create the route.\n*
        `vlan` -  If not provided, then the best available physical port is used.\n*
        `mtu` - Used to create a new broadcast domain or modify an existing one. Only
        provided if ???vlan??? is also provided.\n\n### Required properties for creating
        an FCP interface\n* `data_protocols` - FCP protocol only.\n* `svm.key` or
        `lun.key` - Unique identifier of an SVM or LUN.\n\n### Optional properties\n*
        `name` - Autogenerated if not provided.\n\n### Important information when
        creating a SAN (iSCSI/FCP) interface for a LUN\n- The FCP request for a LUN
        always creates two interfaces; one at the LUN???s home node and another at the
        partner node.\n- In the case of a network interface (iSCSI), you can provide
        the IP address, the HA IP address, or both values.\n- If both IP address and
        HA IP address are provided then it will create two interfaces and the HA IP
        address is assigned to the partner interface.\n- If only IP address or HA
        IP address is provided, then it will create an interface in the respective
        home node or partner node.\n- If you provide a name, then it will be assigned
        to the first interface. The second interface???s name will be derived from the
        name of the first interface. For example, if the primary interface???s name
        is ???LIF1??? then the second interface???s name will be \"LIF1_Partner\".\n- The
        job response will provide two keys: ???accessEndPointKey??? refers to the first
        interface and ???accessEndPointHAKey??? refers to the second interface on the
        partner node.\n- Both interfaces have the same SVM, netmask and gateway values.
        VLAN and MTU are assigned to the respective interfaces on the home node and
        the partner node.\n### Examples\n1. Creating an access endpoint for the SVM
        using mandatory parameters:\n    <br/>\n    ```\n    POST \"/api/storage-provider/access-endpoints\"
        '{\"data_protocols\": [\"nfs\"], \"gateway\": \"10.140.72.12\",\"ip\": {\"address\":
        \"10.162.83.26\",\"netmask\": \"255.255.0.0\"}, \"svm\": {\"key\": \"8601116e-1b56-11e9-bdec-00a098d87b4b:type=vserver,uuid=294334fb-076e-11ea-9457-00a098d7b0b9\"}}'\n
        \   ```\n    <br/>\n2.\tCreating an access endpoint for the SVM using optional
        parameters:\n    <br/>\n    ```\n    POST \"/api/storage-provider/access-endpoints\"
        '{\"data_protocols\": [\"iscsi\"],\"gateway\": \"10.138.62.12\",\"ip\": {\"address\":
        \"10.182.93.46\",\"netmask\": \"255.255.0.0\"},\"mtu\": 1500,\"name\":\"aep4\",\"svm\":{\"key\":
        \"8601116e-1b56-11e9-bdec-00a098d87b4b:type=vserver,uuid=294334fb-076e-11ea-9457-00a098d7b0b9\"},\"vlan\":
        10}'\n    ```\n    <br/>"
      operationId: create_access_endpoints
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/access_endpoint'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: |-
        You can use this API to retrieve access endpoints for an SVM, file share, or LUN. An access endpoint is the generic term for a cluster interface. This API allows you to create all types of interfaces, for example network interfaces (CIFS, NFS, and iSCI) and FCP interfaces. It is an asynchronous API and the respective job provides the key of the newly created interface. This API retrieves and updates details for an access endpoint specified by the key provided.</br>

        </br>For POST and PATCH requests, this API is blocked for all SAN Array Clusters since the underlying platform does not support NAS operations.
      tags:
      - storage-provider
  /storage-provider/access-endpoints/{key}:
    delete:
      description: |
        Deletes the attributes of the specified access endpoint.
        ### Example
         Deleting an individual access endpoint:
           <br/>
           ```
           DELETE "/api/storage-provider/access-endpoints/8601116e-1b56-11e9-bdec-00a098d87b4b:type=network_lif,lif_uuid=51c6f784-1ca6-11ea-b50d-00a098d7b0b9"
           ```
           <br/>
      operationId: delete_access_endpoints
      parameters:
      - description: Unique identifier of the access endpoint.
        in: path
        name: key
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Invalid request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: You are not authorized to view this resource.
        '403':
          description: Accessing the resource you are trying to reach is not allowed.
        '404':
          description: The resource you are trying to reach cannot be found.
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    get:
      description: |
        Retrieves details of an access endpoint specified by the key. Provides details such as "ip.address", "ip.netmask", and "data-protocols".
        ### Example
         Retrieving an individual access endpoint:
           <br/>
           ```
           GET "/api/storage-provider/access-endpoints/8601116e-1b56-11e9-bdec-00a098d87b4b:type=network_lif,lif_uuid=51c6f784-1ca6-11ea-b50d-00a098d7b0b9"
           ```
           <br/>
      operationId: access_endpoints_get
      parameters:
      - description: Unique identifier of the access endpoint.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/access_endpoint'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    patch:
      description: |
        Updates the attributes of an access endpoint specified by the key.
        ### Example
         Updating "gateway" and "ip.address" values of an individual access endpoint:
           <br/>
           ```
           PATCH "/api/storage-provider/access-endpoints/8601116e-1b56-11e9-bdec-00a098d87b4b:type=network_lif,lif_uuid=51c6f784-1ca6-11ea-b50d-00a098d7b0b9" '{"gateway": "10.146.56.12","ip": {"address": "10.166.83.26"}}'
           ```
           <br/>
      operationId: update_access_endpoints
      parameters:
      - description: Unique identifier of the access endpoint.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/access_endpoint'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/active-directories-mappings:
    get:
      description: "Retrieves a list of all Active Directory mappings with details
        such as, domain name or IP address of the DNS server (dns), the domain of
        the Active Directory (domain), and svm.key.\n### Example\n Retrieving a  list
        of Active Directories filtered using \"svm.uuid\":\n   <br/>\n   ```\n   GET
        \"/api/storage-provider/active-directories-mappings?svm.uuid=3714280e-fecb-11e9-8054-00a098d7b0b9\"
        \n   ```\n   <br/>"
      operationId: active_directory_mapping_collection_get
      parameters:
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.uuid
        format: uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/active_directory_mappings_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: |-
        Creates a new Active Directory mapping for an SVM. The mapping can be used to configure SVMs to enable a CIFS server while creating a file share.

        ### Required properties
        * `dns` - Fully qualified domain name or IP address of DNS server for the Active Directory.
        * `domain` - Domain of the Active Directory.
        * `username` - Username for the Active Directory.
        * `password` - Password for the Active Directory.
        * `svm.key` - Unique identifier of the SVM.
        ### Example
         Creating an Active Directory for the SVM:
           <br/>
           ```
           POST "/api/storage-provider/active-directories-mappings" '{"dns":"10.160.218.135","domain":"host.domain.com","password":"pass!w0rd","svm":{"key":"8601116e-1b56-11e9-bdec-00a098d87b4b:type=vserver,uuid=3714280e-fecb-11e9-8054-00a098d7b0b9"},"username":"CTLAdmin"}'
           ```
           <br/>
      operationId: create_active_directories
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/active_directory_mappings'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/active_directory_mappings'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to retrieve a list of all the Active Directory
        mappings or create a new Active Directory mapping in Active IQ Unified Manager for an
        SVM.  Active Directories are used to configure a CIFS server on SVMs. Active
        Directory mappings need to be configured for the SVMs before creating a CIFS
        share for an SVM that does not already have a CIFS server configured. The
        response to this API contains the newly created Active Directory mapping for
        SVMs. </br> </br> For POST and PATCH requests, this API is blocked for all
        SAN Array Clusters since the underlying platform does not support NAS operations.
      tags:
      - storage-provider
  /storage-provider/active-directories-mappings/{key}:
    get:
      description: "Retrieves details for an Active Directory mapping using the specified
        key.\n### Example\n Retrieving  an individual Active Directory:\n   <br/>\n
        \  ```\n   GET \"/api/storage-provider/active-directories-mappings/3b648c1b-d965-03b7-20da-61b791a6263c\"
        \n   ```\n   <br/>"
      operationId: active_directory_get
      parameters:
      - description: Unique identifier of the Active Directory mappings.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/active_directory_mappings'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/aggregate-capabilities:
    get:
      description: "Retrieves a list of all aggregates with Performance Service Level
        details.\n### Examples\n1.\tRetrieving a list of aggregates in the cluster
        sorted by \"name\":\n    <br/>\n    ```\n    GET \"api/storage-provider/aggregate-capabilities?order_by=name\"\n
        \   ```\n    <br/>\n2.\tRetrieving a list of aggregates filtered using \"cluster.uuid\":
        \n    <br/>\n    ```\n    GET \"api/storage-provider/aggregate-capabilities?cluster.uuid=8601116e-1b56-11e9-bdec-00a098d87b4b\"\n
        \   ```\n    <br/>"
      operationId: aggregate_capabilities_collection_get
      parameters:
      - description: Filter by key of aggregate
        in: query
        name: key
        type: string
      - description: Filter by name of aggregate
        in: query
        name: name
        type: string
      - description: Filter by uuid of aggregate
        format: uuid
        in: query
        name: uuid
        type: string
      - description: Filter by cluster.uuid
        format: uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_capabilities_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to retrieve a list of all the aggregates with
        Performance Service Levels details.
      tags:
      - storage-provider
  /storage-provider/aggregate-capabilities/{key}:
    get:
      description: |-
        Retrieves aggregate capabilities with Performance Service Level details using the key provided.
        ### Example
         Retrieving an individual aggregate in the cluster:
           <br/>
           ```
           GET "api/storage-provider/aggregate-capabilities/8601116e-1b57-11e9-bdec-00a098d87b4b:type=aggregate,uuid=60a50d22-fce3-4894-9a23-8a040cea89d8"
           ```
           <br/>
      operationId: aggregate_capabilities_get
      parameters:
      - description: Unique identifier of the aggregate capabilities.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_capability'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/data-placement:
    post:
      description: "Retrieves the best available aggregate given a list of resource
        keys and type of keys (svm, cluster, node, aggregate, or empty to consider
        all).\nThis API supports custom sorting but does not allow priorities to be
        treated equally. The preceding ones always have higher precedence than\nthe
        ones that follow after.\n### Optional properties\n* `capacity` - Required
        amount of capacity in either Megabyte, Gigabyte, Terabyte, or Petabyte. For
        example, to request 240 Gigabytes, pass in \"240G\".\nIf not provided, default
        to \"100G\"\n* `ssl_key` - PSL UUID (performance service level UUID for latency).
        If not provided, default to a PSL key with median latency.\n* `resource_keys`
        - list of resource keys for different types (aggregates, nodes, clusters,
        svms). If not provided, all resources are considered.\n* `priority_order`
        - Permutation of the list [\"volume_count\", \"size\", \"latency\", \"ops\"].
        Note that for volume_count and latency, the higher the values, the less optimal
        the resources. \n  For capacity and ops, the higher the value the more desirable
        the resources. If not provided, the default order is [\"volume_count\", \"size\",
        \"latency\", \"ops\"].\n\n### Examples:\n1. Retrieving the best available
        aggregate without any optional properties.\n    <br/>\n    ```\n    POST \"/api/storage-provider/data-placement\"
        '{}'\n    ```\n    <br/>\n2. Retrieving the best available aggregate given
        no type, no keys, capacity of 1000GB bytes, and an ssl_key uuid:\n    <br/>\n
        \   ```\n    POST \"/api/storage-provider/data-placement/\" '{\"ssl_key\":
        \"acf804ed-2a58-47b2-bf6d-e27da8b23bba\",\"capacity\": \"1000G\"}'\n    ```\n
        \   <br/>\n3. Retrieving the best available aggregate given 2 node keys, capacity
        of 1000 GB, a provided ssl_key uuid, and custom order [\"latency,size,ops,capacity\"]:\n
        \   <br/>\n    ```\n    POST \"/api/storage-provider/data-placement\" '{\"ssl_key\":
        \"acf804ed-2a58-47b2-bf6d-e27da8b23bba\",\"capacity\": \"1000G\", \"resource_keys\":
        [\"fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d036c65d-cab1-11e7-bcd5-00a09865cd13\",
        \"fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d392faf1-cab1-11e7-8d40-00a09865fe59\"],
        \"priority_order\":[\"latency,size,ops,capacity\"]}'\n    ```\n    <br/>"
      operationId: data_placement_post
      parameters:
      - description: Required Specifications for the Request
        in: body
        name: data_placement_request_object
        schema:
          $ref: '#/definitions/data_placement_request_object'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/aggregate'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/data-placement/balance:
    post:
      description: "Retrieves evaluated list of available resources given specifications
        and other filters.\nThere are certain things to note with this API:\n  - First
        the evaluation method (eval_method). Since certain fields are much more larger
        than others (e.g. latency is valued at double digits, while as size \n  can
        go to thousands), there is an implicit weight to all of them, which leads
        to metrics with naturally higher values to be weighted with more importance.\n
        \ To counter this, we provide the eval_method by rank/index (\"eval_method\":
        0) or normalization (\"eval_method\": 1).\n  - There are pros and cons to
        evaluation by rank and normalization. Ranking is perhaps the most consistent
        and indeed counters implicit weight, but it runs \n  into a problem of \"equally
        spacing\" out sorted results, hence some resources may still become overvalued/undervalued.
        For example, for 3 resources with \n  capacity 1000, 5000, and 6000 Gigabytes.
        Though resource 1 and 2 differ by a significant margin, and resource 2 and
        3 differ by a less significant margin, \n  when evaluating by rank, their
        values are their sorted order: 0, 1, 2. Evidently, resource 1's capacity is
        now undervalued.\n  - On the other hand, normalization doesn't have this problem.
        In the case of the 3 resources in the above example, their respective normalized
        values\n  become 0.0, 0.8, and 1.0 from the equation (resource[i] - resource[min])/(resource[max]-resource[min]).
        Thus, they still hold relative importance. \n  However, normalization does
        create the problem of over adjusting. Let's say you want the best available
        resource than can hold 1000GB and has latency <= 5.0\n  milliseconds, and
        you consider latency and size to have equal priority. Let's say after filtering
        to meet those requirements we have 2 resources\n  of 3000GB-4.0 ms and 2000GB-1.0ms
        in those respective statistics. As we can see, resource 1 offers 3 times the
        requested capacity and 80% the latency (125%\n  faster), and resource 2 offers
        only twice the capacity but 20% the latency (500% faster!). Clearly, resource
        2 offers better latency than resource 1 offers in\n  capacity. When these
        two metrics are considered with equal weights, obviously the 20% (500% speed)
        latency should be favored over the 300% capacity.\n  Yet, because of normalization,
        resource 1 takes on [1.0, 0.0] while resource 1 takes on [0.0, 1.0] for capacity
        and latency respectively. The latency\n  advantage is now lost! Thus, its
        value is severly underestimated now when optimizing across all metrics!\n
        \ - The current solution to this problem is simple: multiply the score by
        the resource's relative performance to the requested metric. For the aforementioned\n
        \ example, resource_one capacity score is 1.0, is now multiplied by its available
        capacity relative to the requested capacity, hence, by 3000 GB/1000 GB = 3,\n
        \ and its new score is 3.0. Like wise for resource 2. As for latency, resource_two
        latency score is 1.0 is now multiplied by 5.0 ms/1.0 ms = 5, so its latency\n
        \ score is 5.0. This accounts for relative resource performance not just to
        one another, but also the the request the client made! \n  - We also offer
        an alternative. Since customers may want to retrieve available resources themselves
        with raw statistics for each metric and do in-house\n  analysis to see which
        one is the best, there is an option to make the API call that returns raw
        stats. All one needs to do is set separate_flag to true\n  and eval_method
        to 2, which returns literal value (raw stats for each metric). Example 3 shows
        this option. Read the separate_flag field to further\n  understand the return
        parameters.\n### Optional properties\n* `capacity` - Required amount of capacity
        in either Megabyte, Gigabyte, Terabyte, or Petabyte. For example, to request
        240 Gigabytes, pass in \"240G\".\nIf not provided, default to \"100G\"\n*
        `ssl_key` - PSL UUID (performance service level UUID for latency). If not
        provided, default to a PSL key with median latency.\n* `resource_keys` - List
        of resource keys for different types (aggregates, nodes, clusters, svms).\n*
        `priority_order` - Permutation of the list [\"volume_count\", \"size\", \"latency\",
        \"ops\"]. Note that for volume_count and latency, the higher the values, the
        less optimal the resources. \n  For capacity and ops, the higher the value
        the more desirable the resources. If metrics are to be considered with equal
        weights, concatenate the strings, separated by \":\".\n  An example is [\"volume_count\",
        \"size\", \"latency:ops\"] if latency and ops want to have equal but minimum
        weights, or [\"volume_count:size\", \"latency\", \"ops\"] if volume_count\n
        \ and size have equal maximum weights. If not provided, the default order
        is [\"volume_count\", \"size\", \"latency\", \"ops\"].\n* `eval_method` -
        Integer indicator of which evaluation method, defaults to 0 (0 - by index,
        1 - normalized value, 2 - by literal value).\n* `opt_method` - Integer indicator
        of which optimization method (0 - by weighted sum method, 1 - by epsilon constraint
        method, 2 - genetic algorithm). \nOnly 0 is implemented so far. Any other
        number will throw and error. Best to leave this field untouched.\n* `seperate_flag`
        - Boolean indicator of whether the evaluations for the metrics should be separated
        or not. By default it is 0 (false). The separate flag returns\na map of each
        resource_key to its list of raw statistics. Thus, separate_flag = true if
        and eval_method = 1 must be together, otherwise an error is thrown.\n\n###
        Examples:\n1. Retrieving the evaluated list given 1 aggregate key, capacity
        of 1000 MB, an ssl_key uuid, and priority\n  list is size,latency,volume_count,ops,
        default evaluation and optimization method, default separate_flag:\n    <br/>\n
        \   ```\n    POST \"/api/storage-provider/data-placement/balance\" '{\"ssl_key\":
        \"acf804ed-2a58-47b2-bf6d-e27da8b23bba\",\"capacity\": \"1000M\",\"resource_keys\":[\"1cd8a442-86d1-11e0-ae1c-123478563412,type=aggregate,uuid=1cd8a442-86d1-11e0-ae1c-9876567890123\"],\"priority_order\":[\"size\",\"latency\",\"volume_count\",\"ops\"]}'\n
        \   ```\n    <br/>\n2. Retrieving the evaluated list given no resource keys,
        capacity of 1000 TB, and an ssl_key uuid with\n  default priority list, default
        evaluation and optimization method, default sum is false:\n    <br/>\n    ```\n
        \   POST \"/api/storage-provider/data-placement/balance\" '{\"ssl_key\": \"acf804ed-2a58-47b2-bf6d-e27da8b23bba\",\"capacity\":
        \"1000T\"}'\n    ```\n    <br/>\n3. Retrieving the best available aggregate
        given 2 node keys, capacity of 1000 GB, an ssl_key uuid, and priority\n  list
        is size,latency,volume_count,ops, eval_method = 2 and opt_method = 0, separate_flag
        is true:\n    <br/>\n    ```\n    POST \"/api/storage-provider/data-placement/balance\"
        '{\"ssl_key\": \"acf804ed-2a58-47b2-bf6d-e27da8b23bba\",\"capacity\": \"1000G\",\"resource_keys\":[\"fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d392faf1-cab1-11e7-8d40-00a09865fe59\",\"fe866c40-cab7-11e7-bcd5-00a09865cd13:type=cluster_node,uuid=d036c65d-cab1-11e7-bcd5-00a09865cd13&\"],\"priority_order\":[\"size\",\"latency\",\"volume_count\",\"ops\"],\"opt_method\":0,\"eval_method\":2,\"separate_flag\":true}'\n
        \   ```\n    <br/>"
      operationId: data_placement_balance_post
      parameters:
      - description: Required Specifications for the Request
        in: body
        name: data_placement_request_object
        schema:
          $ref: '#/definitions/data_placement_balance_request_object'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/aggregate'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/file-shares:
    get:
      description: "Retrieves a list of all files shares (CIFS shares and NFS file
        shares).\n### Examples\n1.\tRetrieving a list of file shares sorted by \"name\"
        in ascending order:\n     <br/>\n     ```\n     GET \"/api/storage-provider/file-shares?order_by=name
        asc\"\n     ```\n     <br/>\n2.\tRetrieving a file share filtered using \"uuid\":\n
        \    <br/>\n     ```\n     GET \"/api/storage-provider/file-shares?uuid=904a8799-1ccd-11ea-b60d-00a098d7b0b9\"\n
        \    ```\n     <br/>\n3.\tRetrieving a list of file shares filtered using
        \"svm.key\":\n     <br/>\n     ```\n     GET \"/api/storage-provider/file-shares?svm.key=8601116e-1b56-11e9-bdec-00a098d87b4b:type=vserver,uuid=51e7ddc0-f988-11e9-8054-00a098d7b0b9\"\n
        \    ```\n     <br/>\n4.\tRetrieving a list of  file shares filtered using
        \"assigned_performance_service_level.name\":\n     <br/>\n     ```\n     GET
        \"/api/storage-provider/file-shares?assigned_performance_service_level.name=value\"\n
        \    ```\n     <br/>\n5.\tRetrieving a list of file shares filtered using
        \"cluster.name\" and \"svm.name\":\n     <br/>\n     ```\n     GET \"/api/storage-provider/file-shares?cluster.name=AFFA201-206-6-78&&svm.name=vs_vserver\"\n
        \    ```\n     <br/>"
      operationId: fileshares_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by UUID
        format: uuid
        in: query
        name: uuid
        type: string
      - description: Filter by cluster.uuid
        format: uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by svm.uuid
        format: uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by assigned_performance_service_level.key
        in: query
        name: assigned_performance_service_level.key
        type: string
      - description: Filter by assigned_performance_service_level.name
        in: query
        name: assigned_performance_service_level.name
        type: string
      - description: Filter by assigned_performance_service_level.peak_iops
        format: int64
        in: query
        name: assigned_performance_service_level.peak_iops
        type: integer
      - description: Filter by assigned_performance_service_level.expected_iops
        format: int64
        in: query
        name: assigned_performance_service_level.expected_iops
        type: integer
      - description: Filter by recommended_performance_service_level.key
        in: query
        name: recommended_performance_service_level.key
        type: string
      - description: Filter by recommended_performance_service_level.name
        in: query
        name: recommended_performance_service_level.name
        type: string
      - description: Filter by recommended_performance_service_level.peak_iops
        format: int64
        in: query
        name: recommended_performance_service_level.peak_iops
        type: integer
      - description: Filter by recommended_performance_service_level.expected_iops
        format: int64
        in: query
        name: recommended_performance_service_level.expected_iops
        type: integer
      - description: Filter by assigned_storage_efficiency_policy.key
        in: query
        name: assigned_storage_efficiency_policy.key
        type: string
      - description: Filter by assigned_storage_efficiency_policy.name
        in: query
        name: assigned_storage_efficiency_policy.name
        type: string
      - description: Filter by space.size
        format: int64
        in: query
        name: space.size
        type: integer
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fileshare_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: "Creates a new file share on a specified SVM or aggregate. The
        POST request handles both CIFS and NFS file share creation.  The parameters
        `access_control` and `storage_efficiency_policy.key` are optional for advanced
        usage. It is an Asynchronous API and returns a Job Key. The POST request can
        also be used to create mixed access with both NFS and CIFS shares for the
        underlying volume. To use POST to create a NFS and a CIFS share, provide a
        valid export_policy along with ACLs.\n### Required properties\n* `name` -
        Name of the file share.\n* `size` - Size of the file share, in bytes.\n* `performance_service_level.key`
        - Unique identifier of the Performance Service Level.\n* `svm.key` ??? Unique
        identifier of the SVM.\n\n### Optional properties\n* `access_control`\n* `mountpoint`
        - Mount point of the file share.\n* `storage_efficiency_policy_key`\n* `type`
        - Type of the file share.\n\n\n### Important information when creating file
        shares\n* If no CIFS or NFS data interfaces are available for the specified
        SVM, then a CIFS share cannot be created. You need to create an access endpoint
        to set up the CIFS server on the SVM in such a case.\n* You can create a CIFS
        share in one of two ways:\n  - Using an Access Control List (ACL). An Active
        Directory should be configured on the SVM.\n  - Using an export policy with
        the CIFS protocol set to \"true\".\n* You can create an NFS file share using
        an export policy with NFS3/NFS4 set to \"true\". The default ACL created on
        ONTAP for ???everyone??? is deleted after a CIFS share is created. To retain it,
        you must provide the ACL parameter in the input.\n### Examples\n1.\tCreating
        a file share using mandatory parameters:\n    <br/>\n    ```\n    POST \"/api/storage-provider/file-shares\"
        '{\"mountpoint\":\"/nslm_auto_1576121589223\",\"name\":\"nslm_auto_1576121589223\",
        \"performance_service_level\":{\"key\":\"c580e645-1c73-11ea-abd9-fa163ec5db7b\"
        \   }, \"space\":{\"size\":104857600}, \"svm\":{\"key\":\"6a83adf2-1c0c-11ea-beac-005056828e5c:type\\u003dvserver,uuid\\u003df5453b89-1c8e-11ea-beac-005056828e5c\"}}'\n
        \   ```\n    <br/> \n2.  Creating  a file share using optional parameters:\n
        \   <br/>\n    ```\n    POST \"/api/storage-provider/file-shares\" '{\"access_control\":
        { \"acl\": [{\"permission\": \"read\",\"user_or_group\": \"everyone\"}],\"active_directory_mapping\":
        {\"key\": \"3b648c1b-d965-03b7-20da-61b791a6263c\"},\"export_policy\": {     \"name_tag\":
        \"ExportPolicyNameTag\", \"rules\": [{\"clients\": [{\"match\": \"0.0.0.0/0\"
        }], \"index\": 0, \"protocols\": [\"nfs3\"],      \"ro_rule\": [\"any\"],
        \"rw_rule\": [\"any\"]}] }}, \"aggregate\": {\"key\": \"a9f4ddea-e395-11e9-b660-005056a71be9:type=aggregate,uuid=02ed6b19-052d-49e1-a588-eb0e215b0e8e\"},\"mountpoint\":
        \"/fieshare_mount_point\",\"name\": \"FileShare1\", \"performance_service_level\":
        {\"key\": \"32454e73-06d3-11ea-b7d6-fe163ec4e1a5\" }, \"space\": { \"size\":
        1428754 }, \"storage_efficiency_policy\": {\"key\": \"32454e63-06d3-11ca-b7d6-fe163ea5e1a5\"
        \ }}'\n    ```\n    <br/>\n3.\tCreating a file share with a CIFS protocol:\n
        \   <br/>\n    ```\n    POST \"/api/storage-provider/file-shares\" '{\"access_control\":
        {\"export_policy\": {\"rules\": [\t{\"clients\": [{\t\"match\": \"0.0.0.1\"}],\"index\":
        2,\"protocols\": [\t\"cifs\"\t],\"ro_rule\": [\"kerberos5\"],\"rw_rule\":
        [\"any\"]}]}},\"svm\": {\"key\": \"e4f33f90-f75f-11e8-9ed9-00a098e3215f:type=vserver,uuid=f2298332-fd2a-11e8-9ed9-00a098e3215f\"},\"name\":
        \"kav_fs_v2_21\",\"space\": {\"size\": 31457280},\"performance_service_level\":
        {\"key\": \"4cb50afb-15b0-11ea-a1b1-fa163ee91dda\"}}'\n    ```\n    <br/>\n4.\tCreating
        a data protection file share:\n    <br/>\n    ```\n    POST \"/api/storage-provider/file-shares\"
        '{\"name\": \"FileShare1\", \"type\": \"dp\", \"performance_service_level\":
        {\"key\": \"64309932-ffe0-4243-b1e4-6c8413b38427\"}, \"space\": {\"size\":
        31457280}, \"svm\": {\"key\": \"fe866c40-cab7-11e7-bcd5-00a09865cd13:type=vserver,uuid=00d3acdf-d3a3-11e7-bcd5-00a09865cd13\"}}'\n
        \   ```\n    <br/>            "
      operationId: create_fileshares
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fileshare'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to retrieve a list of all files shares (CIFS
        shares and NFS file shares) with such details as, size of the file share in
        bytes, the SVM on which the workload is hosted, the Storage Efficiency Policy,
        and Performance Service Levels used. You can search, sort, limit, and filter
        data based on file share attributes. It also handles both CIFS share and NFS
        file share creation. This API also allows you to update attributes of a file
        share specified by the file share key. </br> Attributes that can be updated
        include </br> - size </br> - operational_state </br> - storage_efficiency_policy.key
        </br> - performance_service_level.key </br> - acl </br> - export_policy </br>
        </br> Note the following </br> - You cannot decrease the size of a file share
        below the current size. </br> - Export policies and ACLs on the file share
        are replaced with the input specified during each PATCH operation. </br> </br>
        Before assigning storage, the SVM must have been created and provisioned with
        the supported services (for example, NFS or CIFS). Similarly, for assigning
        Storage Efficiency Policies to the file shares, the Storage Efficiency Policies
        must be created before creating the file shares. </br> </br> For POST and
        PATCH requests, this API is blocked for all SAN Array Clusters since the underlying
        platform does not support NAS operations.
      tags:
      - storage-provider
  /storage-provider/file-shares/{key}:
    delete:
      description: |-
        Deletes the file share. When a file share is deleted, all resources associated with that file share are also deleted.
        ### Example
         Deleting an individual file share using the specified key:
           <br/>
           ```
           DELETE "/api/storage-provider/file-shares/8601117e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9"
           ```
           <br/>
      operationId: delete_fileshares
      parameters:
      - description: Unique identifier of the file share.
        in: path
        name: key
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    get:
      description: |-
        Retrieves a configuration for a single file share specified by the file share key. If there are multiple CIFS shares associated with the file share, no ACL information is provided.
        ### Example
         Retrieving an individual file share using the specified key:
           <br/>
           ```
           GET "/api/storage-provider/file-shares/8601116e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9"
           ```
           <br/>
      operationId: fileshares_get
      parameters:
      - description: Unique identifier of the file share.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fileshare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    patch:
      description: "Updates the attributes of a file share specified by the file share
        key. You can only update one attribute at a time.\n### Examples\n1.\tUpdating
        a Performance Service Level for an individual file share:\n    <br/>\n    ```\n
        \   PATCH \"/api/storage-provider/file-shares/8601117e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"performance_service_level\": {\"key\": \"32414e73-06d3-11ea-b7d6-fe163ec4e1a5\"}}'\n
        \   ```\n    <br/> \n2.\tUpdating an ACL for an individual file share:\n    <br/>\n
        \   ```\n    PATCH \"/api/storage-provider/file-shares/8601117e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"access_control\": {\"acl\": [{\"permission\": \"read\",\"user_or_group\":
        \"everyone\"}]}'\n    ```\n    <br/>\n3.\tUpdating the operational state of
        an individual file share:\n    <br/>\n    ```\n    PATCH \"/api/storage-provider/file-shares/8601117e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"operational_state\": \"offline\"}'\n    ```\n    <br/>\n4.\tUpdating the
        file share by removing the attached export policy; this results in the file
        share inheriting the parent SVM's export policy:\n    <br/>\n    ```\n    PATCH
        \"/api/storage-provider/file-shares/8601117e-1b56-11e9-bdec-00a098d87b4b:type=volume,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"access_control\":{\"export_policy\":{}}}'\n    ```\n    <br/>"
      operationId: update_fileshares
      parameters:
      - description: Unique identifier of the file share.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fileshare'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get the response from server
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/luns:
    get:
      description: "Retrieves a list of all attributes for all LUNs.\n### Examples\n1.\tRetrieving
        a list of LUNs sorted by \"name\" in descending order:\n     <br/>\n     ```\n
        \    GET \"/api/storage-provider/luns?order_by=name desc\"\n     ```\n     <br/>\n2.\tRetrieving
        \ a LUN filtered using \"uuid\": \n     <br/>\n     ```\n     GET \"/api/storage-provider/luns?uuid=904a8799-1ccd-11ea-b60d-00a098d7b0b9\"\n
        \    ```\n     <br/>\n3.\tRetrieving a  list of LUNs filtered using \"cluster.key\":
        \n     <br/>\n     ```\n     GET \"/api/storage-provider/luns?cluster.key=8601116e-1b56-11e9-bdec-00a098d87b4b:type=cluster,uuid=51e7ddc0-f988-11e9-8054-00a098d7b0b9\"\n
        \    ```\n     <br/>\n4.\tRetrieving a list of LUNs filtered using \"assigned_performance_service_level.key\":\n
        \    <br/>\n     ```\n     GET \"/api/storage-provider/luns?assigned_performance_service_level.key=1251e51b-069f-11ea-980d-fa163e82bbf2\"\n
        \    ```\n     <br/>\n5.\tRetrieving a  list of LUNs filtered using \"cluster.name\"
        and \"svm.name\":\n     <br/>\n     ```\n     GET \"/api/storage-provider/luns?cluster.name=AFFA201-206-6-78&&svm.name=vs_vserver\"\n
        \    ```\n     <br/>"
      operationId: luns_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by assigned_performance_service_level.name
        in: query
        name: assigned_performance_service_level.name
        type: string
      - description: Filter by assigned_performance_service_level.expected_iops
        format: int64
        in: query
        name: assigned_performance_service_level.expected_iops
        type: integer
      - description: Filter by assigned_performance_service_level.peak_iops
        format: int64
        in: query
        name: assigned_performance_service_level.peak_iops
        type: integer
      - description: Filter by assigned_performance_service_level.key
        in: query
        name: assigned_performance_service_level.key
        type: string
      - description: Filter by assigned_storage_efficiency_policy.name
        in: query
        name: assigned_storage_efficiency_policy.name
        type: string
      - description: Filter by assigned_storage_efficiency_policy.key
        in: query
        name: assigned_storage_efficiency_policy.key
        type: string
      - description: Filter by recommended_performance_service_level.name
        in: query
        name: recommended_performance_service_level.name
        type: string
      - description: Filter by recommended_performance_service_level.key
        in: query
        name: recommended_performance_service_level.key
        type: string
      - description: Filter by recommended_performance_service_level.expected_iops
        format: int64
        in: query
        name: recommended_performance_service_level.expected_iops
        type: integer
      - description: Filter by recommended_performance_service_level.peak_iops
        format: int64
        in: query
        name: recommended_performance_service_level.peak_iops
        type: integer
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - description: Filter by cluster.uuid
        format: uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by UUID
        format: uuid
        in: query
        name: uuid
        type: string
      - description: Filter by svm.uuid
        format: uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by volume.uuid
        format: uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by space.size
        format: int64
        in: query
        name: space.size
        type: integer
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/slo_lun_response'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: "Creates a new LUN on a specified SVM or volume, with a volume
        automatically created to hold the LUN. A LUN can also be created on an existing
        volume by providing the `volume.key` property in the request, if the volume
        is not a file share. If a volume is provided, any `svm.key` and `aggregate.key`
        properties in the request will be ignored and the volume will be resized automatically
        as per requirement. LUN mapping can also be done in the same request if `igroups`
        is provided as a part of the LUN map.\n### Required properties\n* `name` -
        Name of the LUN.\n* `size` - Size of the LUN, in bytes.\n* `performance_service_level.key`
        - Unique identifier of the Performance Service Level.\n* `os_type` - Operating
        system used.\n* `svm.key`, `volume.key`  - Unique identifier of the SVM or
        volume.\n\n### Optional properties\n* `aggregate.key` - Unique identifier
        of the aggregate.\n* `lun_map` - LUN map.\n* `storage_efficiency_policy.key`
        - Unique identifier of the Storage Efficiency Policy.\n### Examples\n1.\tCreating
        a default LUN without a LUN map:\n   <br/>\n   ```\n   POST \"/api/storage-provider/luns\"
        '{\"name\": \"lun1\",\"os_type\": \"linux\",\"performance_service_level\":
        { \"key\": \"1251e51b-069f-11ea-980d-fa163e82bbf2\"}, \"space\": {\"size\":
        1073741824 },\"storage_efficiency_policy\": {\"key\": \"ba2692a9-eec1-40a0-8a3b-8ae8263a3fad\"},\"volume\":
        { \"key\": \"7d5a59b3-953a-11e8-8857-00a098dcc959:type=volume,uuid=cb07f060-c7bd-4c03-8dcd-1e3248a392bb\",
        \"name_tag\": \"sample_volume\" }}'\n   ```\n   <br/>\n2.\tCreating a LUN
        with a LUN map:\n   <br/>\n   ```\n   POST \"/api/storage-provider/luns\"
        '{\"lun_maps\": [{\"igroup\": {\"key\": \"7d5a59b3-953a-11e8-8857-00a098dcc959:type=igroup,uuid=2c6b1477-f486-11e8-8857-00a098dcc959\"},
        \     \"logical_unit_number\": 0}],\"name\": \"lun_lunmap1\",\"os_type\":
        \"linux\",\"performance_service_level\": { \"key\": \"1251e51b-069f-11ea-980d-fa163e82bbf2\"},
        \"space\": {\"size\": 1043741824 },\"storage_efficiency_policy\": {\"key\":
        \"ba2692a9-eec1-40a0-8a3b-8ae8263a3fad\"},\"svm\": {\"key\": \"7d5a59b3-953a-11e8-8857-00a098dcc959:type=vserver,uuid=0176c2cb-fa96-11e8-b536-00a098dcc6b6\"
        }}'\n   ```\n   <br/>"
      operationId: create_luns
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/slo_lun'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to retrieve the list of all LUNs, create a
        new LUN, update properties of a LUN, though you cannot decrease the size of
        a LUN below the current size. You can search, sort, limit, and filter data
        based on LUN attributes. You can also assign and modify the Performance Service
        Levels and Storage Efficiency Policies for the LUNs. </br> </br> Before assigning
        storage, you must ensure that the SVM has been created and provisioned with
        the supported protocols. Similarly, for assigning Performance Service Levels
        to the LUNs, the Performance Service Levels must be created before creating
        the LUN.
      tags:
      - storage-provider
  /storage-provider/luns/{key}:
    delete:
      description: |-
        Deletes a LUN using the specified key. This operation deletes a LUN in the volume, but it does not shrink the volume.
        ### Example
         Deleting an individual LUN using the specified key:
           <br/>
           ```
           DELETE "/api/storage-provider/luns/8601116e-1b56-11e9-bdec-00a098d87b4b:type=lun,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9"
           ```
           <br/>
      operationId: delete_luns
      parameters:
      - description: Unique identifier of the LUN.
        in: path
        name: key
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    get:
      description: |-
        Retrieves all LUN details using the specified key.
        ### Example
         Retrieving an individual LUN using the specified key:
           <br/>
           ```
           GET "/api/storage-provider/luns/8601116e-1b56-11e9-bdec-00a098d87b4b:type=lun,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9"
           ```
           <br/>
      operationId: luns_get
      parameters:
      - description: Unique identifier of the LUN.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/slo_lun'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    patch:
      description: "Updates the properties of a LUN using the specified key. You can
        only update one property at a time. You cannot decrease the size of a LUN
        below the current size.  In the case of multiple LUNs, if the `storage_efficiency_policy.key`
        property is updated, then the space settings will also be applicable to the
        container volume.\n### Examples:\n1.\tUpdating the operational state of an
        individual LUN using the specified key:\n     <br/>\n     ```\n     PATCH
        \"/api/storage-provider/luns/8601116e-1b56-11e9-bdec-00a098d87b4b:type=lun,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"operational_state\": \"offline\"}'\n     ```\n     <br/>\n2.\tUpdating
        \ LUN map information of an individual LUN using  the specified key:\n     <br/>\n
        \    ```\n     PATCH \"/api/storage-provider/luns/8601116e-1b56-11e9-bdec-00a098d87b4b:type=lun,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"lun_maps\":[{\"igroup\": {\"key\": \"7d5a59b3-953a-11e8-8857-00a098dcc959:type=igroup,uuid=2c6b1477-f486-11e8-8857-00a098dcc959\"},\"logical_unit_number\":
        0}]}'\n     ```\n     <br/>\n3. Updating  the Storage Efficiency Policy of
        an individual LUN using  the specified      key:\n     <br/>\n     ```\n     PATCH
        \"/api/storage-provider/luns/8601116e-1b56-11e9-bdec-00a098d87b4b:type=lun,uuid=905a8799-1ccd-11ea-b50d-00a091d7b0b9\"
        '{\"storage_efficiency_policy\":{\"key\": \"ba2692a9-eec1-40a0-8a3b-8ae8263a3fad\"}}'\n
        \    ```\n     <br/>"
      operationId: update_luns
      parameters:
      - description: Unique identifier of the LUN.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/slo_lun'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/performance-service-levels:
    get:
      description: "Retrieves both system and user-defined Performance Service Levels
        and all attributes for all Performance Service Levels.\n### Examples\n 1.\tRetrieving
        \ a list of Performance Service Levels filtered using  \"iops.expected_iops_per_tb\":\n
        \   <br/>\n    ```\n    GET \"/api/storage-provider/performance-service-levels?iops.expected_iops_per_tb=421\"\n
        \   ```\n    <br/>\n 2.\tRetrieving  a list of Performance Service Levels
        filtered using \"name\":\n    <br/>\n    ```\n    GET \"/api/storage-provider/performance-service-levels?name=value\"\n
        \   ```\n    <br/>"
      operationId: performance_service_level_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by iops.absolute_min_iops
        format: int64
        in: query
        name: iops.absolute_min_iops
        type: integer
      - description: Filter by iops.expected_iops_per_tb
        format: int64
        in: query
        name: iops.expected_iops_per_tb
        type: integer
      - description: Filter by iops.peak_iops_per_tb
        format: int64
        in: query
        name: iops.peak_iops_per_tb
        type: integer
      - description: Filter by iops.peak_iops_allocation_policy
        enum:
        - used_space
        - allocated_space
        in: query
        name: iops.peak_iops_allocation_policy
        type: string
      - description: Filter by latency.excepted
        format: float
        in: query
        name: latency.excepted
        type: number
      - description: Filter by system_defined
        in: query
        name: system_defined
        type: boolean
      - description: Filter by space.used
        format: int64
        in: query
        name: space.used
        type: integer
      - description: Filter by workload_count
        format: int64
        in: query
        name: workload_count
        type: integer
      - description: Filter by create_time
        format: date-time
        in: query
        name: create_time
        type: string
      - description: Filter by update_time
        format: date-time
        in: query
        name: update_time
        type: string
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/psl_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: |
        Creates a custom Performance Service Level with the specified attributes.

        ### Required properties
        * `name` - Name of the Performance Service Level.
        * `iops.absolute_min_iops` - The absolute minimum IOPS value.
        * `iops.expected_iops_per_tb` - Minimum number of IOPS, per terabyte (TB) of storage space.
        * `iops.peak_iops_per_tb` - Maximum number of IOPS, per terabyte (TB) of storage space.
        * `iops.peak_iops_allocation_policy` - Peak IOPS allocation policy to be used.
        * `latency.expected` - Target latency, in milliseconds.
        ### Example
         Creating  a Performance Service Level with less latency:
           <br/>
           ```
           POST "/api/storage-provider/performance-service-levels" '{"iops": {"absolute_min_iops": 75, "expected_iops_per_tb": 128,"peak_iops_allocation_policy": "used_space","peak_iops_per_tb": 512}, "latency":{ "expected": 2},"name": "custom_psl"}'
           ```
           <br/>
      operationId: create_performance_service_level
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/performance_service_level'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/performance_service_level'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to list both system and user-defined Performance
        Service Levels and retrieve the attributes of all the Performance Service
        Levels. Performance Service Level is a description of the performance service
        objectives. It enables the storage provider to specify the performance and
        capacity objectives of the workload. Performance Service Levels can be provisioned
        with a file share or a LUN. </br> </br> Performance Guarantee Program (PGP)
        Performance Service Levels are designed to guarantee performance of a workload
        if it is assigned. By default, these PGP Performance Service Levels are not
        enabled and can be added through REST API. These PGP Performance Service Levels
        are system-defined and cannot be modified or deleted.
      tags:
      - storage-provider
  /storage-provider/performance-service-levels/pgp-policies:
    get:
      description: |-
        Retrieves the attributes of all Performance Guarantee Program (PGP) Performance Service Levels.
        ### Example
         Retrieving a list of prime Performance Service Levels:
           <br/>
           ```
           GET "/api/storage-provider/performance-service-levels/pgp-policies"
           ```
           <br/>
      operationId: psl_pgp_collection_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/psl_response'
        '401':
          description: You are not authorized to view this resource.
        '403':
          description: Accessing the resource you are trying to reach is not allowed.
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: |-
        Adds all Performance Guarantee Program (PGP) Performance Service Levels.
        ### Example
         Creating  prime Performance Service Levels:
           <br/>
           ```
           POST "/api/storage-provider/performance-service-levels/pgp-policies"
           ```
           <br/>
      operationId: create_psl_pgp
      parameters:
      - default: application/json
        description: Info specification
        enum:
        - application/json
        in: header
        name: Content-Type
        type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/performance-service-levels/{key}:
    delete:
      description: |-
        Deletes the specified custom Performance Service Level using the specified key. Any Performance Service Level can be deleted but not all can be deleted; one Performance Service Level should be retained on the system.
        ### Example
         Deleting an individual Performance Service Level:
           <br/>
           ```
           DELETE "/api/storage-provider/performance-service-levels/cd3916d0-7e4c-4cb4-88df-6b496faab60d"
           ```
           <br/>
      operationId: delete_performance_service_level
      parameters:
      - description: Unique identifier of the Performance Service Level.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    get:
      description: |-
        Retrieves the attributes of the specified Performance Service Level using the specified key.
        ### Example
         Retrieving an individual Performance Service Level:
           <br/>
           ```
           GET "/api/storage-provider/performance-service-levels/cd3916d0-7e4c-4cb4-88df-6b496faab60d"
           ```
           <br/>
      operationId: performance_service_level_get
      parameters:
      - description: Unique identifier of the Performance Service Level.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_service_level'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    patch:
      description: "Updates the attributes of the specified custom Performance Service
        Level using the specified key. You cannot update a Performance Service Level
        that is system-defined or is assigned to a workload.\n### Example\n Updating
        IOPS and latency of an individual Performance Service  Level: \n   <br/>\n
        \  ```\n   PATCH \"/api/storage-provider/performance-service-levels\" '{\"iops\":
        {\"absolute_min_iops\": 105, \"expected_iops_per_tb\": 178,\"peak_iops_allocation_policy\":
        \"allocation_space\",\"peak_iops_per_tb\": 512}, \"latency\":{ \"expected\":
        2}}'\n   ```\n   <br/>"
      operationId: update_performance_service_level
      parameters:
      - description: Unique identifier of the Performance Service Level.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/performance_service_level'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_service_level'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/storage-efficiency-policies:
    get:
      description: |-
        Retrieves the Storage Efficiency Policies and lists all the system-defined and user-created Storage Efficiency Policies. Also, retrieves the attributes of all Storage Efficiency Policies.
        ### Examples
        1. Retrieving a  list of Storage Efficiency Policies filtered using "system defined":
           <br/>
           ```
           GET "/api/storage-provider/storage-efficiency-policies?system_defined=true
           ```
           <br/>
        2. Retrieving a  list of Storage Efficiency Policies filtered using "deduplication":
           <br/>
           ```
           GET "/api/storage-provider/storage-efficiency-policies?deduplication
            =background"
           ```
           <br/>
      operationId: storage_efficiency_policy_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by system_defined
        in: query
        name: system_defined
        type: boolean
      - description: Filter by space_thin_provisioned
        in: query
        name: space_thin_provisioned
        type: boolean
      - description: Filter by workload_count
        format: int64
        in: query
        name: workload_count
        type: integer
      - description: Filter by compression
        enum:
        - inline
        - background
        - none
        in: query
        name: compression
        type: string
      - description: Filter by deduplication
        enum:
        - inline
        - background
        - none
        in: query
        name: deduplication
        type: string
      - description: Filter by create_time
        format: date-time
        in: query
        name: create_time
        type: string
      - description: Filter by update_time
        format: date-time
        in: query
        name: update_time
        type: string
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sep_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    post:
      description: |
        Creates a custom Storage Efficiency Policy.

        ### Required properties
        * `name` - Name of the Storage Efficiency Policy.
        ### Examples
        1. Creating a Storage Efficiency Policy using default values:
           <br/>
           ```
           POST "/api/storage-provider/storage-efficiency-policies" '{"name": "custom_sep"}'
           ```
           <br/>
        2. Creating a Storage Efficiency policy using the specified values:
           <br/>
           ```
           POST "/api/storage-provider/storage-efficiency-policies" '{"compression": "background","deduplication": "background", "name": "custom_sep","space_thin_provisioned": false }'
           ```
           <br/>
      operationId: create_storage_efficiency_policy
      parameters:
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/storage_efficiency_policy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/storage_efficiency_policy'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: |-
        You can use this API to retrieve, create, modify, and delete Storage Efficiency Policies. Storage efficiency includes using technologies that increase storage utilization and decrease storage costs, such as thin provisioning and data compression.
        </br> While creating Storage Efficiency Policies, you can use these space-saving technologies either individually or together to achieve maximum storage efficiency.
      tags:
      - storage-provider
  /storage-provider/storage-efficiency-policies/{key}:
    delete:
      description: "Deletes the specified custom Storage Efficiency Policy using the
        specified key. You cannot delete a Storage Efficiency Policy that is assigned
        to a workload. \nRetrieves the attributes of the specified Storage Efficiency
        Policy using the specified key.\n### Example\n Deleting  an individual Storage
        Efficiency Policy:\n   <br/>\n   ```\n   DELETE \"/api/storage-provider/storage-efficiency-policies/7eef2207-17f5-11ea-aa35-fa163ec5e1a5\"\n
        \  ```\n   <br/>"
      operationId: delete_storage_efficiency_policy
      parameters:
      - description: Unique identifier of the Storage Efficiency Policy.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    get:
      description: |-
        Retrieves the attributes of the specified Storage Efficiency Policy using the specified key.
        ### Example
         Retrieving an individual Storage Efficiency Policy:
           <br/>
           ```
           GET "/api/storage-provider/storage-efficiency-policies/7eef2207-17f5-11ea-aa35-fa163ec5e1a5"
           ```
           <br/>
      operationId: storage_efficiency_policy_get
      parameters:
      - description: Unique identifier of the Storage Efficiency Policy.
        in: path
        name: key
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/storage_efficiency_policy'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    patch:
      description: |-
        Updates the attributes of the specified custom Storage Efficiency Policy. You cannot update a Storage Efficiency Policy that is system-defined or is assigned to a workload.
        ### Example
         Updating an individual Storage Efficiency Policy:
           <br/>
           ```
           PATCH "/api/storage-provider/storage-efficiency-policies/7eef2207-17f5-11ea-aa35-fa163ec5e1a5" '{"compression": "inline","name": "custom_sep_modified","space_thin_provisioned": true }'
           ```
           <br/>
      operationId: update_storage_efficiency_policy
      parameters:
      - description: Unique identifier of the Storage Efficiency Policy.
        in: path
        name: key
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/storage_efficiency_policy'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/storage_efficiency_policy'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/error_response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/error_response'
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
  /storage-provider/workloads:
    get:
      description: |-
        Retrieves all workloads.
        ### Examples
         1. Retrieving a list of workloads filtered using "name":
            <br/>
            ```
            GET "/api/storage-provider/workloads?name=test_scr"
            ```
            <br/>
         2. Retrieving a list of workloads filtered using "type":
            <br/>
            ```
            GET "/api/storage-provider/workloads?type=lun"
            ```
            <br/>
         3. Retrieving a list of workloads filtered using "svm.uuid":
            <br/>
            ```
            GET "/api/storage-provider/workloads?svm.uuid=3714280e-fecb-11e9-8054-00a098d7b0b9"
            ```
            <br/>
         4. Retrieving a list of workloads filtered using "assigned_performance_service_level.key":
            <br/>
            ```
            GET "/api/storage-provider/workloads?assigned_performance_service_level.key=112480e-fecb-1e349-5654-00a098d8b0b9"
            ```
            <br/>
         5. Retrieving a list of workloads filtered using "type" and "svm.key":
            <br/>
            ```
            GET "/api/storage-provider/workloads?type=lun&svm.key=8601116e-1b56-11e9-bdec-00a098d87b4b:type=vserver,uuid=3714280e-fecb-11e9-8054-00a098d7b0b9"
            ```
            <br/>
         6. Retrieving a list of workloads filtered using "cluster.name" and "svm.name":
             <br/>
             ```
             GET "/api/storage-provider/workloads?cluster.name=AFFA201-206-6-78&&svm.name=vs_vserver"
             ```
             <br/>
      operationId: workloads_collection_get
      parameters:
      - description: Filter by key
        in: query
        name: key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by UUID
        format: uuid
        in: query
        name: uuid
        type: string
      - description: Filter by type
        enum:
        - file_share
        - lun
        - unknown
        in: query
        name: type
        type: string
      - description: Filter by assigned_performance_service_level.name
        in: query
        name: assigned_performance_service_level.name
        type: string
      - description: Filter by assigned_performance_service_level.key
        in: query
        name: assigned_performance_service_level.key
        type: string
      - description: Filter by assigned_storage_efficiency_policy.name
        in: query
        name: assigned_storage_efficiency_policy.name
        type: string
      - description: Filter by assigned_storage_efficiency_policy.key
        in: query
        name: assigned_storage_efficiency_policy.key
        type: string
      - description: Filter by space.size
        format: int64
        in: query
        name: space.size
        type: integer
      - description: Filter by space.used
        format: int64
        in: query
        name: space.used
        type: integer
      - description: Filter by recommended_performance_service_level.key
        in: query
        name: recommended_performance_service_level.key
        type: string
      - description: Filter by recommended_performance_service_level.name
        in: query
        name: recommended_performance_service_level.name
        type: string
      - description: Filter by volume.key
        in: query
        name: volume.key
        type: string
      - description: Filter by volume.uuid
        format: uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by svm.uuid
        format: uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.key
        in: query
        name: svm.key
        type: string
      - description: Filter by cluster.uuid
        format: uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.key
        in: query
        name: cluster.key
        type: string
      - $ref: '#/parameters/query'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/workload_response'
        '401':
          description: You are not authorized to view this resource.
        '500':
          description: Internal server error. Failed to get a response from the server.
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: You can use this API to retrieve a list of all the workloads for
        LUNs, CIFS shares or NFS file shares and filter, sort, and query the workloads
        based on workload attributes.
      tags:
      - storage-provider
  /storage-provider/workloads-summary:
    get:
      description: |-
        Provides a summary of the workloads provisioned through Active IQ Unified Manager.
        ### Example
         Retrieving the workloads summary:
           <br/>
           ```
           GET "/api/storage-provider/workloads-summary"
           ```
           <br/>
      operationId: workloads_summary_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/workloads_summary'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage-provider
    x-ntap-long-description:
      description: |-
        You can use this API to view a summary of the workloads provisioned through Active IQ Unified Manager. It provides cumulative at-a-glance information about the workloads that conform to the Performance Service Level, and the non-conforming workloads. You can assess the space used, available used-IOPS, available IOPS, and the number of workloads managed by each Performance Service Level. This API is available to all users of Active IQ Unified Manager, and the workloads displayed can be for any LUN, NFS file share, or CIFS share. </br>
        This API has the following two areas: </br>
        * Workloads - Provides an overview of the workloads provisioned by Active IQ Unified Manager.
        * Datacenter - Provides an overview of the total, used, and available space and IOPS in the data center, in terms of the assigned Performance Service Levels.
      tags:
      - storage-provider
  HTTP status codes:
    x-ntap-long-description:
      description: |
        ## Overview

        The following  supported HTTP error codes are returned by Active IQ Unified Manager.
        * 200 OK : Returned for success when not creating a new object
        * 201 Created : Returned for success after the creation of an object
        * 202 Accepted: Returned when a job has been successfully started, but the operation is not complete
        * 400 Bad Request: Returned if the input could not be parsed
        * 401 Unauthorized: Returned if user authentication failed
        * 403 Forbidden: Returned for authorization (RBAC) errors
        * 404 Not Found: Returned when the specified resource does not exist
        * 405 Method Not Allowed: Returned when the specified resource does not support the method (for example, POST or DELETE calls)
        * 409 Conflict: Returned when there is a conflict with a different object that must be created, modified, or deleted before this operation can succeed
        * 500 Internal Error: Returned for all other internal error codes
      tags:
      - doc
  Query And Path Parameters:
    x-ntap-long-description:
      description: |-
        ## Overview

        The following is a list of all the globally-supported query parameters. This list is intended as a quick reference for syntax purposes. The query parameters are described in more detail in other sections of this documentation. Note that multiple queries can be combined using an "&".
        <br/>
        ```
        # Query fields by value. If the value contains query characters (*|,!<>..), it must be placed inside quotation marks to avoid any misinterpretation of the query.
        <field>=<query value>
        # The number of records to collect before returning. The maximun number of records returned is limited to 1000 records. Default limit is 100 for Datacenter APIs.
        max_records=<number of records>
        # Request a customized sort ordering.
        order_by=<field [asc|desc]>[,...]
        # Offset is the starting index for the entries to be returned.
        offset=<start index of records>
        # During the API automation, the escape character (\) is required before the double quotation marks for the response field values of API. Escape character should be removed when using such values in the swagger text field. This behavior is seen in the Datacenter section > FC interface and FC ports.
      tags:
      - doc
produces:
- application/json
schemes:
- https
security:
- simple: []
securityDefinitions:
  simple:
    type: basic
swagger: '2.0'
tags:
- desciption: |
    Documentation about the AIQUM REST APIs
  name: doc
- description: |
    Manages the configuration data for your Datacenter
  name: datacenter
  x-ntap-long-description: |
    ## Overview
    These APIs enable you to retrieve the configuration data for your datacenter. Use these APIs to view information about clusters, nodes,
    aggregates, volumes, LUNs, SVMs, initiator groups, quality-of-service policies, and other elements in your datacenter.
- description: |
    Retrieves information on jobs, events and system
  name: management-server
  x-ntap-long-description: |
    ## Overview
    You can use these APIs to retrieve information about jobs. Jobs are asynchronous operations related to provisioning storage workloads. Each Job object has a unique key for identification. You can also retrive event details by using input key and view a list of all events. Using system API you can retrive information about system.
- description: |
    Manages your storage resources
  name: storage-provider
  x-ntap-long-description: |
    ## Overview
    NetApp Active IQ Unified Manager provides a set of APIs to manage your storage resources based on the service level definitions through RESTful APIs. Unified Manager enables you to manage your storage  infrastructure based on Performance Service Levels and Storage Efficiency Policies. Unified Manager provides Performance Service Levels, Storage Efficiency Policies, and storage provider APIs for provisioning, monitoring, and managing storage workloads in a data center. </br>

    The workflows described for the storage-provider APIs cover various functions of storage administration, such as viewing storage workloads, creating LUNs and file shares, managing Performance Service Levels and Storage Efficiency Policies, and assigning the policies on storage workloads.
