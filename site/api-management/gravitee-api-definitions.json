{
  "name": "NetApp Storage Management API",
  "version": "v1",
  "description": "Comprehensive NetApp storage management capabilities through secure API gateway",
  "visibility": "PRIVATE",
  "lifecycle_state": "PUBLISHED",
  "proxy": {
    "virtual_hosts": [
      {
        "host": "api.netapp-storage.company.com",
        "path": "/v1/storage"
      }
    ],
    "strip_context_path": false,
    "preserve_host": false,
    "groups": [
      {
        "name": "default-group",
        "endpoints": [
          {
            "name": "internal-apim",
            "target": "http://internal-apim.netapp.local:8080",
            "weight": 100,
            "backup": false,
            "type": "HTTP",
            "healthcheck": {
              "enabled": true,
              "schedule": "0 */1 * * * *",
              "request": {
                "method": "GET",
                "path": "/health",
                "headers": {
                  "X-Health-Check": "gravitee"
                }
              }
            }
          }
        ],
        "load_balancing": {
          "type": "ROUND_ROBIN"
        },
        "http": {
          "connectTimeout": 5000,
          "idleTimeout": 60000,
          "keepAlive": true,
          "readTimeout": 10000,
          "pipelining": false,
          "maxConcurrentConnections": 100
        }
      }
    ]
  },
  "flows": [
    {
      "name": "Security & Rate Limiting",
      "path-operator": {
        "path": "/**",
        "operator": "STARTS_WITH"
      },
      "condition": "",
      "consumers": [],
      "methods": [],
      "pre": [
        {
          "name": "oauth2",
          "policy": "oauth2",
          "configuration": {
            "oauthResource": "netapp-storage-api",
            "checkTokenEndpoint": "https://oauth.company.com/oauth/check_token",
            "clientId": "netapp-storage-api",
            "clientSecret": "${oauth.client.secret}",
            "scopes": ["storage:read", "storage:write", "storage:admin"]
          }
        },
        {
          "name": "rate-limit",
          "policy": "rate-limit",
          "configuration": {
            "rate": {
              "limit": 1000,
              "periodTime": 3600,
              "periodTimeUnit": "SECONDS"
            },
            "key": "{#request.headers['X-Gravitee-Client-Id']}"
          }
        },
        {
          "name": "quota",
          "policy": "quota",
          "configuration": {
            "quota": {
              "limit": 10000,
              "periodTime": 1,
              "periodTimeUnit": "DAYS"
            },
            "key": "{#request.headers['X-Gravitee-Client-Id']}"
          }
        },
        {
          "name": "transform-headers",
          "policy": "transform-headers",
          "configuration": {
            "addHeaders": [
              {
                "name": "X-API-Gateway",
                "value": "Gravitee"
              },
              {
                "name": "X-Request-ID",
                "value": "{#request.id}"
              }
            ],
            "removeHeaders": [
              "X-Internal-Token"
            ]
          }
        }
      ],
      "post": [
        {
          "name": "transform-response-headers",
          "policy": "transform-headers",
          "configuration": {
            "scope": "RESPONSE",
            "addHeaders": [
              {
                "name": "X-RateLimit-Remaining",
                "value": "{#context.attributes['rate-limit'].remaining}"
              },
              {
                "name": "X-Quota-Remaining",
                "value": "{#context.attributes['quota'].remaining}"
              }
            ]
          }
        }
      ],
      "enabled": true
    },
    {
      "name": "Admin Operations - Enhanced Security",
      "path-operator": {
        "path": "/admin/**",
        "operator": "STARTS_WITH"
      },
      "condition": "",
      "consumers": [],
      "methods": [],
      "pre": [
        {
          "name": "jwt",
          "policy": "jwt",
          "configuration": {
            "publicKeyResolver": "GIVEN_KEY",
            "useSystemProxy": false,
            "extractClaims": false,
            "propagateAuthHeader": true,
            "resolverParameter": "${jwt.public.key}",
            "signature": "RS256"
          }
        },
        {
          "name": "role-based-access-control",
          "policy": "groovy",
          "configuration": {
            "script": "if (!context.attributes['jwt.claims']['roles'].contains('storage-admin')) {\n  context.response().status(403).end('Insufficient privileges for admin operations')\n  return\n}"
          }
        }
      ],
      "enabled": true
    },
    {
      "name": "Circuit Breaker & Retry",
      "path-operator": {
        "path": "/**",
        "operator": "STARTS_WITH"
      },
      "condition": "",
      "consumers": [],
      "methods": [],
      "pre": [
        {
          "name": "circuit-breaker",
          "policy": "circuit-breaker",
          "configuration": {
            "failureThreshold": 5,
            "timeout": 10000,
            "resetTimeout": 30000
          }
        },
        {
          "name": "retry",
          "policy": "retry",
          "configuration": {
            "condition": "{#response.status >= 500}",
            "count": 3,
            "timeout": 2000
          }
        }
      ],
      "enabled": true
    }
  ],
  "resources": [],
  "properties": [
    {
      "key": "backend.timeout",
      "value": "30000"
    },
    {
      "key": "rate.limit.default",
      "value": "1000"
    }
  ],
  "services": {
    "discovery": {
      "enabled": false
    },
    "health-check": {
      "enabled": true,
      "schedule": "0 */1 * * * *",
      "request": {
        "method": "GET",
        "path": "/health"
      }
    },
    "logging": {
      "enabled": true,
      "mode": "CLIENT_PROXY"
    }
  },
  "tags": ["netapp", "storage", "management"],
  "metadata": [
    {
      "key": "product",
      "name": "Product",
      "value": "NetApp Storage Management"
    },
    {
      "key": "team",
      "name": "Team",
      "value": "Storage Platform Team"
    }
  ]
}
